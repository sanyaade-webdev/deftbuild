diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/include/sqstdstring.h SqPlus/include/sqstdstring.h
--- ../dnl3/SqPlus/include/sqstdstring.h	2005-09-25 17:56:20.000000000 -0400
+++ SqPlus/include/sqstdstring.h	2010-03-26 09:57:54.000000000 -0400
@@ -6,9 +6,6 @@
 extern "C" {
 #endif
 
-//#define SQRex_True 1
-//#define SQRex_False 0
-
 typedef unsigned int SQRexBool;
 typedef struct SQRex SQRex;
 
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/include/squirrel.h SqPlus/include/squirrel.h
--- ../dnl3/SqPlus/include/squirrel.h	2006-04-25 13:38:08.000000000 -0400
+++ SqPlus/include/squirrel.h	2010-03-26 09:57:54.000000000 -0400
@@ -1,5 +1,5 @@
 /*
-Copyright (c) 2003-2006 Alberto Demichelis
+Copyright (c) 2003-2008 Alberto Demichelis
 
 This software is provided 'as-is', without any 
 express or implied warranty. In no event will the 
@@ -39,6 +39,10 @@ extern "C" {
 #define SQUIRREL_API extern
 #endif
 
+#if (defined(_WIN64) || defined(_LP64))
+#define _SQ64
+#endif
+
 #ifdef _SQ64
 #ifdef _MSC_VER
 typedef __int64 SQInteger;
@@ -85,22 +89,16 @@ struct SQDelegable;
 #endif
 
 #ifdef SQUNICODE
-
 #if (defined(_MSC_VER) && _MSC_VER >= 1400) // 1400 = VS8
-#define SQUNICODE_VS8
-//#pragma message("*** VS8 Compiler")
 
 #if defined(wchar_t) //this is if the compiler considers wchar_t as native type
 #define wchar_t unsigned short
-//#pragma message("*** Defining w_char_t")
 #endif
 
 #else
-
-//#pragma message("*** VS7.1 Compiler")
-
+#if defined( _MSC_VER )
 typedef unsigned short wchar_t;
-
+#endif
 #endif
 
 typedef wchar_t SQChar;
@@ -111,7 +108,13 @@ typedef wchar_t SQChar;
 #define scstrlen	wcslen
 #define scstrtod	wcstod
 #define scstrtol	wcstol
+#ifdef _MSC_VER
 #define scatoi		_wtoi
+#else
+  #include <wchar.h>
+  #include <wctype.h>
+  #define scatoi( s ) wcstol( s, NULL, 10 )
+#endif
 #define scstrtoul	wcstoul
 #define scvsprintf	vswprintf
 #define scstrstr	wcsstr
@@ -145,8 +148,8 @@ typedef char SQChar;
 #define MAX_CHAR 0xFF
 #endif
 
-#define SQUIRREL_VERSION	_SC("Squirrel 2.1 stable")
-#define SQUIRREL_COPYRIGHT	_SC("Copyright (C) 2003-2006 Alberto Demichelis")
+#define SQUIRREL_VERSION	_SC("Squirrel 2.2.2 stable")
+#define SQUIRREL_COPYRIGHT	_SC("Copyright (C) 2003-2008 Alberto Demichelis")
 #define SQUIRREL_AUTHOR		_SC("Alberto Demichelis")
 
 #define SQ_VMSTATE_IDLE			0
@@ -231,8 +234,8 @@ typedef union tagSQObjectValue
 
 typedef struct tagSQObject
 {
-	SQObjectValue _unVal;
 	SQObjectType _type;
+	SQObjectValue _unVal;
 }SQObject;
 
 typedef struct tagSQStackInfos{
@@ -325,6 +328,7 @@ SQUIRREL_API SQRESULT sq_getclosureinfo(
 SQUIRREL_API SQRESULT sq_setnativeclosurename(HSQUIRRELVM v,SQInteger idx,const SQChar *name);
 SQUIRREL_API SQRESULT sq_setinstanceup(HSQUIRRELVM v, SQInteger idx, SQUserPointer p);
 SQUIRREL_API SQRESULT sq_getinstanceup(HSQUIRRELVM v, SQInteger idx, SQUserPointer *p,SQUserPointer typetag);
+SQUIRREL_API SQRESULT sq_setclassudsize(HSQUIRRELVM v, SQInteger idx, SQInteger udsize);
 SQUIRREL_API SQRESULT sq_newclass(HSQUIRRELVM v,SQBool hasbase);
 SQUIRREL_API SQRESULT sq_createinstance(HSQUIRRELVM v,SQInteger idx);
 SQUIRREL_API SQRESULT sq_setattributes(HSQUIRRELVM v,SQInteger idx);
@@ -336,9 +340,10 @@ SQUIRREL_API SQRESULT sq_getdefaultdeleg
 /*object manipulation*/
 SQUIRREL_API void sq_pushroottable(HSQUIRRELVM v);
 SQUIRREL_API void sq_pushregistrytable(HSQUIRRELVM v);
+SQUIRREL_API void sq_pushconsttable(HSQUIRRELVM v);
 SQUIRREL_API SQRESULT sq_setroottable(HSQUIRRELVM v);
-/*SQUIRREL_API SQRESULT sq_createslot(HSQUIRRELVM v,SQInteger idx);*/
-SQRESULT sq_newslot(HSQUIRRELVM v, SQInteger idx, SQBool bstatic);
+SQUIRREL_API SQRESULT sq_setconsttable(HSQUIRRELVM v);
+SQUIRREL_API SQRESULT sq_newslot(HSQUIRRELVM v, SQInteger idx, SQBool bstatic);
 SQUIRREL_API SQRESULT sq_deleteslot(HSQUIRRELVM v,SQInteger idx,SQBool pushval);
 SQUIRREL_API SQRESULT sq_set(HSQUIRRELVM v,SQInteger idx);
 SQUIRREL_API SQRESULT sq_get(HSQUIRRELVM v,SQInteger idx);
@@ -349,12 +354,15 @@ SQUIRREL_API SQRESULT sq_arrayappend(HSQ
 SQUIRREL_API SQRESULT sq_arraypop(HSQUIRRELVM v,SQInteger idx,SQBool pushval); 
 SQUIRREL_API SQRESULT sq_arrayresize(HSQUIRRELVM v,SQInteger idx,SQInteger newsize); 
 SQUIRREL_API SQRESULT sq_arrayreverse(HSQUIRRELVM v,SQInteger idx); 
+SQUIRREL_API SQRESULT sq_arrayremove(HSQUIRRELVM v,SQInteger idx,SQInteger itemidx);
+SQUIRREL_API SQRESULT sq_arrayinsert(HSQUIRRELVM v,SQInteger idx,SQInteger destpos);
 SQUIRREL_API SQRESULT sq_setdelegate(HSQUIRRELVM v,SQInteger idx);
 SQUIRREL_API SQRESULT sq_getdelegate(HSQUIRRELVM v,SQInteger idx);
 SQUIRREL_API SQRESULT sq_clone(HSQUIRRELVM v,SQInteger idx);
 SQUIRREL_API SQRESULT sq_setfreevariable(HSQUIRRELVM v,SQInteger idx,SQUnsignedInteger nval);
 SQUIRREL_API SQRESULT sq_next(HSQUIRRELVM v,SQInteger idx);
 SQUIRREL_API SQRESULT sq_getweakrefval(HSQUIRRELVM v,SQInteger idx);
+SQUIRREL_API SQRESULT sq_clear(HSQUIRRELVM v,SQInteger idx);
 
 /*calls*/
 SQUIRREL_API SQRESULT sq_call(HSQUIRRELVM v,SQInteger params,SQBool retval,SQBool raiseerror);
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sq/Makefile SqPlus/sq/Makefile
--- ../dnl3/SqPlus/sq/Makefile	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/sq/Makefile	1969-12-31 19:00:00.000000000 -0500
@@ -1,21 +0,0 @@
-SQUIRREL= ..
-
-
-OUT= $(SQUIRREL)/bin/sq
-INCZ= -I$(SQUIRREL)/include -I. -I$(SQUIRREL)/sqlibs
-LIBZ= -L$(SQUIRREL)/lib 
-LIB= -lsquirrel -lsqstdlib
-
-OBJS= sq.o
-	
-SRCS= sq.c
-	
-	
-sq32:
-	g++ -O2 -fno-rtti -o $(OUT) $(SRCS) $(INCZ) $(LIBZ) $(LIB)
-
-sqprof:
-	g++ -O2 -pg -fno-rtti -pie -gstabs -g3 -o $(OUT) $(SRCS) $(INCZ) $(LIBZ) $(LIB)
-	
-sq64:
-	g++ -O2 -fno-rtti -D_SQ64 -o $(OUT) $(SRCS) $(INCZ) $(LIBZ) $(LIB)
\ No newline at end of file
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sq/sq71.vcproj SqPlus/sq/sq71.vcproj
--- ../dnl3/SqPlus/sq/sq71.vcproj	2006-05-29 15:10:46.000000000 -0400
+++ SqPlus/sq/sq71.vcproj	1969-12-31 19:00:00.000000000 -0500
@@ -1,317 +0,0 @@
-<?xml version="1.0" encoding="Windows-1252"?>
-<VisualStudioProject
-	ProjectType="Visual C++"
-	Version="7.10"
-	Name="sq"
-	RootNamespace="sq"
-	SccProjectName=""
-	SccLocalPath="..">
-	<Platforms>
-		<Platform
-			Name="Win32"/>
-	</Platforms>
-	<Configurations>
-		<Configuration
-			Name="Release|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="1"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="2">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include,..\sqstdlib"
-				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE"
-				StringPooling="TRUE"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="TRUE"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/sq.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLinkerTool"
-				OutputFile="../bin/sq.exe"
-				LinkIncremental="1"
-				SuppressStartupBanner="TRUE"
-				AdditionalLibraryDirectories="../lib"
-				ProgramDatabaseFile=".\Release/sq.pdb"
-				SubSystem="1"
-				TargetMachine="1"/>
-			<Tool
-				Name="VCMIDLTool"
-				TypeLibraryName=".\Release/sq.tlb"
-				HeaderFileName=""/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCWebDeploymentTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-		<Configuration
-			Name="Debug|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="1"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="2">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include,..\sqstdlib"
-				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="2"
-				PrecompiledHeaderFile=".\Debug/sq.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				DebugInformationFormat="4"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLinkerTool"
-				OutputFile="../bin/sqD.exe"
-				LinkIncremental="2"
-				SuppressStartupBanner="TRUE"
-				AdditionalLibraryDirectories="../lib"
-				GenerateDebugInformation="TRUE"
-				ProgramDatabaseFile=".\Debug/sq.pdb"
-				SubSystem="1"
-				TargetMachine="1"/>
-			<Tool
-				Name="VCMIDLTool"
-				TypeLibraryName=".\Debug/sq.tlb"
-				HeaderFileName=""/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCWebDeploymentTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-		<Configuration
-			Name="Debug - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="1"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="1">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include,..\sqstdlib"
-				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="2"
-				PrecompiledHeaderFile=".\Debug/sq.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				DebugInformationFormat="4"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLinkerTool"
-				OutputFile="../bin/sqDU.exe"
-				LinkIncremental="2"
-				SuppressStartupBanner="TRUE"
-				AdditionalLibraryDirectories="../lib"
-				GenerateDebugInformation="TRUE"
-				ProgramDatabaseFile=".\Debug/sq.pdb"
-				SubSystem="1"
-				TargetMachine="1"/>
-			<Tool
-				Name="VCMIDLTool"
-				TypeLibraryName=".\Debug/sq.tlb"
-				HeaderFileName=""/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCWebDeploymentTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-		<Configuration
-			Name="Release - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="1"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="1">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include,..\sqstdlib"
-				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE"
-				StringPooling="TRUE"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="TRUE"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/sq.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLinkerTool"
-				OutputFile="../bin/sqU.exe"
-				LinkIncremental="1"
-				SuppressStartupBanner="TRUE"
-				AdditionalLibraryDirectories="../lib"
-				ProgramDatabaseFile=".\Release/sq.pdb"
-				SubSystem="1"
-				TargetMachine="1"/>
-			<Tool
-				Name="VCMIDLTool"
-				TypeLibraryName=".\Release/sq.tlb"
-				HeaderFileName=""/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCWebDeploymentTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-	</Configurations>
-	<References>
-	</References>
-	<Files>
-		<Filter
-			Name="Source Files"
-			Filter="cpp;c;cxx;rc;def;r;odl;idl;hpj;bat">
-			<File
-				RelativePath="sq.c">
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-		</Filter>
-		<Filter
-			Name="Header Files"
-			Filter="h;hpp;hxx;hm;inl">
-		</Filter>
-		<Filter
-			Name="Resource Files"
-			Filter="ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe">
-		</Filter>
-		<File
-			RelativePath="..\etc\test.nut">
-		</File>
-	</Files>
-	<Globals>
-	</Globals>
-</VisualStudioProject>
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sq/sq.c SqPlus/sq/sq.c
--- ../dnl3/SqPlus/sq/sq.c	2006-04-25 13:38:08.000000000 -0400
+++ SqPlus/sq/sq.c	1969-12-31 19:00:00.000000000 -0500
@@ -1,325 +0,0 @@
-/*	see copyright notice in squirrel.h */
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdarg.h>
-
-#if defined(_MSC_VER) && defined(_DEBUG)
-#include <crtdbg.h>
-#include <conio.h>
-#endif
-#include <squirrel.h>
-#include <sqstdblob.h>
-#include <sqstdsystem.h>
-#include <sqstdio.h>
-#include <sqstdmath.h>	
-#include <sqstdstring.h>
-#include <sqstdaux.h>
-
-#ifdef SQUNICODE
-#define scfprintf fwprintf
-#define scfopen	_wfopen
-#define scvprintf vwprintf
-#else
-#define scfprintf fprintf
-#define scfopen	fopen
-#define scvprintf vprintf
-#endif
-
-
-void PrintVersionInfos();
-
-#if defined(_MSC_VER) && defined(_DEBUG)
-int MemAllocHook( int allocType, void *userData, size_t size, int blockType, 
-   long requestNumber, const unsigned char *filename, int lineNumber)
-{
-//	if(requestNumber==585)_asm int 3;
-	return 1;
-}
-#endif
-
-
-SQInteger quit(HSQUIRRELVM v)
-{
-	int *done;
-	sq_getuserpointer(v,-1,(SQUserPointer*)&done);
-	*done=1;
-	return 0;
-}
-
-void printfunc(HSQUIRRELVM v,const SQChar *s,...)
-{
-	va_list vl;
-	va_start(vl, s);
-	scvprintf( s, vl);
-	va_end(vl);
-}
-
-void PrintVersionInfos()
-{
-	scfprintf(stdout,_SC("%s %s (%d bits)\n"),SQUIRREL_VERSION,SQUIRREL_COPYRIGHT,sizeof(SQInteger)*8);
-}
-
-void PrintUsage()
-{
-	scfprintf(stderr,_SC("usage: sq <options> <scriptpath [args]>.\n")
-		_SC("Available options are:\n")
-		_SC("   -c              compiles the file to bytecode(default output 'out.cnut')\n")
-		_SC("   -o              specifies output file for the -c option\n")
-		_SC("   -c              compiles only\n")
-		_SC("   -d              generates debug infos\n")
-		_SC("   -v              displays version infos\n")
-		_SC("   -h              prints help\n"));
-}
-
-#define _INTERACTIVE 0
-#define _DONE 2
-//<<FIXME>> this func is a mess
-int getargs(HSQUIRRELVM v,int argc, char* argv[])
-{
-	int i;
-	int compiles_only = 0;
-	static SQChar temp[500];
-	const SQChar *ret=NULL;
-	char * output = NULL;
-	int lineinfo=0;
-	if(argc>1)
-	{
-		int arg=1,exitloop=0;
-		while(arg < argc && !exitloop)
-		{
-
-			if(argv[arg][0]=='-')
-			{
-				switch(argv[arg][1])
-				{
-				case 'd': //DEBUG(debug infos)
-					sq_enabledebuginfo(v,1);
-					break;
-				case 'c':
-					compiles_only = 1;
-					break;
-				case 'o':
-					if(arg < argc) {
-						arg++;
-						output = argv[arg];
-					}
-					break;
-				case 'v':
-					PrintVersionInfos();
-					return _DONE;
-				
-				case 'h':
-					PrintVersionInfos();
-					PrintUsage();
-					return _DONE;
-				default:
-					PrintVersionInfos();
-					scprintf(_SC("unknown prameter '-%c'\n"),argv[arg][1]);
-					PrintUsage();
-					return _DONE;
-				}
-			}else break;
-			arg++;
-		}
-
-		// src file
-		
-		if(arg<argc) {
-			const SQChar *filename=NULL;
-#ifdef SQUNICODE
-			mbstowcs(temp,argv[arg],strlen(argv[arg]));
-			filename=temp;
-#else
-			filename=argv[arg];
-#endif
-
-			arg++;
-			sq_pushroottable(v);
-			sq_pushstring(v,_SC("ARGS"),-1);
-			sq_newarray(v,0);
-			for(i=arg;i<argc;i++)
-			{
-				const SQChar *a;
-#ifdef SQUNICODE
-				int alen=strlen(argv[i]);
-				a=sq_getscratchpad(v,alen*sizeof(SQChar));
-				mbstowcs(sq_getscratchpad(v,-1),argv[i],alen);
-				sq_getscratchpad(v,-1)[alen] = _SC('\0');
-#else
-				a=argv[i];
-#endif
-				sq_pushstring(v,a,-1);
-
-				sq_arrayappend(v,-2);
-			}
-			sq_createslot(v,-3);
-			sq_pop(v,1);
-			if(compiles_only) {
-				if(SQ_SUCCEEDED(sqstd_loadfile(v,filename,SQTrue))){
-					SQChar *outfile = _SC("out.cnut");
-					if(output) {
-#ifdef SQUNICODE
-						int len = strlen(output)+1;
-						mbstowcs(sq_getscratchpad(v,len*sizeof(SQChar)),output,len);
-						outfile = sq_getscratchpad(v,-1);
-#else
-						outfile = output;
-#endif
-					}
-					if(SQ_SUCCEEDED(sqstd_writeclosuretofile(v,outfile)))
-						return _DONE;
-				}
-			}
-			else {
-				if(SQ_SUCCEEDED(sqstd_dofile(v,filename,SQFalse,SQTrue))) {
-					return _DONE;
-				}
-			}
-			//if this point is reached an error occured
-			{
-				const SQChar *err;
-				sq_getlasterror(v);
-				if(SQ_SUCCEEDED(sq_getstring(v,-1,&err))) {
-					scprintf(_SC("Error [%s]\n"),err);
-					return _DONE;
-				}
-			}
-			
-		}
-	}
-
-	return _INTERACTIVE;
-}
-
-void Interactive(HSQUIRRELVM v)
-{
-	
-#define MAXINPUT 1024
-	SQChar buffer[MAXINPUT];
-	SQInteger blocks =0;
-	SQInteger string=0;
-	SQInteger retval=0;
-	SQInteger done=0;
-	PrintVersionInfos();
-		
-	sq_pushroottable(v);
-	sq_pushstring(v,_SC("quit"),-1);
-	sq_pushuserpointer(v,&done);
-	sq_newclosure(v,quit,1);
-	sq_setparamscheck(v,1,NULL);
-	sq_createslot(v,-3);
-	sq_pop(v,1);
-
-    while (!done) 
-	{
-		SQInteger i = 0;
-		scprintf(_SC("\nsq>"));
-		for(;;) {
-			int c;
-			if(done)return;
-			c = getchar();
-			if (c == _SC('\n')) {
-				if (i>0 && buffer[i-1] == _SC('\\'))
-				{
-					buffer[i-1] = _SC('\n');
-				}
-				else if(blocks==0)break;
-				buffer[i++] = _SC('\n');
-			}
-			else if (c==_SC('}')) {blocks--; buffer[i++] = (SQChar)c;}
-			else if(c==_SC('{') && !string){
-					blocks++;
-					buffer[i++] = (SQChar)c;
-			}
-			else if(c==_SC('"') || c==_SC('\'')){
-					string=!string;
-					buffer[i++] = (SQChar)c;
-			}
-			else if (i >= MAXINPUT-1) {
-				scfprintf(stderr, _SC("sq : input line too long\n"));
-				break;
-			}
-			else{
-				buffer[i++] = (SQChar)c;
-			}
-		}
-		buffer[i] = _SC('\0');
-		
-		if(buffer[0]==_SC('=')){
-#ifdef SQUNICODE_VS8
-			scsprintf(sq_getscratchpad(v,MAXINPUT),(size_t)_SC("return (%s)"),&buffer[1]);
-#else
-      scsprintf(sq_getscratchpad(v,MAXINPUT),_SC("return (%s)"),&buffer[1]);
-#endif
-			memcpy(buffer,sq_getscratchpad(v,-1),(scstrlen(sq_getscratchpad(v,-1))+1)*sizeof(SQChar));
-			retval=1;
-		}
-		i=scstrlen(buffer);
-		if(i>0){
-			SQInteger oldtop=sq_gettop(v);
-			if(SQ_SUCCEEDED(sq_compilebuffer(v,buffer,i,_SC("interactive console"),SQTrue))){
-				sq_pushroottable(v);
-				if(SQ_SUCCEEDED(sq_call(v,1,retval,SQTrue)) &&	retval){
-					scprintf(_SC("\n"));
-					sq_pushroottable(v);
-					sq_pushstring(v,_SC("print"),-1);
-					sq_get(v,-2);
-					sq_pushroottable(v);
-					sq_push(v,-4);
-					sq_call(v,2,SQFalse,SQTrue);
-					retval=0;
-					scprintf(_SC("\n"));
-				}
-			}
-			
-			sq_settop(v,oldtop);
-		}
-	}
-}
-
-int main(int argc, char* argv[])
-{
-	HSQUIRRELVM v;
-	
-	const SQChar *filename=NULL;
-#if defined(_MSC_VER) && defined(_DEBUG)
-	_CrtSetAllocHook(MemAllocHook);
-#endif
-	
-	v=sq_open(1024);
-	sq_setprintfunc(v,printfunc);
-
-	sq_pushroottable(v);
-
-	sqstd_register_bloblib(v);
-	sqstd_register_iolib(v);
-	sqstd_register_systemlib(v);
-	sqstd_register_mathlib(v);
-	sqstd_register_stringlib(v);
-
-	//aux library
-	//sets error handlers
-	sqstd_seterrorhandlers(v);
-
-	//gets arguments
-	switch(getargs(v,argc,argv))
-	{
-	case _INTERACTIVE:
-		Interactive(v);
-		break;
-	case _DONE:
-	default: 
-		break;
-	}
-
-	sq_close(v);
-	
-#if defined(_MSC_VER) && defined(_DEBUG)
-	_getch();
-	_CrtMemDumpAllObjectsSince( NULL );
-#endif
-	return 0;
-}
-
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sq/sq.cbp SqPlus/sq/sq.cbp
--- ../dnl3/SqPlus/sq/sq.cbp	2006-04-25 17:05:30.000000000 -0400
+++ SqPlus/sq/sq.cbp	1969-12-31 19:00:00.000000000 -0500
@@ -1,129 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE CodeBlocks_project_file>
-<CodeBlocks_project_file>
-	<FileVersion major="1" minor="1"/>
-	<Project>
-		<Option title="sq"/>
-		<Option makefile="Makefile"/>
-		<Option makefile_is_custom="0"/>
-		<Option compiler="0"/>
-		<Build>
-			<Target title="Release">
-				<Option output="..\bin\sq.exe"/>
-				<Option working_dir="."/>
-				<Option object_output="Release"/>
-				<Option deps_output=".deps"/>
-				<Option external_deps="..\lib\libsquirrel.a;..\lib\libsqstdlib.a;"/>
-				<Option type="1"/>
-				<Option compiler="0"/>
-				<Option projectResourceIncludeDirsRelation="1"/>
-				<Compiler>
-					<Add option="-DWIN32"/>
-					<Add option="-DNDEBUG"/>
-					<Add option="-D_CONSOLE"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add option="-W"/>
-					<Add option="-O2"/>
-					<Add directory="..\include"/>
-					<Add directory="..\sqstdlib"/>
-				</Compiler>
-				<Linker>
-					<Add library="..\lib\libsquirrel.a"/>
-					<Add library="..\lib\libsqstdlib.a"/>
-					<Add directory="..\lib"/>
-				</Linker>
-			</Target>
-			<Target title="Debug">
-				<Option output="..\bin\sqD.exe"/>
-				<Option working_dir="."/>
-				<Option object_output="Debug"/>
-				<Option deps_output=".deps"/>
-				<Option external_deps="..\lib\libsquirrelD.a;..\lib\libsqstdlibD.a;"/>
-				<Option type="1"/>
-				<Option compiler="0"/>
-				<Option projectResourceIncludeDirsRelation="1"/>
-				<Compiler>
-					<Add option="-DWIN32"/>
-					<Add option="-D_DEBUG"/>
-					<Add option="-D_CONSOLE"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add option="-W"/>
-					<Add option="-O0"/>
-					<Add directory="..\include"/>
-					<Add directory="..\sqstdlib"/>
-				</Compiler>
-				<Linker>
-					<Add library="..\lib\libsquirrelD.a"/>
-					<Add library="..\lib\libsqstdlibD.a"/>
-					<Add directory="..\lib"/>
-				</Linker>
-			</Target>
-			<Target title="Debug - Unicode">
-				<Option output="..\bin\sqDU.exe"/>
-				<Option working_dir="."/>
-				<Option object_output="Debug - Unicode"/>
-				<Option deps_output=".deps"/>
-				<Option external_deps="..\lib\libsquirrelDU.a;..\lib\libsqstdlibDU.a;"/>
-				<Option type="1"/>
-				<Option compiler="0"/>
-				<Option projectResourceIncludeDirsRelation="1"/>
-				<Compiler>
-					<Add option="-DWIN32"/>
-					<Add option="-D_DEBUG"/>
-					<Add option="-D_CONSOLE"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add option="-W"/>
-					<Add option="-O0"/>
-					<Add directory="..\include"/>
-					<Add directory="..\sqstdlib"/>
-				</Compiler>
-				<Linker>
-					<Add library="..\lib\libsquirrelDU.a"/>
-					<Add library="..\lib\libsqstdlibDU.a"/>
-					<Add directory="..\lib"/>
-				</Linker>
-			</Target>
-			<Target title="Release - Unicode">
-				<Option output="..\bin\sqU.exe"/>
-				<Option working_dir="."/>
-				<Option object_output="Release - Unicode"/>
-				<Option deps_output=".deps"/>
-				<Option external_deps="..\lib\libsquirrelU.a;..\lib\libsqstdlibU.a;"/>
-				<Option type="1"/>
-				<Option compiler="0"/>
-				<Option projectResourceIncludeDirsRelation="1"/>
-				<Compiler>
-					<Add option="-DWIN32"/>
-					<Add option="-DNDEBUG"/>
-					<Add option="-D_CONSOLE"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add option="-W"/>
-					<Add option="-O2"/>
-					<Add directory="..\include"/>
-					<Add directory="..\sqstdlib"/>
-				</Compiler>
-				<Linker>
-					<Add library="..\lib\libsquirrelU.a"/>
-					<Add library="..\lib\libsqstdlibU.a"/>
-					<Add directory="..\lib"/>
-				</Linker>
-			</Target>
-		</Build>
-		<Unit filename="..\etc\test.nut">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sq.c">
-			<Option compilerVar="CC"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-	</Project>
-</CodeBlocks_project_file>
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sq/sq.vcproj SqPlus/sq/sq.vcproj
--- ../dnl3/SqPlus/sq/sq.vcproj	2006-03-26 18:21:16.000000000 -0500
+++ SqPlus/sq/sq.vcproj	1969-12-31 19:00:00.000000000 -0500
@@ -1,454 +0,0 @@
-<?xml version="1.0" encoding="Windows-1252"?>
-<VisualStudioProject
-	ProjectType="Visual C++"
-	Version="8.00"
-	Name="sq"
-	ProjectGUID="{984683B6-E68A-4CCB-89C9-2D89527144A6}"
-	RootNamespace="sq"
-	SccLocalPath=".."
-	>
-	<Platforms>
-		<Platform
-			Name="Win32"
-		/>
-	</Platforms>
-	<ToolFiles>
-	</ToolFiles>
-	<Configurations>
-		<Configuration
-			Name="Release|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="1"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-				TypeLibraryName=".\Release/sq.tlb"
-				HeaderFileName=""
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include,..\sqstdlib"
-				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;_CRT_SECURE_NO_DEPRECATE"
-				StringPooling="true"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="true"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/sq.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLinkerTool"
-				OutputFile="../bin/sq.exe"
-				LinkIncremental="1"
-				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="../lib"
-				ProgramDatabaseFile=".\Release/sq.pdb"
-				SubSystem="1"
-				TargetMachine="1"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCAppVerifierTool"
-			/>
-			<Tool
-				Name="VCWebDeploymentTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Debug|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="1"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-				TypeLibraryName=".\Debug/sq.tlb"
-				HeaderFileName=""
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include,..\sqstdlib"
-				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;_CRT_SECURE_NO_DEPRECATE"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Debug/sq.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				DebugInformationFormat="4"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLinkerTool"
-				OutputFile="../bin/sqD.exe"
-				LinkIncremental="2"
-				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="../lib"
-				GenerateDebugInformation="true"
-				ProgramDatabaseFile=".\Debug/sq.pdb"
-				SubSystem="1"
-				TargetMachine="1"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCAppVerifierTool"
-			/>
-			<Tool
-				Name="VCWebDeploymentTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Debug - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="1"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="1"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-				TypeLibraryName=".\Debug/sq.tlb"
-				HeaderFileName=""
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include,..\sqstdlib"
-				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;_CRT_SECURE_NO_DEPRECATE"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Debug/sq.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				DebugInformationFormat="4"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLinkerTool"
-				OutputFile="../bin/sqDU.exe"
-				LinkIncremental="2"
-				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="../lib"
-				GenerateDebugInformation="true"
-				ProgramDatabaseFile=".\Debug/sq.pdb"
-				SubSystem="1"
-				TargetMachine="1"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCAppVerifierTool"
-			/>
-			<Tool
-				Name="VCWebDeploymentTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Release - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="1"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="1"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-				TypeLibraryName=".\Release/sq.tlb"
-				HeaderFileName=""
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include,..\sqstdlib"
-				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;_CRT_SECURE_NO_DEPRECATE"
-				StringPooling="true"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="true"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/sq.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLinkerTool"
-				OutputFile="../bin/sqU.exe"
-				LinkIncremental="1"
-				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="../lib"
-				ProgramDatabaseFile=".\Release/sq.pdb"
-				SubSystem="1"
-				TargetMachine="1"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCAppVerifierTool"
-			/>
-			<Tool
-				Name="VCWebDeploymentTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-	</Configurations>
-	<References>
-	</References>
-	<Files>
-		<Filter
-			Name="Source Files"
-			Filter="cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"
-			>
-			<File
-				RelativePath="sq.c"
-				>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-		</Filter>
-		<Filter
-			Name="Header Files"
-			Filter="h;hpp;hxx;hm;inl"
-			>
-		</Filter>
-		<Filter
-			Name="Resource Files"
-			Filter="ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe"
-			>
-		</Filter>
-		<File
-			RelativePath="..\etc\test.nut"
-			>
-		</File>
-	</Files>
-	<Globals>
-	</Globals>
-</VisualStudioProject>
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqplus/sqplus.h SqPlus/sqplus/sqplus.h
--- ../dnl3/SqPlus/sqplus/sqplus.h	2006-07-08 02:28:32.000000000 -0400
+++ SqPlus/sqplus/sqplus.h	2010-03-26 09:57:54.000000000 -0400
@@ -18,7 +18,7 @@
   #include <malloc.h>
 #endif
 #include <memory.h>
-#if defined(_MSC_VER) || defined(__BORLANDC__) 
+#if defined(_MSC_VER) || defined(__BORLANDC__) || defined( _WIN32_WCE )
   #include <tchar.h>
   #ifndef UNICODE
     #define SCSNPRINTF _snprintf
@@ -28,10 +28,16 @@
     #define SCPUTS _putws
   #endif
 #else
+  #ifndef UNICODE
   #define _T(n) n
   #define SCSNPRINTF snprintf
-  #include <stdio.h> // for snprintf
   #define SCPUTS puts
+  #else
+  	#define _T(n) L##n
+    #define SCSNPRINTF wprintf
+    #define SCPUTS wputs
+  #endif
+  #include <stdio.h> // for snprintf
 #endif
 
 #ifndef _WINDEF_
@@ -48,6 +54,7 @@
 #define SQ_CALL_RAISE_ERROR SQFalse
 #endif
 
+#include <string>
 #include "squirrel.h"
 
 #include "SquirrelObject.h"
@@ -76,7 +83,7 @@ namespace SqPlus {
 //#define SQPLUS_CONST_OPT
 
 // === Uncomment to support std::string ===
-//#define SQPLUS_SUPPORT_STD_STRING
+#define SQPLUS_SUPPORT_STD_STRING
 
 // === Uncomment to support NULL INSTANCE arguments ===
 //#define SQPLUS_SUPPORT_NULL_INSTANCES
@@ -585,86 +592,6 @@ T * GetInstance(HSQUIRRELVM v,SQInteger 
 //////////// END Generalized Class/Struct Instance Support ///////////////
 //////////////////////////////////////////////////////////////////////////
 
-// === BEGIN Function Call Handlers ===
-
-inline void Push(HSQUIRRELVM v,char value)           { sq_pushinteger(v,value); }
-inline void Push(HSQUIRRELVM v,unsigned char value)  { sq_pushinteger(v,value); }
-inline void Push(HSQUIRRELVM v,short value)          { sq_pushinteger(v,value); }
-inline void Push(HSQUIRRELVM v,unsigned short value) { sq_pushinteger(v,value); }
-inline void Push(HSQUIRRELVM v,int value)            { sq_pushinteger(v,value); }
-inline void Push(HSQUIRRELVM v,unsigned int value)   { sq_pushinteger(v,value); }
-inline void Push(HSQUIRRELVM v,long value)           { sq_pushinteger(v,value); }
-inline void Push(HSQUIRRELVM v,unsigned long value)  { sq_pushinteger(v,value); }
-inline void Push(HSQUIRRELVM v,double value)         { sq_pushfloat(v,(FLOAT)value); }
-inline void Push(HSQUIRRELVM v,float value)          { sq_pushfloat(v,(FLOAT)value); }
-inline void Push(HSQUIRRELVM v,const SQChar * value) { sq_pushstring(v,value,-1); }
-inline void Push(HSQUIRRELVM v,const SquirrelNull &) { sq_pushnull(v); }
-inline void Push(HSQUIRRELVM v,SQFUNCTION value)     { sq_pushuserpointer(v,(void*)value); }
-inline void Push(HSQUIRRELVM v,SQAnythingPtr value)  { sq_pushuserpointer(v,(void*)value); } // Cast to SQAnythingPtr instead of void * if USE_ARGUMENT_DEPENDANT_OVERLOADS can't be used by your compiler.
-inline void Push(HSQUIRRELVM v,SquirrelObject & so)  { sq_pushobject(v,so.GetObjectHandle()); }
-
-
-#define USE_ARGUMENT_DEPENDANT_OVERLOADS
-#ifdef USE_ARGUMENT_DEPENDANT_OVERLOADS
-#ifdef _MSC_VER
-#pragma warning (disable:4675) // Disable warning: "resolved overload was found by argument-dependent lookup" when class/struct pointers are used as function arguments.
-#endif
-// === BEGIN Argument Dependent Overloads ===
-inline void Push(HSQUIRRELVM v,bool value)                  { sq_pushbool(v,value); }               // Pass bool as int if USE_ARGUMENT_DEPENDANT_OVERLOADS can't be used by your compiler.
-inline void Push(HSQUIRRELVM v,const void * value)          { sq_pushuserpointer(v,(void*)value); } // Pass SQAnythingPtr instead of void * "                                             "
-inline void Push(HSQUIRRELVM v,const SQUserPointer & value) { sq_pushuserpointer(v,(void*)value); }
-// === END Argument Dependent Overloads ===
-#endif
-
-#define SQPLUS_CHECK_GET(res) if (!SQ_SUCCEEDED(res)) throw SquirrelError(_T("sq_get*() failed (type error)"))
-
-inline bool	Match(TypeWrapper<bool>,HSQUIRRELVM v,int idx)           { return sq_gettype(v,idx) == OT_BOOL; }
-inline bool	Match(TypeWrapper<char>,HSQUIRRELVM v,int idx)           { return sq_gettype(v,idx) == OT_INTEGER; }
-inline bool	Match(TypeWrapper<unsigned char>,HSQUIRRELVM v, int idx) { return sq_gettype(v,idx) == OT_INTEGER; }
-inline bool	Match(TypeWrapper<short>,HSQUIRRELVM v,int idx)          { return sq_gettype(v,idx) == OT_INTEGER; }
-inline bool	Match(TypeWrapper<unsigned short>,HSQUIRRELVM v,int idx) { return sq_gettype(v,idx) == OT_INTEGER; }
-inline bool	Match(TypeWrapper<int>,HSQUIRRELVM v,int idx)            { return sq_gettype(v,idx) == OT_INTEGER; }
-inline bool	Match(TypeWrapper<unsigned int>,HSQUIRRELVM v,int idx)   { return sq_gettype(v,idx) == OT_INTEGER; }
-inline bool	Match(TypeWrapper<long>,HSQUIRRELVM v,int idx)           { return sq_gettype(v,idx) == OT_INTEGER; }
-inline bool	Match(TypeWrapper<unsigned long>,HSQUIRRELVM v,int idx)  { return sq_gettype(v,idx) == OT_INTEGER; }
-inline bool	Match(TypeWrapper<float>,HSQUIRRELVM v,int idx)          { int type = sq_gettype(v,idx); return type == OT_FLOAT; }
-inline bool	Match(TypeWrapper<double>,HSQUIRRELVM v,int idx)         { int type = sq_gettype(v,idx); return type == OT_FLOAT; }
-inline bool	Match(TypeWrapper<const SQChar *>,HSQUIRRELVM v,int idx) { return sq_gettype(v,idx) == OT_STRING; }
-inline bool	Match(TypeWrapper<HSQUIRRELVM>,HSQUIRRELVM v,int idx)    { return true; } // See Get() for HSQUIRRELVM below (v is always present).
-inline bool	Match(TypeWrapper<void*>,HSQUIRRELVM v,int idx)          { return sq_gettype(v,idx) == OT_USERPOINTER; }
-inline bool	Match(TypeWrapper<SquirrelObject>,HSQUIRRELVM v,int idx) { return true; } // See sq_getstackobj(): always returns true.
-
-inline void           Get(TypeWrapper<void>,HSQUIRRELVM v,int)                {}
-inline bool           Get(TypeWrapper<bool>,HSQUIRRELVM v,int idx)            { SQBool b; SQPLUS_CHECK_GET(sq_getbool(v,idx,&b)); return b != 0; }
-inline char           Get(TypeWrapper<char>,HSQUIRRELVM v,int idx)            { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<char>(i); }
-inline unsigned char  Get(TypeWrapper<unsigned char>,HSQUIRRELVM v,int idx)   { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<unsigned char>(i); }
-inline short          Get(TypeWrapper<short>,HSQUIRRELVM v,int idx)           { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<short>(i); }
-inline unsigned short	Get(TypeWrapper<unsigned short>,HSQUIRRELVM v,int idx)  { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<unsigned short>(i); }
-inline int            Get(TypeWrapper<int>,HSQUIRRELVM v,int idx)             { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return i; }
-inline unsigned int   Get(TypeWrapper<unsigned int>,HSQUIRRELVM v,int idx)    { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<unsigned int>(i); }
-inline long           Get(TypeWrapper<long>,HSQUIRRELVM v,int idx)            { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<long>(i); }
-inline unsigned long  Get(TypeWrapper<unsigned long>,HSQUIRRELVM v,int idx)   { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<unsigned long>(i); }
-inline float          Get(TypeWrapper<float>,HSQUIRRELVM v,int idx)           { FLOAT f; SQPLUS_CHECK_GET(sq_getfloat(v,idx,&f)); return f; }
-inline double         Get(TypeWrapper<double>,HSQUIRRELVM v,int idx)          { FLOAT f; SQPLUS_CHECK_GET(sq_getfloat(v,idx,&f)); return static_cast<double>(f); }
-inline const SQChar * Get(TypeWrapper<const SQChar *>,HSQUIRRELVM v,int idx)  { const SQChar * s; SQPLUS_CHECK_GET(sq_getstring(v,idx,&s)); return s; }
-inline SquirrelNull   Get(TypeWrapper<SquirrelNull>,HSQUIRRELVM v,int idx)    { (void)v, (void)idx; return SquirrelNull();  }
-inline void *         Get(TypeWrapper<void *>,HSQUIRRELVM v,int idx)          { SQUserPointer p; SQPLUS_CHECK_GET(sq_getuserpointer(v,idx,&p)); return p; }
-inline HSQUIRRELVM    Get(TypeWrapper<HSQUIRRELVM>,HSQUIRRELVM v,int /*idx*/) { sq_poptop(v); return v; } // sq_poptop(v): remove UserData from stack so GetParamCount() matches normal behavior.
-inline SquirrelObject Get(TypeWrapper<SquirrelObject>,HSQUIRRELVM v,int idx)  { HSQOBJECT o; SQPLUS_CHECK_GET(sq_getstackobj(v,idx,&o)); return SquirrelObject(v,o); }
-
-#ifdef SQPLUS_SUPPORT_STD_STRING
-inline void Push(HSQUIRRELVM v,const std::string& value) { sq_pushstring(v,value.c_str(),-1); }
-inline bool Match(TypeWrapper<const std::string&>, HSQUIRRELVM v, int idx) { return sq_gettype(v,idx) == OT_STRING; }
-inline std::string Get(TypeWrapper<const std::string&>,HSQUIRRELVM v,int idx) { const SQChar * s; SQPLUS_CHECK_GET(sq_getstring(v,idx,&s)); return std::string(s); } 
-#endif
-
-// GetRet() restores the stack for SquirrelFunction<>() calls.
-template<typename RT>
-inline RT GetRet(TypeWrapper<RT>,HSQUIRRELVM v,int idx) { RT ret = Get(TypeWrapper<RT>(),v,idx); sq_pop(v,2); return ret; } // sq_pop(v,2): restore stack after function call.
-
-// Specialization to support void return type.
-inline void GetRet(TypeWrapper<void>,HSQUIRRELVM v,int idx) { sq_pop(v,2); }
-
 #ifndef SQ_SKIP_ARG_ASSERT
   #define sq_argassert(arg,_index_) if (!Match(TypeWrapper<P##arg>(),v,_index_)) return sq_throwerror(v,_T("Incorrect function argument"))
 #else
@@ -790,7 +717,7 @@ struct ReturnSpecialization {
       Get(TypeWrapper<P4>(),v,index + 3),
       Get(TypeWrapper<P5>(),v,index + 4),
       Get(TypeWrapper<P6>(),v,index + 5),
-      Get(TypeWrapper<P6>(),v,index + 6)
+      Get(TypeWrapper<P7>(),v,index + 6)
     );
     Push(v,ret);
     return 1;
@@ -1514,7 +1441,7 @@ struct SquirrelFunction {
   // Since some constructors require a SquirrelVM to be passed in, it seems reasonable to require all constructors to require it.
   SquirrelFunction(SquirrelVM& vm) : v(vm.GetVMHandle()), pSquirrelVM(&vm), func(v), object(v) {}
   SquirrelFunction(SquirrelVM& vm,const SquirrelObject & _object,const SquirrelObject & _func) : v(vm.GetVMHandle()), pSquirrelVM(&vm), object(_object), func(_func) {}
-  SquirrelFunction(SquirrelVM& vm,const SquirrelObject & _object,const SQChar * name) : v(vm.GetVMHandle()), pSquirrelVM(&vm), object(_object), func(v) {
+  SquirrelFunction(SquirrelVM& vm,const SquirrelObject & _object,const SQChar * name) : v(vm.GetVMHandle()), pSquirrelVM(&vm), func(v), object(_object) {
     func   = object.GetValue(name);
   }
   SquirrelFunction(SquirrelVM& vm,const SQChar * name) : v(vm.GetVMHandle()), pSquirrelVM(&vm), object(v), func(v) {
@@ -1881,6 +1808,92 @@ struct SQClassDef {
 
 };
 
+// === BEGIN Function Call Handlers ===
+
+inline void Push(HSQUIRRELVM v,char value)           { sq_pushinteger(v,value); }
+inline void Push(HSQUIRRELVM v,unsigned char value)  { sq_pushinteger(v,value); }
+inline void Push(HSQUIRRELVM v,short value)          { sq_pushinteger(v,value); }
+inline void Push(HSQUIRRELVM v,unsigned short value) { sq_pushinteger(v,value); }
+inline void Push(HSQUIRRELVM v,int value)            { sq_pushinteger(v,value); }
+inline void Push(HSQUIRRELVM v,unsigned int value)   { sq_pushinteger(v,value); }
+inline void Push(HSQUIRRELVM v,long value)           { sq_pushinteger(v,value); }
+inline void Push(HSQUIRRELVM v,unsigned long value)  { sq_pushinteger(v,value); }
+inline void Push(HSQUIRRELVM v,double value)         { sq_pushfloat(v,(FLOAT)value); }
+inline void Push(HSQUIRRELVM v,float value)          { sq_pushfloat(v,(FLOAT)value); }
+inline void Push(HSQUIRRELVM v,const SQChar * value) { sq_pushstring(v,value,-1); }
+inline void Push(HSQUIRRELVM v,const SquirrelNull &) { sq_pushnull(v); }
+inline void Push(HSQUIRRELVM v,SQFUNCTION value)     { sq_pushuserpointer(v,(void*)value); }
+inline void Push(HSQUIRRELVM v,SQAnythingPtr value)  { sq_pushuserpointer(v,(void*)value); } // Cast to SQAnythingPtr instead of void * if USE_ARGUMENT_DEPENDANT_OVERLOADS can't be used by your compiler.
+inline void Push(HSQUIRRELVM v,SquirrelObject & so)  { sq_pushobject(v,so.GetObjectHandle()); }
+
+
+#define USE_ARGUMENT_DEPENDANT_OVERLOADS
+#ifdef USE_ARGUMENT_DEPENDANT_OVERLOADS
+#ifdef _MSC_VER
+#pragma warning (disable:4675) // Disable warning: "resolved overload was found by argument-dependent lookup" when class/struct pointers are used as function arguments.
+#endif
+// === BEGIN Argument Dependent Overloads ===
+inline void Push(HSQUIRRELVM v,bool value)                  { sq_pushbool(v,value); }               // Pass bool as int if USE_ARGUMENT_DEPENDANT_OVERLOADS can't be used by your compiler.
+inline void Push(HSQUIRRELVM v,const void * value)          { sq_pushuserpointer(v,(void*)value); } // Pass SQAnythingPtr instead of void * "                                             "
+inline void Push(HSQUIRRELVM v,const SQUserPointer & value) { sq_pushuserpointer(v,(void*)value); }
+// === END Argument Dependent Overloads ===
+#endif
+
+#define SQPLUS_CHECK_GET(res) if (!SQ_SUCCEEDED(res)) throw SquirrelError(_T("sq_get*() failed (type error)"))
+
+inline bool	Match(TypeWrapper<bool>,HSQUIRRELVM v,int idx)           { return sq_gettype(v,idx) == OT_BOOL; }
+inline bool	Match(TypeWrapper<char>,HSQUIRRELVM v,int idx)           { return sq_gettype(v,idx) == OT_INTEGER; }
+inline bool	Match(TypeWrapper<unsigned char>,HSQUIRRELVM v, int idx) { return sq_gettype(v,idx) == OT_INTEGER; }
+inline bool	Match(TypeWrapper<short>,HSQUIRRELVM v,int idx)          { return sq_gettype(v,idx) == OT_INTEGER; }
+inline bool	Match(TypeWrapper<unsigned short>,HSQUIRRELVM v,int idx) { return sq_gettype(v,idx) == OT_INTEGER; }
+inline bool	Match(TypeWrapper<int>,HSQUIRRELVM v,int idx)            { return sq_gettype(v,idx) == OT_INTEGER; }
+inline bool	Match(TypeWrapper<unsigned int>,HSQUIRRELVM v,int idx)   { return sq_gettype(v,idx) == OT_INTEGER; }
+inline bool	Match(TypeWrapper<long>,HSQUIRRELVM v,int idx)           { return sq_gettype(v,idx) == OT_INTEGER; }
+inline bool	Match(TypeWrapper<unsigned long>,HSQUIRRELVM v,int idx)  { return sq_gettype(v,idx) == OT_INTEGER; }
+inline bool	Match(TypeWrapper<float>,HSQUIRRELVM v,int idx)          { int type = sq_gettype(v,idx); return type == OT_FLOAT; }
+inline bool	Match(TypeWrapper<double>,HSQUIRRELVM v,int idx)         { int type = sq_gettype(v,idx); return type == OT_FLOAT; }
+inline bool	Match(TypeWrapper<const SQChar *>,HSQUIRRELVM v,int idx) { return sq_gettype(v,idx) == OT_STRING; }
+inline bool	Match(TypeWrapper<HSQUIRRELVM>,HSQUIRRELVM v,int idx)    { return true; } // See Get() for HSQUIRRELVM below (v is always present).
+inline bool	Match(TypeWrapper<void*>,HSQUIRRELVM v,int idx)          { return sq_gettype(v,idx) == OT_USERPOINTER; }
+inline bool	Match(TypeWrapper<SquirrelObject>,HSQUIRRELVM v,int idx) { return true; } // See sq_getstackobj(): always returns true.
+
+inline void           Get(TypeWrapper<void>,HSQUIRRELVM v,int)                {}
+inline bool           Get(TypeWrapper<bool>,HSQUIRRELVM v,int idx)            { SQBool b; SQPLUS_CHECK_GET(sq_getbool(v,idx,&b)); return b != 0; }
+inline char           Get(TypeWrapper<char>,HSQUIRRELVM v,int idx)            { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<char>(i); }
+inline unsigned char  Get(TypeWrapper<unsigned char>,HSQUIRRELVM v,int idx)   { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<unsigned char>(i); }
+inline short          Get(TypeWrapper<short>,HSQUIRRELVM v,int idx)           { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<short>(i); }
+inline unsigned short	Get(TypeWrapper<unsigned short>,HSQUIRRELVM v,int idx)  { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<unsigned short>(i); }
+inline int            Get(TypeWrapper<int>,HSQUIRRELVM v,int idx)             { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return i; }
+inline unsigned int   Get(TypeWrapper<unsigned int>,HSQUIRRELVM v,int idx)    { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<unsigned int>(i); }
+inline long           Get(TypeWrapper<long>,HSQUIRRELVM v,int idx)            { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<long>(i); }
+inline unsigned long  Get(TypeWrapper<unsigned long>,HSQUIRRELVM v,int idx)   { INT i; SQPLUS_CHECK_GET(sq_getinteger(v,idx,&i)); return static_cast<unsigned long>(i); }
+inline float          Get(TypeWrapper<float>,HSQUIRRELVM v,int idx)           { FLOAT f; SQPLUS_CHECK_GET(sq_getfloat(v,idx,&f)); return f; }
+inline double         Get(TypeWrapper<double>,HSQUIRRELVM v,int idx)          { FLOAT f; SQPLUS_CHECK_GET(sq_getfloat(v,idx,&f)); return static_cast<double>(f); }
+inline const SQChar * Get(TypeWrapper<const SQChar *>,HSQUIRRELVM v,int idx)  { const SQChar * s; SQPLUS_CHECK_GET(sq_getstring(v,idx,&s)); return s; }
+inline SquirrelNull   Get(TypeWrapper<SquirrelNull>,HSQUIRRELVM v,int idx)    { (void)v, (void)idx; return SquirrelNull();  }
+inline void *         Get(TypeWrapper<void *>,HSQUIRRELVM v,int idx)          { SQUserPointer p; SQPLUS_CHECK_GET(sq_getuserpointer(v,idx,&p)); return p; }
+inline HSQUIRRELVM    Get(TypeWrapper<HSQUIRRELVM>,HSQUIRRELVM v,int /*idx*/) { sq_poptop(v); return v; } // sq_poptop(v): remove UserData from stack so GetParamCount() matches normal behavior.
+inline SquirrelObject Get(TypeWrapper<SquirrelObject>,HSQUIRRELVM v,int idx)  { HSQOBJECT o; SQPLUS_CHECK_GET(sq_getstackobj(v,idx,&o)); return SquirrelObject(v,o); }
+
+#ifdef SQPLUS_SUPPORT_STD_STRING
+#   ifdef _UNICODE
+inline void Push(HSQUIRRELVM v,const std::wstring& value) { sq_pushstring(v,value.c_str(),-1); }
+inline bool Match(TypeWrapper<const std::wstring&>, HSQUIRRELVM v, int idx) { return sq_gettype(v,idx) == OT_STRING; }
+inline std::wstring Get(TypeWrapper<const std::wstring&>,HSQUIRRELVM v,int idx) { const SQChar * s; SQPLUS_CHECK_GET(sq_getstring(v,idx,&s)); return std::wstring(s); }
+#   else
+inline void Push(HSQUIRRELVM v,const std::string& value) { sq_pushstring(v,value.c_str(),-1); }
+inline bool Match(TypeWrapper<const std::string&>, HSQUIRRELVM v, int idx) { return sq_gettype(v,idx) == OT_STRING; }
+inline std::string Get(TypeWrapper<const std::string&>,HSQUIRRELVM v,int idx) { const SQChar * s; SQPLUS_CHECK_GET(sq_getstring(v,idx,&s)); return std::string(s); }
+#   endif
+#endif
+
+// GetRet() restores the stack for SquirrelFunction<>() calls.
+template<typename RT>
+inline RT GetRet(TypeWrapper<RT>,HSQUIRRELVM v,int idx) { RT ret = Get(TypeWrapper<RT>(),v,idx); sq_pop(v,2); return ret; } // sq_pop(v,2): restore stack after function call.
+
+// Specialization to support void return type.
+inline void GetRet(TypeWrapper<void>,HSQUIRRELVM v,int idx) { sq_pop(v,2); }
+
 // === Example SQClassDef usage (see testSqPlus2.cpp): ===
 
 #if 0
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqplus/SquirrelObject.h SqPlus/sqplus/SquirrelObject.h
--- ../dnl3/SqPlus/sqplus/SquirrelObject.h	2006-07-08 01:43:40.000000000 -0400
+++ SqPlus/sqplus/SquirrelObject.h	2010-03-26 09:57:54.000000000 -0400
@@ -1,6 +1,7 @@
 #ifndef _SQUIRREL_OBJECT_H_
 #define _SQUIRREL_OBJECT_H_
 
+class SquirrelVM;
 class SquirrelObject
 {
 	friend class SquirrelVM;
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqplus/SquirrelVM.cpp SqPlus/sqplus/SquirrelVM.cpp
--- ../dnl3/SqPlus/sqplus/SquirrelVM.cpp	2006-07-08 02:37:02.000000000 -0400
+++ SqPlus/sqplus/SquirrelVM.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -14,8 +14,12 @@
 #ifdef _MSC_VER
 #define STRLEN(n) _tcslen(n)
 #else
+#ifdef SQUNICODE
+  #define STRLEN(n) wcslen(n)
+#else
 #define STRLEN(n) strlen(n)
 #endif
+#endif
 
 SquirrelError::SquirrelError(const HSQUIRRELVM hvm) 
 {
@@ -79,12 +83,14 @@ void SquirrelVM::Shutdown()
 
 void SquirrelVM::PrintFunc(HSQUIRRELVM v,const SQChar* s,...)
 {
+#if !defined( SQUNICODE )
 	static SQChar temp[2048];
 	va_list vl;
 	va_start(vl, s);
 	scvsprintf( temp,s, vl);
 	SCPUTS(temp);
 	va_end(vl);
+#endif
 }
 
 SquirrelObject SquirrelVM::CompileScript(const SQChar* s)
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdaux.cpp SqPlus/sqstdlib/sqstdaux.cpp
--- ../dnl3/SqPlus/sqstdlib/sqstdaux.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/sqstdlib/sqstdaux.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -65,7 +65,7 @@ void sqstd_printcallstack(HSQUIRRELVM v)
 					pf(v,_SC("[%s] NATIVECLOSURE\n"),name);
 					break;
 				case OT_GENERATOR:
-					pf(v,_SC("[%s] NATIVECLOSURE\n"),name);
+					pf(v,_SC("[%s] GENERATOR\n"),name);
 					break;
 				case OT_USERDATA:
 					pf(v,_SC("[%s] USERDATA\n"),name);
@@ -80,7 +80,7 @@ void sqstd_printcallstack(HSQUIRRELVM v)
 					pf(v,_SC("[%s] INSTANCE\n"),name);
 					break;
 				case OT_WEAKREF:
-					pf(v,_SC("[%s] INSTANCE\n"),name);
+					pf(v,_SC("[%s] WEAKREF\n"),name);
 					break;
 				case OT_BOOL:{
 					sq_getinteger(v,-1,&i);
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdblob.cpp SqPlus/sqstdlib/sqstdblob.cpp
--- ../dnl3/SqPlus/sqstdlib/sqstdblob.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/sqstdlib/sqstdblob.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -237,7 +237,6 @@ SQUserPointer sqstd_createblob(HSQUIRREL
 		if(SQ_SUCCEEDED(sq_call(v,2,SQTrue,SQFalse))
 			&& SQ_SUCCEEDED(sq_getinstanceup(v,-1,(SQUserPointer *)&blob,(SQUserPointer)SQSTD_BLOB_TYPE_TAG))) {
 			sq_remove(v,-2);
-			sq_remove(v,-2);
 			return blob->GetBuf();
 		}
 	}
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdio.cpp SqPlus/sqstdlib/sqstdio.cpp
--- ../dnl3/SqPlus/sqstdlib/sqstdio.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/sqstdlib/sqstdio.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -1,6 +1,8 @@
 /* see copyright notice in squirrel.h */
 #include <new>
 #include <stdio.h>
+#include <stdlib.h>
+#include <wchar.h>
 #include <squirrel.h>
 #include <sqstdio.h>
 #include "sqstdstream.h"
@@ -11,8 +13,25 @@ SQFILE sqstd_fopen(const SQChar *filenam
 {
 #ifndef _UNICODE
 	return (SQFILE)fopen(filename,mode);
-#else
+#elif defined( _MSC_VER )
 	return (SQFILE)_wfopen(filename,mode);
+#else
+	size_t nFilename = wcstombs( NULL, filename, 0 );
+	char * mbFilename = new char[ nFilename + 1 ];
+	if ( 0 >= wcstombs( mbFilename, filename, nFilename + 1 ) )
+		return 0;
+
+	size_t nMode = wcstombs( NULL, mode, 0 );
+	char * mbMode = new char[ nMode + 1 ];
+	if ( 0 >= wcstombs( mbMode, mode, nMode + 1 ) )
+		return 0;
+
+	SQFILE fd = fopen( mbFilename, mbMode );
+
+	delete [] mbFilename;
+	delete [] mbMode;
+
+	return fd;
 #endif
 }
 
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdlib71.vcproj SqPlus/sqstdlib/sqstdlib71.vcproj
--- ../dnl3/SqPlus/sqstdlib/sqstdlib71.vcproj	2006-05-29 15:10:46.000000000 -0400
+++ SqPlus/sqstdlib/sqstdlib71.vcproj	1969-12-31 19:00:00.000000000 -0500
@@ -1,503 +0,0 @@
-<?xml version="1.0" encoding="Windows-1252"?>
-<VisualStudioProject
-	ProjectType="Visual C++"
-	Version="7.10"
-	Name="sqstdlib"
-	ProjectGUID="{21FFCF49-0D09-41D3-8A04-F47A0890F27A}"
-	SccProjectName=""
-	SccLocalPath="..">
-	<Platforms>
-		<Platform
-			Name="Win32"/>
-	</Platforms>
-	<Configurations>
-		<Configuration
-			Name="Release|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="2">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;NDEBUG;_LIB"
-				StringPooling="TRUE"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="TRUE"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/sqstdlib.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\sqstdlib.lib"
-				SuppressStartupBanner="TRUE"/>
-			<Tool
-				Name="VCMIDLTool"/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-		<Configuration
-			Name="Debug|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="2">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Debug/sqstdlib.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				DebugInformationFormat="4"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\sqstdlibD.lib"
-				SuppressStartupBanner="TRUE"/>
-			<Tool
-				Name="VCMIDLTool"/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-		<Configuration
-			Name="Debug - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="1">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Debug/sqstdlib.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				DebugInformationFormat="4"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\sqstdlibDU.lib"
-				SuppressStartupBanner="TRUE"/>
-			<Tool
-				Name="VCMIDLTool"/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-		<Configuration
-			Name="Release - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="1">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;NDEBUG;_LIB"
-				StringPooling="TRUE"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="TRUE"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/sqstdlib.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\sqstdlibU.lib"
-				SuppressStartupBanner="TRUE"/>
-			<Tool
-				Name="VCMIDLTool"/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-	</Configurations>
-	<References>
-	</References>
-	<Files>
-		<Filter
-			Name="Source Files"
-			Filter="cpp;c;cxx;rc;def;r;odl;idl;hpj;bat">
-			<File
-				RelativePath="sqstdaux.cpp">
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstdblob.cpp">
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstdio.cpp">
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstdmath.cpp">
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath=".\sqstdrex.cpp">
-			</File>
-			<File
-				RelativePath="sqstdstream.cpp">
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstdstring.cpp">
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstdsystem.cpp">
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-		</Filter>
-		<Filter
-			Name="Header Files"
-			Filter="h;hpp;hxx;hm;inl">
-			<File
-				RelativePath="sqstdblobimpl.h">
-			</File>
-			<File
-				RelativePath="sqstdstream.h">
-			</File>
-		</Filter>
-	</Files>
-	<Globals>
-	</Globals>
-</VisualStudioProject>
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdlib.cbp SqPlus/sqstdlib/sqstdlib.cbp
--- ../dnl3/SqPlus/sqstdlib/sqstdlib.cbp	2006-04-25 17:05:30.000000000 -0400
+++ SqPlus/sqstdlib/sqstdlib.cbp	1969-12-31 19:00:00.000000000 -0500
@@ -1,166 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE CodeBlocks_project_file>
-<CodeBlocks_project_file>
-	<FileVersion major="1" minor="1"/>
-	<Project>
-		<Option title="sqstdlib"/>
-		<Option makefile="Makefile"/>
-		<Option makefile_is_custom="0"/>
-		<Option default_target="-1"/>
-		<Option compiler="0"/>
-		<Build>
-			<Target title="Release">
-				<Option output="..\lib\libsqstdlib.a"/>
-				<Option working_dir=""/>
-				<Option object_output="Release"/>
-				<Option deps_output=".deps"/>
-				<Option type="2"/>
-				<Option compiler="0"/>
-				<Option createDefFile="1"/>
-				<Option projectResourceIncludeDirsRelation="2"/>
-				<Compiler>
-					<Add option="-O2"/>
-					<Add option="-W"/>
-					<Add option="-DWIN32"/>
-					<Add option="-DNDEBUG"/>
-					<Add option="-D_LIB"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add directory="..\include"/>
-				</Compiler>
-			</Target>
-			<Target title="Debug">
-				<Option output="..\lib\libsqstdlibD.a"/>
-				<Option working_dir=""/>
-				<Option object_output="Debug"/>
-				<Option deps_output=".deps"/>
-				<Option type="2"/>
-				<Option compiler="0"/>
-				<Option createDefFile="1"/>
-				<Option projectResourceIncludeDirsRelation="2"/>
-				<Compiler>
-					<Add option="-W"/>
-					<Add option="-O0"/>
-					<Add option="-DWIN32"/>
-					<Add option="-D_DEBUG"/>
-					<Add option="-D_LIB"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add directory="..\include"/>
-				</Compiler>
-			</Target>
-			<Target title="Debug - Unicode">
-				<Option output="..\lib\libsqstdlibDU.a"/>
-				<Option working_dir=""/>
-				<Option object_output="Debug - Unicode"/>
-				<Option deps_output=".deps"/>
-				<Option type="2"/>
-				<Option compiler="0"/>
-				<Option createDefFile="1"/>
-				<Option projectResourceIncludeDirsRelation="2"/>
-				<Compiler>
-					<Add option="-W"/>
-					<Add option="-O0"/>
-					<Add option="-DWIN32"/>
-					<Add option="-D_DEBUG"/>
-					<Add option="-D_LIB"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add option="-D_CRT_NON_CONFORMING_SWPRINTFS"/>
-					<Add directory="..\include"/>
-				</Compiler>
-			</Target>
-			<Target title="Release - Unicode">
-				<Option output="..\lib\libsqstdlibU.a"/>
-				<Option working_dir=""/>
-				<Option object_output="Release - Unicode"/>
-				<Option deps_output=".deps"/>
-				<Option type="2"/>
-				<Option compiler="0"/>
-				<Option createDefFile="1"/>
-				<Option projectResourceIncludeDirsRelation="2"/>
-				<Compiler>
-					<Add option="-O2"/>
-					<Add option="-W"/>
-					<Add option="-DWIN32"/>
-					<Add option="-DNDEBUG"/>
-					<Add option="-D_LIB"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add option="-D_CRT_NON_CONFORMING_SWPRINTFS"/>
-					<Add directory="..\include"/>
-				</Compiler>
-			</Target>
-		</Build>
-		<Unit filename="sqstdaux.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstdblob.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstdblobimpl.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstdio.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstdmath.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstdrex.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstdstream.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstdstream.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstdstring.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstdsystem.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Release"/>
-			<Option target="Debug"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-	</Project>
-</CodeBlocks_project_file>
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdlib.dsp SqPlus/sqstdlib/sqstdlib.dsp
--- ../dnl3/SqPlus/sqstdlib/sqstdlib.dsp	1969-12-31 19:00:00.000000000 -0500
+++ SqPlus/sqstdlib/sqstdlib.dsp	2010-03-26 09:57:54.000000000 -0400
@@ -0,0 +1,131 @@
+# Microsoft Developer Studio Project File - Name="sqstdlib" - Package Owner=<4>
+# Microsoft Developer Studio Generated Build File, Format Version 6.00
+# ** DO NOT EDIT **
+
+# TARGTYPE "Win32 (x86) Static Library" 0x0104
+
+CFG=sqstdlib - Win32 Release
+!MESSAGE This is not a valid makefile. To build this project using NMAKE,
+!MESSAGE use the Export Makefile command and run
+!MESSAGE 
+!MESSAGE NMAKE /f "sqstdlib.mak".
+!MESSAGE 
+!MESSAGE You can specify a configuration when running NMAKE
+!MESSAGE by defining the macro CFG on the command line. For example:
+!MESSAGE 
+!MESSAGE NMAKE /f "sqstdlib.mak" CFG="sqstdlib - Win32 Release"
+!MESSAGE 
+!MESSAGE Possible choices for configuration are:
+!MESSAGE 
+!MESSAGE "sqstdlib - Win32 Release" (based on "Win32 (x86) Static Library")
+!MESSAGE "sqstdlib - Win32 Debug" (based on "Win32 (x86) Static Library")
+!MESSAGE 
+
+# Begin Project
+# PROP AllowPerConfigDependencies 0
+# PROP Scc_LocalPath ".."
+CPP=cl.exe
+RSC=rc.exe
+
+!IF  "$(CFG)" == "sqstdlib - Win32 Release"
+
+# PROP BASE Use_MFC 0
+# PROP BASE Use_Debug_Libraries 0
+# PROP BASE Output_Dir "Release"
+# PROP BASE Intermediate_Dir "Release"
+# PROP BASE Target_Dir ""
+# PROP Use_MFC 0
+# PROP Use_Debug_Libraries 0
+# PROP Output_Dir "Release"
+# PROP Intermediate_Dir "Release"
+# PROP Target_Dir ""
+# ADD BASE CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /YX /FD /c
+# ADD CPP /nologo /W3 /GX /O2 /I "..\include" /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /YX /FD /c
+# ADD BASE RSC /l 0x410 /d "NDEBUG"
+# ADD RSC /l 0x410 /d "NDEBUG"
+BSC32=bscmake.exe
+# ADD BASE BSC32 /nologo
+# ADD BSC32 /nologo
+LIB32=link.exe -lib
+# ADD BASE LIB32 /nologo
+# ADD LIB32 /nologo /out:"..\lib\sqstdlib.lib"
+
+!ELSEIF  "$(CFG)" == "sqstdlib - Win32 Debug"
+
+# PROP BASE Use_MFC 0
+# PROP BASE Use_Debug_Libraries 1
+# PROP BASE Output_Dir "Debug"
+# PROP BASE Intermediate_Dir "Debug"
+# PROP BASE Target_Dir ""
+# PROP Use_MFC 0
+# PROP Use_Debug_Libraries 1
+# PROP Output_Dir "Debug"
+# PROP Intermediate_Dir "Debug"
+# PROP Target_Dir ""
+# ADD BASE CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /YX /FD /GZ /c
+# ADD CPP /nologo /W3 /Gm /GX /ZI /Od /I "..\include" /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /YX /FD /GZ /c
+# ADD BASE RSC /l 0x410 /d "_DEBUG"
+# ADD RSC /l 0x410 /d "_DEBUG"
+BSC32=bscmake.exe
+# ADD BASE BSC32 /nologo
+# ADD BSC32 /nologo
+LIB32=link.exe -lib
+# ADD BASE LIB32 /nologo
+# ADD LIB32 /nologo /out:"..\lib\sqstdlib.lib"
+
+!ENDIF 
+
+# Begin Target
+
+# Name "sqstdlib - Win32 Release"
+# Name "sqstdlib - Win32 Debug"
+# Begin Group "Source Files"
+
+# PROP Default_Filter "cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"
+# Begin Source File
+
+SOURCE=.\sqstdblob.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstdio.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstdmath.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstdrex.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstdstream.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstdstring.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstdaux.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstdsystem.cpp
+# End Source File
+# End Group
+# Begin Group "Header Files"
+
+# PROP Default_Filter "h;hpp;hxx;hm;inl"
+# Begin Source File
+
+SOURCE=.\sqstdblobimpl.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstdstream.h
+# End Source File
+# End Group
+# End Target
+# End Project
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdlib.vcproj SqPlus/sqstdlib/sqstdlib.vcproj
--- ../dnl3/SqPlus/sqstdlib/sqstdlib.vcproj	2006-03-26 18:21:16.000000000 -0500
+++ SqPlus/sqstdlib/sqstdlib.vcproj	1969-12-31 19:00:00.000000000 -0500
@@ -1,666 +0,0 @@
-<?xml version="1.0" encoding="Windows-1252"?>
-<VisualStudioProject
-	ProjectType="Visual C++"
-	Version="8.00"
-	Name="sqstdlib"
-	ProjectGUID="{B6DA293C-F1BB-4800-8134-70CBE80F70A0}"
-	SccLocalPath=".."
-	>
-	<Platforms>
-		<Platform
-			Name="Win32"
-		/>
-	</Platforms>
-	<ToolFiles>
-	</ToolFiles>
-	<Configurations>
-		<Configuration
-			Name="Release|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;NDEBUG;_LIB;_CRT_SECURE_NO_DEPRECATE"
-				StringPooling="true"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="true"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/sqstdlib.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\sqstdlib.lib"
-				SuppressStartupBanner="true"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Debug|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;_CRT_SECURE_NO_DEPRECATE"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Debug/sqstdlib.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				DebugInformationFormat="4"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\sqstdlibD.lib"
-				SuppressStartupBanner="true"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Debug - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="1"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;_CRT_SECURE_NO_DEPRECATE;_CRT_NON_CONFORMING_SWPRINTFS"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Debug/sqstdlib.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				DebugInformationFormat="4"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\sqstdlibDU.lib"
-				SuppressStartupBanner="true"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Release - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="1"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;NDEBUG;_LIB;_CRT_SECURE_NO_DEPRECATE;_CRT_NON_CONFORMING_SWPRINTFS"
-				StringPooling="true"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="true"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/sqstdlib.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\sqstdlibU.lib"
-				SuppressStartupBanner="true"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-	</Configurations>
-	<References>
-	</References>
-	<Files>
-		<Filter
-			Name="Source Files"
-			Filter="cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"
-			>
-			<File
-				RelativePath="sqstdaux.cpp"
-				>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstdblob.cpp"
-				>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstdio.cpp"
-				>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstdmath.cpp"
-				>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath=".\sqstdrex.cpp"
-				>
-			</File>
-			<File
-				RelativePath="sqstdstream.cpp"
-				>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstdstring.cpp"
-				>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstdsystem.cpp"
-				>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-		</Filter>
-		<Filter
-			Name="Header Files"
-			Filter="h;hpp;hxx;hm;inl"
-			>
-			<File
-				RelativePath="sqstdblobimpl.h"
-				>
-			</File>
-			<File
-				RelativePath="sqstdstream.h"
-				>
-			</File>
-		</Filter>
-	</Files>
-	<Globals>
-	</Globals>
-</VisualStudioProject>
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdmath.cpp SqPlus/sqstdlib/sqstdmath.cpp
--- ../dnl3/SqPlus/sqstdlib/sqstdmath.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/sqstdlib/sqstdmath.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -22,7 +22,8 @@
 static SQInteger math_srand(HSQUIRRELVM v)
 {
 	SQInteger i;
-	if(!sq_getinteger(v,2,&i))return sq_throwerror(v,_SC("invalid param"));
+	if(SQ_FAILED(sq_getinteger(v,2,&i)))
+		return sq_throwerror(v,_SC("invalid param"));
 	srand((unsigned int)i);
 	return 0;
 }
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdrex.cpp SqPlus/sqstdlib/sqstdrex.cpp
--- ../dnl3/SqPlus/sqstdlib/sqstdrex.cpp	2006-03-19 14:42:14.000000000 -0500
+++ SqPlus/sqstdlib/sqstdrex.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -1,8 +1,11 @@
 /* see copyright notice in squirrel.h */
 #include <squirrel.h>
 #include <string.h>
+#include <wchar.h>
 #include <ctype.h>
+#if !defined ( SQNOSETJMP )
 #include <setjmp.h>
+#endif
 #include "sqstdstring.h"
 
 #ifdef _UINCODE
@@ -24,28 +27,28 @@ static const SQChar *g_nnames[] =
 
 #endif
 
-#define OP_GREEDY		MAX_CHAR+1 // * + ? {n}
-#define OP_OR			MAX_CHAR+2
-#define OP_EXPR			MAX_CHAR+3 //parentesis ()
-#define OP_NOCAPEXPR	MAX_CHAR+4 //parentesis (?:)
-#define OP_DOT			MAX_CHAR+5
-#define OP_CLASS		MAX_CHAR+6
-#define OP_CCLASS		MAX_CHAR+7
-#define OP_NCLASS		MAX_CHAR+8 //negates class the [^
-#define OP_RANGE		MAX_CHAR+9
-#define OP_CHAR			MAX_CHAR+10
-#define OP_EOL			MAX_CHAR+11
-#define OP_BOL			MAX_CHAR+12
-#define OP_WB			MAX_CHAR+13
-
-#define SQREX_SYMBOL_ANY_CHAR '.'
-#define SQREX_SYMBOL_GREEDY_ONE_OR_MORE '+'
-#define SQREX_SYMBOL_GREEDY_ZERO_OR_MORE '*'
-#define SQREX_SYMBOL_GREEDY_ZERO_OR_ONE '?'
-#define SQREX_SYMBOL_BRANCH '|'
-#define SQREX_SYMBOL_END_OF_STRING '$'
-#define SQREX_SYMBOL_BEGINNING_OF_STRING '^'
-#define SQREX_SYMBOL_ESCAPE_CHAR '\\'
+#define OP_GREEDY		(MAX_CHAR+1) // * + ? {n}
+#define OP_OR			(MAX_CHAR+2)
+#define OP_EXPR			(MAX_CHAR+3) //parentesis ()
+#define OP_NOCAPEXPR	(MAX_CHAR+4) //parentesis (?:)
+#define OP_DOT			(MAX_CHAR+5)
+#define OP_CLASS		(MAX_CHAR+6)
+#define OP_CCLASS		(MAX_CHAR+7)
+#define OP_NCLASS		(MAX_CHAR+8) //negates class the [^
+#define OP_RANGE		(MAX_CHAR+9)
+#define OP_CHAR			(MAX_CHAR+10)
+#define OP_EOL			(MAX_CHAR+11)
+#define OP_BOL			(MAX_CHAR+12)
+#define OP_WB			(MAX_CHAR+13)
+
+#define SQREX_SYMBOL_ANY_CHAR ('.')
+#define SQREX_SYMBOL_GREEDY_ONE_OR_MORE ('+')
+#define SQREX_SYMBOL_GREEDY_ZERO_OR_MORE ('*')
+#define SQREX_SYMBOL_GREEDY_ZERO_OR_ONE ('?')
+#define SQREX_SYMBOL_BRANCH ('|')
+#define SQREX_SYMBOL_END_OF_STRING ('$')
+#define SQREX_SYMBOL_BEGINNING_OF_STRING ('^')
+#define SQREX_SYMBOL_ESCAPE_CHAR ('\\')
 
 
 typedef int SQRexNodeType;
@@ -69,7 +72,9 @@ struct SQRex{
 	SQInteger _nsubexpr;
 	SQRexMatch *_matches;
 	SQInteger _currsubexp;
+#if !defined ( SQNOSETJMP )
 	void *_jmpbuf;
+#endif
 	const SQChar **_error;
 };
 
@@ -88,13 +93,18 @@ static SQInteger sqstd_rex_newnode(SQRex
 		exp->_nodes = (SQRexNode *)sq_realloc(exp->_nodes, oldsize * sizeof(SQRexNode) ,exp->_nallocated * sizeof(SQRexNode));
 	}
 	exp->_nodes[exp->_nsize++] = n;
-	return (SQInteger)exp->_nsize - 1;
+	SQInteger newid = exp->_nsize - 1;
+	return (SQInteger)newid;
 }
 
 static void sqstd_rex_error(SQRex *exp,const SQChar *error)
 {
 	if(exp->_error) *exp->_error = error;
+#if !defined ( SQNOSETJMP )
 	longjmp(*((jmp_buf*)exp->_jmpbuf),-1);
+#else
+	throw -1;
+#endif
 }
 
 static void sqstd_rex_expect(SQRex *exp, SQInteger n){
@@ -103,18 +113,6 @@ static void sqstd_rex_expect(SQRex *exp,
 	exp->_p++;
 }
 
-/*static SQBool sqstd_rex_ischar(SQChar c)
-{
-	switch(c) {
-	case SQREX_SYMBOL_BRANCH:case SQREX_SYMBOL_GREEDY_ZERO_OR_MORE:
-	case SQREX_SYMBOL_GREEDY_ZERO_OR_ONE:case SQREX_SYMBOL_GREEDY_ONE_OR_MORE:
-	case SQREX_SYMBOL_BEGINNING_OF_STRING:case SQREX_SYMBOL_END_OF_STRING:
-	case SQREX_SYMBOL_ANY_CHAR:case SQREX_SYMBOL_ESCAPE_CHAR:case '(':case ')':case '[':case '{': case '}':
-		return SQFalse;
-    }
-	return SQTrue;
-}*/
-
 static SQChar sqstd_rex_escapechar(SQRex *exp)
 {
 	if(*exp->_p == SQREX_SYMBOL_ESCAPE_CHAR){
@@ -140,6 +138,7 @@ static SQInteger sqstd_rex_charclass(SQR
 
 static SQInteger sqstd_rex_charnode(SQRex *exp,SQBool isclass)
 {
+	SQChar t;
 	if(*exp->_p == SQREX_SYMBOL_ESCAPE_CHAR) {
 		exp->_p++;
 		switch(*exp->_p) {
@@ -152,8 +151,7 @@ static SQInteger sqstd_rex_charnode(SQRe
 			case 'd': case 'D': case 'x': case 'X': case 'c': case 'C': 
 			case 'p': case 'P': case 'l': case 'u': 
 				{
-				SQChar t = *exp->_p;
-				exp->_p++; 
+				t = *exp->_p; exp->_p++;
 				return sqstd_rex_charclass(exp,t);
 				}
 			case 'b': 
@@ -164,14 +162,17 @@ static SQInteger sqstd_rex_charnode(SQRe
 					exp->_p++; 
 					return node;
 				} //else default
-			default: return sqstd_rex_newnode(exp,(*exp->_p++));
+			default:
+				t = *exp->_p; exp->_p++;
+				return sqstd_rex_newnode(exp,t);
 		}
 	}
 	else if(!scisprint(*exp->_p)) {
 		
 		sqstd_rex_error(exp,_SC("letter expected"));
 	}
-	return sqstd_rex_newnode(exp,*exp->_p++);
+	t = *exp->_p; exp->_p++;
+	return sqstd_rex_newnode(exp,t);
 }
 static SQInteger sqstd_rex_class(SQRex *exp)
 {
@@ -192,7 +193,8 @@ static SQInteger sqstd_rex_class(SQRex *
 			if(first>*exp->_p) sqstd_rex_error(exp,_SC("invalid range"));
 			if(exp->_nodes[first].type == OP_CCLASS) sqstd_rex_error(exp,_SC("cannot use character classes in ranges"));
 			exp->_nodes[r].left = exp->_nodes[first].type;
-			exp->_nodes[r].right = sqstd_rex_escapechar(exp);
+			SQInteger t = sqstd_rex_escapechar(exp);
+			exp->_nodes[r].right = t;
             exp->_nodes[chain].next = r;
 			chain = r;
 			first = -1;
@@ -236,7 +238,7 @@ static SQInteger sqstd_rex_parsenumber(S
 
 static SQInteger sqstd_rex_element(SQRex *exp)
 {
-	SQInteger ret;
+	SQInteger ret = -1;
 	switch(*exp->_p)
 	{
 	case '(': {
@@ -251,7 +253,8 @@ static SQInteger sqstd_rex_element(SQRex
 		}
 		else
 			expr = sqstd_rex_newnode(exp,OP_EXPR);
-		exp->_nodes[expr].left = sqstd_rex_list(exp);
+		SQInteger newn = sqstd_rex_list(exp);
+		exp->_nodes[expr].left = newn;
 		ret = expr;
 		sqstd_rex_expect(exp,')');
 	}
@@ -267,22 +270,24 @@ static SQInteger sqstd_rex_element(SQRex
 		ret = sqstd_rex_charnode(exp,SQFalse);
 		break;
 	}
-	/* scope block */
-	{
+
+
 		SQInteger op;
+	SQBool isgreedy = SQFalse;
 		unsigned short p0 = 0, p1 = 0;
 		switch(*exp->_p){
-		case SQREX_SYMBOL_GREEDY_ZERO_OR_MORE: p0 = 0; p1 = 0xFFFF; exp->_p++; goto __end;
-		case SQREX_SYMBOL_GREEDY_ONE_OR_MORE: p0 = 1; p1 = 0xFFFF; exp->_p++; goto __end;
-		case SQREX_SYMBOL_GREEDY_ZERO_OR_ONE: p0 = 0; p1 = 1; exp->_p++; goto __end;
-		case '{':{
+		case SQREX_SYMBOL_GREEDY_ZERO_OR_MORE: p0 = 0; p1 = 0xFFFF; exp->_p++; isgreedy = SQTrue; break;
+		case SQREX_SYMBOL_GREEDY_ONE_OR_MORE: p0 = 1; p1 = 0xFFFF; exp->_p++; isgreedy = SQTrue; break;
+		case SQREX_SYMBOL_GREEDY_ZERO_OR_ONE: p0 = 0; p1 = 1; exp->_p++; isgreedy = SQTrue; break;
+		case '{':
 			exp->_p++;
 			if(!isdigit(*exp->_p)) sqstd_rex_error(exp,_SC("number expected"));
 			p0 = (unsigned short)sqstd_rex_parsenumber(exp);
+			/*******************************/
 			switch(*exp->_p) {
 			case '}':
 				p1 = p0; exp->_p++;
-				goto __end;
+			break;
 			case ',':
 				exp->_p++;
 				p1 = 0xFFFF;
@@ -290,22 +295,28 @@ static SQInteger sqstd_rex_element(SQRex
 					p1 = (unsigned short)sqstd_rex_parsenumber(exp);
 				}
 				sqstd_rex_expect(exp,'}');
-				goto __end;
+			break;
 			default:
 				sqstd_rex_error(exp,_SC(", or } expected"));
 			}
+			/*******************************/
+			isgreedy = SQTrue;
+			break;
+
 		}
-		__end: {
+	if(isgreedy) {
 				SQInteger nnode = sqstd_rex_newnode(exp,OP_GREEDY);
 				op = OP_GREEDY;
 				exp->_nodes[nnode].left = ret;
 				exp->_nodes[nnode].right = ((p0)<<16)|p1;
 				ret = nnode;
 			}
+
+	if((*exp->_p != SQREX_SYMBOL_BRANCH) && (*exp->_p != ')') && (*exp->_p != SQREX_SYMBOL_GREEDY_ZERO_OR_MORE) && (*exp->_p != SQREX_SYMBOL_GREEDY_ONE_OR_MORE) && (*exp->_p != '\0')) {
+		SQInteger nnode = sqstd_rex_element(exp);
+		exp->_nodes[ret].next = nnode;
 		}
-	}
-	if(*exp->_p != SQREX_SYMBOL_BRANCH && *exp->_p != ')' && *exp->_p != SQREX_SYMBOL_GREEDY_ZERO_OR_MORE && *exp->_p != SQREX_SYMBOL_GREEDY_ONE_OR_MORE && *exp->_p != '\0')
-		exp->_nodes[ret].next = sqstd_rex_element(exp);
+
 	return ret;
 }
 
@@ -323,11 +334,12 @@ static SQInteger sqstd_rex_list(SQRex *e
 	else ret = e;
 
 	if(*exp->_p == SQREX_SYMBOL_BRANCH) {
-		SQInteger temp;
+		SQInteger temp,tright;
 		exp->_p++;
 		temp = sqstd_rex_newnode(exp,OP_OR);
 		exp->_nodes[temp].left = ret;
-		exp->_nodes[temp].right = sqstd_rex_list(exp);
+		tright = sqstd_rex_list(exp);
+		exp->_nodes[temp].right = tright;
 		ret = temp;
 	}
 	return ret;
@@ -531,9 +543,14 @@ SQRex *sqstd_rex_compile(const SQChar *p
 	exp->_nsubexpr = 0;
 	exp->_first = sqstd_rex_newnode(exp,OP_EXPR);
 	exp->_error = error;
+#if !defined ( SQNOSETJMP )
 	exp->_jmpbuf = sq_malloc(sizeof(jmp_buf));
 	if(setjmp(*((jmp_buf*)exp->_jmpbuf)) == 0) {
-		exp->_nodes[exp->_first].left=sqstd_rex_list(exp);
+#else
+	try {
+#endif
+		SQInteger res = sqstd_rex_list(exp);
+		exp->_nodes[exp->_first].left = res;
 		if(*exp->_p!='\0')
 			sqstd_rex_error(exp,_SC("unexpected character"));
 #ifdef _DEBUG
@@ -556,7 +573,11 @@ SQRex *sqstd_rex_compile(const SQChar *p
 		exp->_matches = (SQRexMatch *) sq_malloc(exp->_nsubexpr * sizeof(SQRexMatch));
 		memset(exp->_matches,0,exp->_nsubexpr * sizeof(SQRexMatch));
 	}
+#if !defined ( SQNOSETJMP )
 	else{
+#else
+	catch( ... ) {
+#endif
 		sqstd_rex_free(exp);
 		return NULL;
 	}
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdstream.cpp SqPlus/sqstdlib/sqstdstream.cpp
--- ../dnl3/SqPlus/sqstdlib/sqstdstream.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/sqstdlib/sqstdstream.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -163,7 +163,7 @@ SQInteger _stream_writen(HSQUIRRELVM v)
 	case 'f': {
 		float f;
 		sq_getfloat(v, 2, &tf);
-		f = tf;
+		f = (float)tf;
 		self->Write(&f, sizeof(float));
 			  }
 		break;
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdstring.cpp SqPlus/sqstdlib/sqstdstring.cpp
--- ../dnl3/SqPlus/sqstdlib/sqstdstring.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/sqstdlib/sqstdstring.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -2,15 +2,16 @@
 #include <squirrel.h>
 #include <sqstdstring.h>
 #include <string.h>
+#include <wchar.h>
+#include <wctype.h>
 #include <stdlib.h>
 #include <stdio.h>
 #include <ctype.h>
 #include <assert.h>
 
-#ifdef _UNICODE
+#ifdef SQUNICODE
 #define scstrchr wcschr
 #define scsnprintf wsnprintf
-#define scatoi _wtoi
 #define scstrtok wcstok
 #else
 #define scstrchr strchr
@@ -121,9 +122,15 @@ static SQInteger _string_format(HSQUIRRE
 			allocated += addlen;
 			dest = sq_getscratchpad(v,allocated);
 			switch(valtype) {
+#if !defined( SQUNICODE ) || defined( _MSC_VER ) || defined( _WIN32_WCE )
 			case 's': i += scsprintf(&dest[i],fmt,ts); break;
 			case 'i': i += scsprintf(&dest[i],fmt,ti); break;
 			case 'f': i += scsprintf(&dest[i],fmt,tf); break;
+#else
+			case 's': i += scsprintf(&dest[i],allocated,fmt,ts); break;
+			case 'i': i += scsprintf(&dest[i],allocated,fmt,ti); break;
+			case 'f': i += scsprintf(&dest[i],allocated,fmt,tf); break;
+#endif
 			};
 			nparam ++;
 		}
@@ -183,19 +190,27 @@ static SQInteger _string_rstrip(HSQUIRRE
 static SQInteger _string_split(HSQUIRRELVM v)
 {
 	const SQChar *str,*seps;
-	SQChar *stemp,*tok;
+	SQChar *stemp,*tok,*tokptr;
 	sq_getstring(v,2,&str);
 	sq_getstring(v,3,&seps);
 	if(sq_getsize(v,3) == 0) return sq_throwerror(v,_SC("empty separators string"));
 	SQInteger memsize = (sq_getsize(v,2)+1)*sizeof(SQChar);
 	stemp = sq_getscratchpad(v,memsize);
 	memcpy(stemp,str,memsize);
+#if defined( _MSC_VER ) || defined( _WIN32_WCE ) || !defined( SQUNICODE )
 	tok = scstrtok(stemp,seps);
+#else
+	tok = scstrtok(stemp,seps,&tokptr);
+#endif
 	sq_newarray(v,0);
 	while( tok != NULL ) {
 		sq_pushstring(v,tok,-1);
 		sq_arrayappend(v,-2);
+#if defined( _MSC_VER ) || defined( _WIN32_WCE ) || !defined( SQUNICODE )
 		tok = scstrtok( NULL, seps );
+#else
+		tok = scstrtok( NULL, seps, &tokptr );
+#endif
 	}
 	return 1;
 }
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/sqstdlib/sqstdsystem.cpp SqPlus/sqstdlib/sqstdsystem.cpp
--- ../dnl3/SqPlus/sqstdlib/sqstdsystem.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/sqstdlib/sqstdsystem.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -22,29 +22,41 @@
 
 static SQInteger _system_getenv(HSQUIRRELVM v)
 {
+#if !defined( SQUNICODE ) || defined( _MSC_VER )
 	const SQChar *s;
 	if(SQ_SUCCEEDED(sq_getstring(v,2,&s))){
         sq_pushstring(v,scgetenv(s),-1);
 		return 1;
 	}
 	return 0;
+#else
+	return sq_throwerror(v,_SC("not implemented on this platform"));
+#endif
 }
 
 
 static SQInteger _system_system(HSQUIRRELVM v)
 {
+#if !defined( SQUNICODE ) || defined( _MSC_VER )
 	const SQChar *s;
 	if(SQ_SUCCEEDED(sq_getstring(v,2,&s))){
 		sq_pushinteger(v,scsystem(s));
 		return 1;
 	}
 	return sq_throwerror(v,_SC("wrong param"));
+#else
+	return sq_throwerror(v,_SC("not implemented on this platform"));
+#endif
 }
 
 
 static SQInteger _system_clock(HSQUIRRELVM v)
 {
+#if defined( _WIN32_WCE )
+	sq_pushfloat(v,((SQFloat)time(0)));
+#else
 	sq_pushfloat(v,((SQFloat)clock())/(SQFloat)CLOCKS_PER_SEC);
+#endif
 	return 1;
 }
 
@@ -58,21 +70,31 @@ static SQInteger _system_time(HSQUIRRELV
 
 static SQInteger _system_remove(HSQUIRRELVM v)
 {
+#if !defined( SQUNICODE ) || defined( _MSC_VER )
 	const SQChar *s;
 	sq_getstring(v,2,&s);
 	if(scremove(s)==-1)
 		return sq_throwerror(v,_SC("remove() failed"));
 	return 0;
+	
+#else
+
+	return sq_throwerror(v,_SC("not implemented on this platform"));
+	
+#endif
 }
 
 static SQInteger _system_rename(HSQUIRRELVM v)
 {
-	const SQChar *oldn,*newn;
+#if !defined( SQUNICODE ) || defined( _MSC_VER )	const SQChar *oldn,*newn;
 	sq_getstring(v,2,&oldn);
 	sq_getstring(v,3,&newn);
 	if(screname(oldn,newn)==-1)
 		return sq_throwerror(v,_SC("rename() failed"));
 	return 0;
+#else
+	return sq_throwerror(v,_SC("not implemented on this platform"));
+#endif
 }
 
 static void _set_integer_slot(HSQUIRRELVM v,const SQChar *name,SQInteger val)
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqapi.cpp SqPlus/squirrel/sqapi.cpp
--- ../dnl3/SqPlus/squirrel/sqapi.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqapi.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -39,7 +39,11 @@ SQInteger sq_aux_throwobject(HSQUIRRELVM
 
 SQInteger sq_aux_invalidtype(HSQUIRRELVM v,SQObjectType type)
 {
+#if !defined( SQUNICODE ) || defined( _MSC_VER ) || defined( _WIN32_WCE )
 	scsprintf(_ss(v)->GetScratchPad(100), _SC("unexpected type %s"), IdType2Name(type));
+#else
+	scsprintf(_ss(v)->GetScratchPad(100), 99, _SC("unexpected type %s"), IdType2Name(type));
+#endif
 	return sq_throwerror(v, _ss(v)->GetScratchPad(-1));
 }
 
@@ -84,7 +88,7 @@ SQInteger sq_getvmstate(HSQUIRRELVM v)
 	if(v->_suspended)
 		return SQ_VMSTATE_SUSPENDED;
 	else { 
-		if(v->_callsstack.size() != 0) return SQ_VMSTATE_RUNNING;
+		if(v->_callsstacksize != 0) return SQ_VMSTATE_RUNNING;
 		else return SQ_VMSTATE_IDLE;
 	}
 }
@@ -137,13 +141,22 @@ void sq_notifyallexceptions(HSQUIRRELVM 
 void sq_addref(HSQUIRRELVM v,HSQOBJECT *po)
 {
 	if(!ISREFCOUNTED(type(*po))) return;
+#ifdef NO_GARBAGE_COLLECTOR
+	__AddRef(po->_type,po->_unVal);
+#else
 	_ss(v)->_refs_table.AddRef(*po);
+#endif
 }
 
 SQBool sq_release(HSQUIRRELVM v,HSQOBJECT *po)
 {
 	if(!ISREFCOUNTED(type(*po))) return SQTrue;
+#ifdef NO_GARBAGE_COLLECTOR
+	__Release(po->_type,po->_unVal);
+	return SQFalse; //the ret val doesn't work(and cannot be fixed)
+#else
 	return _ss(v)->_refs_table.Release(*po);
+#endif
 }
 
 const SQChar *sq_objtostring(HSQOBJECT *o) 
@@ -279,13 +292,14 @@ SQRESULT sq_arrayresize(HSQUIRRELVM v,SQ
 	sq_aux_paramscheck(v,1);
 	SQObjectPtr *arr;
 	_GETSAFE_OBJ(v, idx, OT_ARRAY,arr);
-	if(_array(*arr)->Size() > 0) {
+	if(newsize >= 0) {
 		_array(*arr)->Resize(newsize);
 		return SQ_OK;
 	}
-	return SQ_OK;
+	return sq_throwerror(v,_SC("negative size"));
 }
 
+
 SQRESULT sq_arrayreverse(HSQUIRRELVM v,SQInteger idx)
 {
 	sq_aux_paramscheck(v, 1);
@@ -306,6 +320,25 @@ SQRESULT sq_arrayreverse(HSQUIRRELVM v,S
 	return SQ_OK;
 }
 
+SQRESULT sq_arrayremove(HSQUIRRELVM v,SQInteger idx,SQInteger itemidx)
+{
+	sq_aux_paramscheck(v, 1); 
+	SQObjectPtr *arr;
+	_GETSAFE_OBJ(v, idx, OT_ARRAY,arr); 
+	return _array(*arr)->Remove(itemidx) ? SQ_OK : sq_throwerror(v,_SC("index out of range")); 
+}
+
+SQRESULT sq_arrayinsert(HSQUIRRELVM v,SQInteger idx,SQInteger destpos)
+{
+	sq_aux_paramscheck(v, 1); 
+	SQObjectPtr *arr;
+	_GETSAFE_OBJ(v, idx, OT_ARRAY,arr);
+	SQRESULT ret = _array(*arr)->Insert(destpos, v->GetUp(-1)) ? SQ_OK : sq_throwerror(v,_SC("index out of range"));
+	v->Pop();
+	return ret;
+}
+
+
 void sq_newclosure(HSQUIRRELVM v,SQFUNCTION func,SQUnsignedInteger nfreevars)
 {
 	SQNativeClosure *nc = SQNativeClosure::Create(_ss(v), func);
@@ -323,7 +356,7 @@ SQRESULT sq_getclosureinfo(HSQUIRRELVM v
 	if(sq_isclosure(o)) {
 		SQClosure *c = _closure(o);
 		SQFunctionProto *proto = _funcproto(c->_function);
-		*nparams = (SQUnsignedInteger)proto->_parameters.size();
+		*nparams = (SQUnsignedInteger)proto->_nparameters;
         *nfreevars = (SQUnsignedInteger)c->_outervalues.size();
 		return SQ_OK;
 	}
@@ -391,6 +424,20 @@ SQRESULT sq_bindenv(HSQUIRRELVM v,SQInte
 	return SQ_OK;
 }
 
+SQRESULT sq_clear(HSQUIRRELVM v,SQInteger idx)
+{
+	SQObject &o=stack_get(v,idx);
+	switch(type(o)) {
+		case OT_TABLE: _table(o)->Clear();	break;
+		case OT_ARRAY: _array(o)->Resize(0); break;
+		default:
+			return sq_throwerror(v, _SC("clear only works on table and array"));
+		break;
+
+	}
+	return SQ_OK;
+}
+
 void sq_pushroottable(HSQUIRRELVM v)
 {
 	v->Push(v->_roottable);
@@ -401,6 +448,11 @@ void sq_pushregistrytable(HSQUIRRELVM v)
 	v->Push(_ss(v)->_registry);
 }
 
+void sq_pushconsttable(HSQUIRRELVM v)
+{
+	v->Push(_ss(v)->_consts);
+}
+
 SQRESULT sq_setroottable(HSQUIRRELVM v)
 {
 	SQObject o = stack_get(v, -1);
@@ -412,6 +464,17 @@ SQRESULT sq_setroottable(HSQUIRRELVM v)
 	return sq_throwerror(v, _SC("ivalid type"));
 }
 
+SQRESULT sq_setconsttable(HSQUIRRELVM v)
+{
+	SQObject o = stack_get(v, -1);
+	if(sq_istable(o)) {
+		_ss(v)->_consts = o;
+		v->Pop();
+		return SQ_OK;
+	}
+	return sq_throwerror(v, _SC("ivalid type, expected table"));
+}
+
 void sq_setforeignptr(HSQUIRRELVM v,SQUserPointer p)
 {
 	v->_foreignptr = p;
@@ -572,6 +636,16 @@ SQRESULT sq_setinstanceup(HSQUIRRELVM v,
 	return SQ_OK;
 }
 
+SQRESULT sq_setclassudsize(HSQUIRRELVM v, SQInteger idx, SQInteger udsize)
+{
+	SQObjectPtr &o = stack_get(v,idx);
+	if(type(o) != OT_CLASS) return sq_throwerror(v,_SC("the object is not a class"));
+	if(_class(o)->_locked) return sq_throwerror(v,_SC("the class is locked"));
+	_class(o)->_udsize = udsize;
+	return SQ_OK;
+}
+
+
 SQRESULT sq_getinstanceup(HSQUIRRELVM v, SQInteger idx, SQUserPointer *p,SQUserPointer typetag)
 {
 	SQObjectPtr &o = stack_get(v,idx);
@@ -600,7 +674,7 @@ void sq_settop(HSQUIRRELVM v, SQInteger 
 	if(top > newtop)
 		sq_pop(v, top - newtop);
 	else
-		while(top < newtop) sq_pushnull(v);
+		while(top++ < newtop) sq_pushnull(v);
 }
 
 void sq_pop(HSQUIRRELVM v, SQInteger nelemstopop)
@@ -641,19 +715,6 @@ SQRESULT sq_newslot(HSQUIRRELVM v, SQInt
 	return SQ_OK;
 }
 
-/*SQRESULT sq_createslot(HSQUIRRELVM v, SQInteger idx)
-{
-	sq_aux_paramscheck(v, 3);
-	SQObjectPtr &self = stack_get(v, idx);
-	if(type(self) == OT_TABLE || type(self) == OT_CLASS) {
-		SQObjectPtr &key = v->GetUp(-2);
-		if(type(key) == OT_NULL) return sq_throwerror(v, _SC("null is not a valid key"));
-		v->NewSlot(self, key, v->GetUp(-1));
-		v->Pop(2);
-	}
-	return SQ_OK;
-}*/
-
 SQRESULT sq_deleteslot(HSQUIRRELVM v,SQInteger idx,SQBool pushval)
 {
 	sq_aux_paramscheck(v, 2);
@@ -709,7 +770,7 @@ SQRESULT sq_rawset(HSQUIRRELVM v,SQInteg
 	break;
 	default:
 		v->Pop(2);
-		return sq_throwerror(v, _SC("rawset works only on array/table/calsse and instance"));
+		return sq_throwerror(v, _SC("rawset works only on array/table/class and instance"));
 	}
 	v->Raise_IdxError(v->GetUp(-2));return SQ_ERROR;
 }
@@ -763,12 +824,12 @@ SQRESULT sq_getdelegate(HSQUIRRELVM v,SQ
 	SQObjectPtr &self=stack_get(v,idx);
 	switch(type(self)){
 	case OT_TABLE:
-		if(!_table(self)->_delegate)break;
-		v->Push(SQObjectPtr(_table(self)->_delegate));
-		break;
 	case OT_USERDATA:
-		if(!_userdata(self)->_delegate)break;
-		v->Push(SQObjectPtr(_userdata(self)->_delegate));
+		if(!_delegable(self)->_delegate){
+			v->Push(_null_);
+			break;
+		}
+		v->Push(SQObjectPtr(_delegable(self)->_delegate));
 		break;
 	default: return sq_throwerror(v,_SC("wrong type")); break;
 	}
@@ -821,7 +882,7 @@ SQRESULT sq_getstackobj(HSQUIRRELVM v,SQ
 
 const SQChar *sq_getlocal(HSQUIRRELVM v,SQUnsignedInteger level,SQUnsignedInteger idx)
 {
-	SQUnsignedInteger cstksize=v->_callsstack.size();
+	SQUnsignedInteger cstksize=v->_callsstacksize;
 	SQUnsignedInteger lvl=(cstksize-level)-1;
 	SQInteger stackbase=v->_stackbase;
 	if(lvl<cstksize){
@@ -834,7 +895,12 @@ const SQChar *sq_getlocal(HSQUIRRELVM v,
 			return NULL;
 		SQClosure *c=_closure(ci._closure);
 		SQFunctionProto *func=_funcproto(c->_function);
-		return func->GetLocal(v,stackbase,idx,(SQInteger)(ci._ip-func->_instructions._vals)-1);
+		if(func->_noutervalues > (SQInteger)idx) {
+			v->Push(c->_outervalues[idx]);
+			return _stringval(func->_outervalues[idx]._name);
+		}
+		idx -= func->_noutervalues;
+		return func->GetLocal(v,stackbase,idx,(SQInteger)(ci._ip-func->_instructions)-1);
 	}
 	return NULL;
 }
@@ -889,7 +955,9 @@ SQRESULT sq_call(HSQUIRRELVM v,SQInteger
 {
 	SQObjectPtr res;
 	if(v->Call(v->GetUp(-(params+1)),params,v->_top-params,res,raiseerror?true:false)){
+		if(!v->_suspended) {
 		v->Pop(params);//pop closure and args
+		}
 		if(retval){
 			v->Push(res); return SQ_OK;
 		}
@@ -918,10 +986,8 @@ SQRESULT sq_wakeupvm(HSQUIRRELVM v,SQBoo
 		v->GetAt(v->_stackbase+v->_suspended_target)=v->GetUp(-1); //retval
 		v->Pop();
 	} else v->GetAt(v->_stackbase+v->_suspended_target)=_null_;
-	if(!v->Execute(_null_,v->_top,-1,-1,ret,raiseerror,SQVM::ET_RESUME_VM))
+	if(!v->Execute(_null_,v->_top,-1,-1,ret,raiseerror,SQVM::ET_RESUME_VM)) {
 		return SQ_ERROR;
-	if(sq_getvmstate(v) == SQ_VMSTATE_IDLE) {
-		while (v->_top > 1) v->_stack[--v->_top] = _null_;
 	}
 	if(retval)
 		v->Push(ret);
@@ -960,14 +1026,14 @@ SQRESULT sq_writeclosure(HSQUIRRELVM v,S
 
 SQRESULT sq_readclosure(HSQUIRRELVM v,SQREADFUNC r,SQUserPointer up)
 {
-	SQObjectPtr func=SQFunctionProto::Create();
-	SQObjectPtr closure=SQClosure::Create(_ss(v),_funcproto(func));
+	SQObjectPtr closure;
+	
 	unsigned short tag;
 	if(r(up,&tag,2) != 2)
 		return sq_throwerror(v,_SC("io error"));
 	if(tag != SQ_BYTECODE_STREAM_TAG)
 		return sq_throwerror(v,_SC("invalid stream"));
-	if(!_closure(closure)->Load(v,up,r))
+	if(!SQClosure::Load(v,up,r,closure))
 		return SQ_ERROR;
 	v->Push(closure);
 	return SQ_OK;
@@ -1140,10 +1206,10 @@ SQRESULT sq_next(HSQUIRRELVM v,SQInteger
 	if(type(o) == OT_GENERATOR) {
 		return sq_throwerror(v,_SC("cannot iterate a generator"));
 	}
-	bool finished;
-	if(!v->FOREACH_OP(o,realkey,val,refpos,0,finished))
+	int faketojump;
+	if(!v->FOREACH_OP(o,realkey,val,refpos,0,666,faketojump))
 		return SQ_ERROR;
-	if(!finished) {
+	if(faketojump != 666) {
 		v->Push(realkey);
 		v->Push(val);
 		return SQ_OK;
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqarray.h SqPlus/squirrel/sqarray.h
--- ../dnl3/SqPlus/squirrel/sqarray.h	2005-09-25 17:56:20.000000000 -0400
+++ SqPlus/squirrel/sqarray.h	2010-03-26 09:57:54.000000000 -0400
@@ -61,14 +61,22 @@ public:
 	void Extend(const SQArray *a);
 	SQObjectPtr &Top(){return _values.top();}
 	void Pop(){_values.pop_back(); ShrinkIfNeeded(); }
-	void Insert(const SQObject& idx,const SQObject &val){_values.insert((SQUnsignedInteger)tointeger(idx),val);}
+	bool Insert(SQInteger idx,const SQObject &val){
+		if(idx < 0 || idx > (SQInteger)_values.size())
+			return false;
+		_values.insert(idx,val);
+		return true;
+	}
 	void ShrinkIfNeeded() {
 		if(_values.size() <= _values.capacity()>>2) //shrink the array
 			_values.shrinktofit();
 	}
-	void Remove(SQUnsignedInteger idx){
+	bool Remove(SQInteger idx){
+		if(idx < 0 || idx >= (SQInteger)_values.size())
+			return false;
 		_values.remove(idx);
 		ShrinkIfNeeded();
+		return true;
 	}
 	void Release()
 	{
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqbaselib.cpp SqPlus/squirrel/sqbaselib.cpp
--- ../dnl3/SqPlus/squirrel/sqbaselib.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqbaselib.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -30,6 +30,11 @@ bool str2num(const SQChar *s,SQObjectPtr
 	}
 }
 
+static SQInteger base_dummy(HSQUIRRELVM v)
+{
+	return 0;
+}
+
 #ifndef NO_GARBAGE_COLLECTOR
 static SQInteger base_collectgarbage(HSQUIRRELVM v)
 {
@@ -44,6 +49,13 @@ static SQInteger base_getroottable(HSQUI
 	return 1;
 }
 
+static SQInteger base_getconsttable(HSQUIRRELVM v)
+{
+	v->Push(_ss(v)->_consts);
+	return 1;
+}
+
+
 static SQInteger base_setroottable(HSQUIRRELVM v)
 {
 	SQObjectPtr &o=stack_get(v,2);
@@ -52,6 +64,14 @@ static SQInteger base_setroottable(HSQUI
 	return 1;
 }
 
+static SQInteger base_setconsttable(HSQUIRRELVM v)
+{
+	SQObjectPtr &o=stack_get(v,2);
+	if(SQ_FAILED(sq_setconsttable(v))) return SQ_ERROR;
+	v->Push(o);
+	return 1;
+}
+
 static SQInteger base_seterrorhandler(HSQUIRRELVM v)
 {
 	sq_seterrorhandler(v);
@@ -210,6 +230,8 @@ static SQRegFunction base_funcs[]={
 	{_SC("getstackinfos"),base_getstackinfos,2, _SC(".n")},
 	{_SC("getroottable"),base_getroottable,1, NULL},
 	{_SC("setroottable"),base_setroottable,2, NULL},
+	{_SC("getconsttable"),base_getconsttable,1, NULL},
+	{_SC("setconsttable"),base_setconsttable,2, NULL},
 	{_SC("assert"),base_assert,2, NULL},
 	{_SC("print"),base_print,2, NULL},
 	{_SC("compilestring"),base_compilestring,-2, _SC(".ss")},
@@ -217,6 +239,7 @@ static SQRegFunction base_funcs[]={
 	{_SC("suspend"),base_suspend,-1, NULL},
 	{_SC("array"),base_array,-2, _SC(".n")},
 	{_SC("type"),base_type,2, NULL},
+	{_SC("dummy"),base_dummy,0,NULL},
 #ifndef NO_GARBAGE_COLLECTOR
 	{_SC("collectgarbage"),base_collectgarbage,1, _SC("t")},
 #endif
@@ -235,6 +258,9 @@ void sq_base_register(HSQUIRRELVM v)
 		sq_createslot(v,-3);
 		i++;
 	}
+	sq_pushstring(v,_SC("_version_"),-1);
+	sq_pushstring(v,SQUIRREL_VERSION,-1);
+	sq_createslot(v,-3);
 	sq_pushstring(v,_SC("_charsize_"),-1);
 	sq_pushinteger(v,sizeof(SQChar));
 	sq_createslot(v,-3);
@@ -312,6 +338,12 @@ static SQInteger obj_delegate_weakref(HS
 	return 1;
 }
 
+static SQInteger obj_clear(HSQUIRRELVM v)
+{
+	return sq_clear(v,-1);
+}
+
+
 static SQInteger number_delegate_tochar(HSQUIRRELVM v)
 {
 	SQObject &o=stack_get(v,1);
@@ -361,6 +394,7 @@ SQRegFunction SQSharedState::_table_defa
 	{_SC("rawin"),container_rawexists,2, _SC("t")},
 	{_SC("weakref"),obj_delegate_weakref,1, NULL },
 	{_SC("tostring"),default_delegate_tostring,1, _SC(".")},
+	{_SC("clear"),obj_clear,1, _SC(".")},
 	{0,0}
 };
 
@@ -402,7 +436,8 @@ static SQInteger array_insert(HSQUIRRELV
 	SQObject &o=stack_get(v,1);
 	SQObject &idx=stack_get(v,2);
 	SQObject &val=stack_get(v,3);
-	_array(o)->Insert(idx,val);
+	if(!_array(o)->Insert(tointeger(idx),val))
+		return sq_throwerror(v,_SC("index out of range"));
 	return 0;
 }
 
@@ -448,6 +483,7 @@ bool _qsort_compare(HSQUIRRELVM v,SQObje
 		v->Push(a);
 		v->Push(b);
 		if(SQ_FAILED(sq_call(v, 3, SQTrue, SQFalse))) {
+			if(!sq_isstring( v->_lasterror)) 
 			v->Raise_Error(_SC("compare func failed"));
 			return false;
 		}
@@ -476,6 +512,10 @@ bool _qsort(HSQUIRRELVM v,SQObjectPtr &a
 			} while( ret <= 0);
 			do {
 				--j; 
+				if ( j < 0 ) {
+					v->Raise_Error( _SC("Invalid qsort, probably compare function defect") ); 
+					return false; 
+				}
 				if(!_qsort_compare(v,arr,a->_values[j],pivot,func,ret))
 					return false;
 			}
@@ -508,9 +548,11 @@ static SQInteger array_slice(HSQUIRRELVM
 	SQInteger sidx,eidx;
 	SQObjectPtr o;
 	if(get_slice_params(v,sidx,eidx,o)==-1)return -1;
-	if(sidx<0)sidx=_array(o)->Size()+sidx;
-	if(eidx<0)eidx=_array(o)->Size()+eidx;
-	if(eidx <= sidx)return sq_throwerror(v,_SC("wrong indexes"));
+	SQInteger alen = _array(o)->Size();
+	if(sidx < 0)sidx = alen + sidx;
+	if(eidx < 0)eidx = alen + eidx;
+	if(eidx < sidx)return sq_throwerror(v,_SC("wrong indexes"));
+	if(eidx > alen)return sq_throwerror(v,_SC("slice out of range"));
 	SQArray *arr=SQArray::Create(_ss(v),eidx-sidx);
 	SQObjectPtr t;
 	SQInteger count=0;
@@ -538,6 +580,7 @@ SQRegFunction SQSharedState::_array_defa
 	{_SC("slice"),array_slice,-1, _SC("ann")},
 	{_SC("weakref"),obj_delegate_weakref,1, NULL },
 	{_SC("tostring"),default_delegate_tostring,1, _SC(".")},
+	{_SC("clear"),obj_clear,1, _SC(".")},
 	{0,0}
 };
 
@@ -547,10 +590,11 @@ static SQInteger string_slice(HSQUIRRELV
 	SQInteger sidx,eidx;
 	SQObjectPtr o;
 	if(SQ_FAILED(get_slice_params(v,sidx,eidx,o)))return -1;
-	if(sidx<0)sidx=_string(o)->_len+sidx;
-	if(eidx<0)eidx=_string(o)->_len+eidx;
-	if(eidx<sidx)
-		return sq_throwerror(v,_SC("wrong indexes"));
+	SQInteger slen = _string(o)->_len;
+	if(sidx < 0)sidx = slen + sidx;
+	if(eidx < 0)eidx = slen + eidx;
+	if(eidx < sidx)	return sq_throwerror(v,_SC("wrong indexes"));
+	if(eidx > slen)	return sq_throwerror(v,_SC("slice out of range"));
 	v->Push(SQString::Create(_ss(v),&_stringval(o)[sidx],eidx-sidx));
 	return 1;
 }
@@ -653,9 +697,9 @@ static SQInteger closure_getinfos(HSQUIR
 	SQTable *res = SQTable::Create(_ss(v),4);
 	if(type(o) == OT_CLOSURE) {
 		SQFunctionProto *f = _funcproto(_closure(o)->_function);
-		SQInteger nparams = f->_parameters.size() + (f->_varparams?1:0);
+		SQInteger nparams = f->_nparameters + (f->_varparams?1:0);
 		SQObjectPtr params = SQArray::Create(_ss(v),nparams);
-		for(SQUnsignedInteger n = 0; n<f->_parameters.size(); n++) {
+		for(SQInteger n = 0; n<f->_nparameters; n++) {
 			_array(params)->Set((SQInteger)n,f->_parameters[n]);
 		}
 		if(f->_varparams) {
@@ -722,6 +766,7 @@ SQRegFunction SQSharedState::_generator_
 
 static SQInteger thread_call(HSQUIRRELVM v)
 {
+	
 	SQObjectPtr o = stack_get(v,1);
 	if(type(o) == OT_THREAD) {
 		SQInteger nparams = sq_gettop(v);
@@ -730,8 +775,10 @@ static SQInteger thread_call(HSQUIRRELVM
 			sq_move(_thread(o),v,i);
 		if(SQ_SUCCEEDED(sq_call(_thread(o),nparams,SQTrue,SQFalse))) {
 			sq_move(v,_thread(o),-1);
+			sq_pop(_thread(o),1);
 			return 1;
 		}
+		v->_lasterror = _thread(o)->_lasterror;
 		return SQ_ERROR;
 	}
 	return sq_throwerror(v,_SC("wrong parameter"));
@@ -758,14 +805,16 @@ static SQInteger thread_wakeup(HSQUIRREL
 		if(wakeupret) {
 			sq_move(thread,v,2);
 		}
-		if(SQ_SUCCEEDED(sq_wakeupvm(thread,wakeupret,1,SQFalse))) {
+		if(SQ_SUCCEEDED(sq_wakeupvm(thread,wakeupret,SQTrue,SQFalse))) {
 			sq_move(v,thread,-1);
-			sq_pop(thread,1);
+			sq_pop(thread,1); //pop retval
 			if(sq_getvmstate(thread) == SQ_VMSTATE_IDLE) {
-				sq_pop(thread,1);
+				sq_settop(thread,1); //pop roottable
 			}
 			return 1;
 		}
+		sq_settop(thread,1);
+		v->_lasterror = thread->_lasterror;
 		return SQ_ERROR;
 	}
 	return sq_throwerror(v,_SC("wrong parameter"));
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqclass.cpp SqPlus/squirrel/sqclass.cpp
--- ../dnl3/SqPlus/squirrel/sqclass.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqclass.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -12,6 +12,7 @@ SQClass::SQClass(SQSharedState *ss,SQCla
 	_base = base;
 	_typetag = 0;
 	_hook = NULL;
+	_udsize = 0;
 	_metamethods.resize(MT_LAST); //size it to max size
 	if(_base) {
 		_defaultvalues.copy(base->_defaultvalues);
@@ -61,7 +62,7 @@ bool SQClass::NewSlot(SQSharedState *ss,
 		} 
 		else {
 			if(type(temp) == OT_NULL) {
-				SQClassMemeber m;
+				SQClassMember m;
 				m.val = val;
 				_members->NewSlot(key,SQObjectPtr(_make_method_idx(_methods.size())));
 				_methods.push_back(m);
@@ -72,7 +73,7 @@ bool SQClass::NewSlot(SQSharedState *ss,
 		}
 		return true;
 	}
-	SQClassMemeber m;
+	SQClassMember m;
 	m.val = val;
 	_members->NewSlot(key,SQObjectPtr(_make_field_idx(_defaultvalues.size())));
 	_defaultvalues.push_back(m);
@@ -139,8 +140,8 @@ SQInstance::SQInstance(SQSharedState *ss
 {
 	_memsize = memsize;
 	_class = c;
-	_nvalues = _class->_defaultvalues.size();
-	for(SQUnsignedInteger n = 0; n < _nvalues; n++) {
+	SQUnsignedInteger nvalues = _class->_defaultvalues.size();
+	for(SQUnsignedInteger n = 0; n < nvalues; n++) {
 		new (&_values[n]) SQObjectPtr(_class->_defaultvalues[n].val);
 	}
 	Init(ss);
@@ -150,8 +151,8 @@ SQInstance::SQInstance(SQSharedState *ss
 {
 	_memsize = memsize;
 	_class = i->_class;
-	_nvalues = _class->_defaultvalues.size();
-	for(SQUnsignedInteger n = 0; n < _nvalues; n++) {
+	SQUnsignedInteger nvalues = _class->_defaultvalues.size();
+	for(SQUnsignedInteger n = 0; n < nvalues; n++) {
 		new (&_values[n]) SQObjectPtr(i->_values[n]);
 	}
 	Init(ss);
@@ -159,8 +160,9 @@ SQInstance::SQInstance(SQSharedState *ss
 
 void SQInstance::Finalize() 
 {
+	SQUnsignedInteger nvalues = _class->_defaultvalues.size();
 	__ObjRelease(_class);
-	for(SQUnsignedInteger i = 0; i < _nvalues; i++) {
+	for(SQUnsignedInteger i = 0; i < nvalues; i++) {
 		_values[i] = _null_;
 	}
 }
@@ -168,7 +170,7 @@ void SQInstance::Finalize() 
 SQInstance::~SQInstance()
 {
 	REMOVE_FROM_CHAIN(&_sharedstate->_gc_chain, this);
-	Finalize();
+	if(_class){ Finalize(); } //if _class is null it was already finalized by the GC
 }
 
 bool SQInstance::GetMetaMethod(SQVM *v,SQMetaMethod mm,SQObjectPtr &res)
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqclass.h SqPlus/squirrel/sqclass.h
--- ../dnl3/SqPlus/squirrel/sqclass.h	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqclass.h	2010-03-26 09:57:54.000000000 -0400
@@ -4,9 +4,9 @@
 
 struct SQInstance;
 
-struct SQClassMemeber {
-	SQClassMemeber(){}
-	SQClassMemeber(const SQClassMemeber &o) {
+struct SQClassMember {
+	SQClassMember(){}
+	SQClassMember(const SQClassMember &o) {
 		val = o.val;
 		attrs = o.attrs;
 	}
@@ -14,7 +14,7 @@ struct SQClassMemeber {
 	SQObjectPtr attrs;
 };
 
-typedef sqvector<SQClassMemeber> SQClassMemeberVec;
+typedef sqvector<SQClassMember> SQClassMemberVec;
 
 #define MEMBER_TYPE_METHOD 0x01000000
 #define MEMBER_TYPE_FIELD 0x02000000
@@ -65,17 +65,19 @@ public:
 	SQInstance *CreateInstance();
 	SQTable *_members;
 	SQClass *_base;
-	SQClassMemeberVec _defaultvalues;
-	SQClassMemeberVec _methods;
+	SQClassMemberVec _defaultvalues;
+	SQClassMemberVec _methods;
 	SQObjectPtrVec _metamethods;
 	SQObjectPtr _attributes;
 	SQUserPointer _typetag;
 	SQRELEASEHOOK _hook;
 	bool _locked;
+	SQInteger _udsize;
 };
 
 #define calcinstancesize(_theclass_) \
-	(sizeof(SQInstance)+(sizeof(SQObjectPtr)*(_theclass_->_defaultvalues.size()>0?_theclass_->_defaultvalues.size()-1:0)))
+	(_theclass_->_udsize + sizeof(SQInstance) + (sizeof(SQObjectPtr)*(_theclass_->_defaultvalues.size()>0?_theclass_->_defaultvalues.size()-1:0)))
+
 struct SQInstance : public SQDelegable 
 {
 	void Init(SQSharedState *ss);
@@ -87,6 +89,9 @@ public:
 		SQInteger size = calcinstancesize(theclass);
 		SQInstance *newinst = (SQInstance *)SQ_MALLOC(size);
 		new (newinst) SQInstance(ss, theclass,size);
+		if(theclass->_udsize) {
+			newinst->_userpointer = ((unsigned char *)newinst) + (size - theclass->_udsize);
+		}
 		return newinst;
 	}
 	SQInstance *Clone(SQSharedState *ss)
@@ -94,6 +99,9 @@ public:
 		SQInteger size = calcinstancesize(_class);
 		SQInstance *newinst = (SQInstance *)SQ_MALLOC(size);
 		new (newinst) SQInstance(ss, this,size);
+		if(_class->_udsize) {
+			newinst->_userpointer = ((unsigned char *)newinst) + (size - _class->_udsize);
+		}
 		return newinst;
 	}
 	~SQInstance();
@@ -119,7 +127,10 @@ public:
 		return false;
 	}
 	void Release() { 
+		_uiRef++;
 		if (_hook) { _hook(_userpointer,0);}
+		_uiRef--;
+		if(_uiRef > 0) return;
 		SQInteger size = _memsize;
 		this->~SQInstance();
 		SQ_FREE(this, size);
@@ -134,7 +145,6 @@ public:
 	SQClass *_class;
 	SQUserPointer _userpointer;
 	SQRELEASEHOOK _hook;
-	SQUnsignedInteger _nvalues;
 	SQInteger _memsize;
 	SQObjectPtr _values[1];
 };
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqclosure.h SqPlus/squirrel/sqclosure.h
--- ../dnl3/SqPlus/squirrel/sqclosure.h	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqclosure.h	2010-03-26 09:57:54.000000000 -0400
@@ -22,6 +22,7 @@ public:
 		SQClosure * ret = SQClosure::Create(_opt_ss(this),_funcproto(_function));
 		ret->_env = _env;
 		ret->_outervalues.copy(_outervalues);
+		ret->_defaultparams.copy(_defaultparams);
 		return ret;
 	}
 	~SQClosure()
@@ -29,7 +30,7 @@ public:
 		REMOVE_FROM_CHAIN(&_ss(this)->_gc_chain,this);
 	}
 	bool Save(SQVM *v,SQUserPointer up,SQWRITEFUNC write);
-	bool Load(SQVM *v,SQUserPointer up,SQREADFUNC read);
+	static bool Load(SQVM *v,SQUserPointer up,SQREADFUNC read,SQObjectPtr &ret);
 #ifndef NO_GARBAGE_COLLECTOR
 	void Mark(SQCollectable **chain);
 	void Finalize(){_outervalues.resize(0); }
@@ -37,13 +38,14 @@ public:
 	SQObjectPtr _env;
 	SQObjectPtr _function;
 	SQObjectPtrVec _outervalues;
+	SQObjectPtrVec _defaultparams;
 };
 //////////////////////////////////////////////
 struct SQGenerator : public CHAINABLE_OBJ 
 {
 	enum SQGeneratorState{eRunning,eSuspended,eDead};
 private:
-	SQGenerator(SQSharedState *ss,SQClosure *closure){_closure=closure;_state=eRunning;_ci._generator=_null_;INIT_CHAIN();ADD_TO_CHAIN(&_ss(this)->_gc_chain,this);}
+	SQGenerator(SQSharedState *ss,SQClosure *closure){_closure=closure;_state=eRunning;_ci._generator=NULL;INIT_CHAIN();ADD_TO_CHAIN(&_ss(this)->_gc_chain,this);}
 public:
 	static SQGenerator *Create(SQSharedState *ss,SQClosure *closure){
 		SQGenerator *nc=(SQGenerator*)SQ_MALLOC(sizeof(SQGenerator));
@@ -92,7 +94,7 @@ public:
 		ret->_env = _env;
 		ret->_name = _name;
 		ret->_outervalues.copy(_outervalues);
-		ret->_typecheck = _typecheck;
+		ret->_typecheck.copy(_typecheck);
 		ret->_nparamscheck = _nparamscheck;
 		return ret;
 	}
@@ -107,12 +109,12 @@ public:
 	void Mark(SQCollectable **chain);
 	void Finalize(){_outervalues.resize(0);}
 #endif
+	SQInteger _nparamscheck;
+	SQIntVec _typecheck;
+	SQObjectPtrVec _outervalues;
 	SQObjectPtr _env;
 	SQFUNCTION _function;
 	SQObjectPtr _name;
-	SQObjectPtrVec _outervalues;
-	SQIntVec _typecheck;
-	SQInteger _nparamscheck;
 };
 
 
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqcompiler.cpp SqPlus/squirrel/sqcompiler.cpp
--- ../dnl3/SqPlus/squirrel/sqcompiler.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqcompiler.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -3,7 +3,9 @@
 */
 #include "sqpcheader.h"
 #include <stdarg.h>
+#if !defined ( SQNOSETJMP )
 #include <setjmp.h>
+#endif
 #include "sqopcodes.h"
 #include "sqstring.h"
 #include "sqfuncproto.h"
@@ -11,6 +13,7 @@
 #include "sqfuncstate.h"
 #include "sqlexer.h"
 #include "sqvm.h"
+#include "sqtable.h"
 
 #define DEREF_NO_DEREF	-1
 #define DEREF_FIELD		-2
@@ -64,10 +67,19 @@ public:
 		static SQChar temp[256];
 		va_list vl;
 		va_start(vl, s);
+#if !defined( SQUNICODE ) || defined( _MSC_VER ) || defined( _WIN32_WCE )
 		scvsprintf(temp, s, vl);
+#else
+		scvsprintf(temp, sizeof( temp ), s, vl);
+#endif
+
 		va_end(vl);
 		compilererror = temp;
+#if defined ( SQNOSETJMP )
+		throw 1;
+#else
 		longjmp(_errorjmp,1);
+#endif
 	}
 	void Lex(){	_token = _lex.Lex();}
 	void PushExpState(){ _expstates.push_back(ExpState()); }
@@ -163,7 +175,11 @@ public:
 		_fs->AddParameter(_fs->CreateString(_SC("this")));
 		_fs->_sourcename = _sourcename;
 		SQInteger stacksize = _fs->GetStackSize();
+#if defined ( SQNOSETJMP )
+		try {
+#else
 		if(setjmp(_errorjmp) == 0) {
+#endif
 			Lex();
 			while(_token > 0){
 				Statement();
@@ -178,7 +194,11 @@ public:
 			_fs->Dump(_funcproto(o));
 #endif
 		}
+#if defined ( SQNOSETJMP )
+		catch( ... ) {
+#else
 		else {
+#endif
 			if(_raiseerror && _ss(_vm)->_compilererrorhandler) {
 				_ss(_vm)->_compilererrorhandler(_vm, compilererror, type(_sourcename) == OT_STRING?_stringval(_sourcename):_SC("unknown"),
 					_lex._currentline, _lex._currentcolumn);
@@ -258,6 +278,9 @@ public:
 		case TK_CLASS:
 			ClassStatement();
 			break;
+		case TK_ENUM:
+			EnumStatement();
+			break;
 		case _SC('{'):{
 				SQInteger stacksize = _fs->GetStackSize();
 				Lex();
@@ -274,6 +297,19 @@ public:
 			CommaExpr();
 			_fs->AddInstruction(_OP_THROW, _fs->PopTarget());
 			break;
+		case TK_CONST:
+			{
+			Lex();
+			SQObject id = Expect(TK_IDENTIFIER);
+			Expect('=');
+			SQObject val = ExpectScalar();
+			OptionalSemicolon();
+			SQTable *enums = _table(_ss(_vm)->_consts);
+			SQObjectPtr strongid = id;
+			enums->NewSlot(strongid,SQObjectPtr(val));
+			strongid.Null();
+			}
+			break;
 		default:
 			CommaExpr();
 			_fs->PopTarget();
@@ -599,6 +635,7 @@ public:
 		case TK_THIS:{
 			_exst._freevar = false;
 			SQObject id;
+			SQObject constant;
 				switch(_token) {
 					case TK_IDENTIFIER: id = _fs->CreateString(_lex._svalue); break;
 					case TK_THIS: id = _fs->CreateString(_SC("this")); break;
@@ -612,7 +649,36 @@ public:
 						_exst._deref = _fs->PushTarget();
 						_fs->AddInstruction(_OP_LOADFREEVAR, _exst._deref ,pos);	
 						_exst._freevar = true;
-					} else {
+					}
+					else if(_fs->IsConstant(id,constant)) { //line 634
+						SQObjectPtr constval;
+						SQObject constid;
+						if(type(constant) == OT_TABLE) {
+							Expect('.'); constid = Expect(TK_IDENTIFIER);
+							if(!_table(constant)->Get(constid,constval)) {
+								constval.Null();
+								Error(_SC("invalid constant [%s.%s]"), _stringval(id),_stringval(constid));
+							}
+						}
+						else {
+							constval = constant;
+						}
+						_exst._deref = _fs->PushTarget();
+						SQObjectType ctype = type(constval);
+						if(ctype == OT_INTEGER && (_integer(constval) & (~0x7FFFFFFF)) == 0) {
+							_fs->AddInstruction(_OP_LOADINT, _exst._deref,_integer(constval));
+						}
+						else if(ctype == OT_FLOAT && sizeof(SQFloat) == sizeof(SQInt32)) {
+							SQFloat f = _float(constval);
+							_fs->AddInstruction(_OP_LOADFLOAT, _exst._deref,*((SQInt32 *)&f));
+						}
+						else {
+							_fs->AddInstruction(_OP_LOAD, _exst._deref, _fs->GetConstant(constval));
+						}
+
+						_exst._freevar = true;
+					}
+					else {
 						_fs->PushTarget(0);
 						_fs->AddInstruction(_OP_LOAD, _fs->PushTarget(), _fs->GetConstant(id));
 						if(NeedGet()) Emit2ArgsOP(_OP_GET);
@@ -648,7 +715,12 @@ public:
 						 }
 			break;
 		case TK_FLOAT: 
+			if(sizeof(SQFloat) == sizeof(SQInt32)) {
+				_fs->AddInstruction(_OP_LOADFLOAT, _fs->PushTarget(),*((SQInt32 *)&_lex._fvalue));
+			}
+			else {
 			_fs->AddInstruction(_OP_LOAD, _fs->PushTarget(), _fs->GetNumericConstant(_lex._fvalue));
+			}
 			Lex();
 			break;
 		case TK_TRUE: case TK_FALSE:
@@ -938,11 +1010,13 @@ public:
 		SQInteger jmppos = _fs->GetCurrentPos();
 		_fs->AddInstruction(_OP_FOREACH, container, 0, indexpos);
 		SQInteger foreachpos = _fs->GetCurrentPos();
+		_fs->AddInstruction(_OP_POSTFOREACH, container, 0, indexpos);
 		//generate the statement code
 		BEGIN_BREAKBLE_BLOCK()
 		Statement();
 		_fs->AddInstruction(_OP_JMP, 0, jmppos - _fs->GetCurrentPos() - 1);
 		_fs->SetIntructionParam(foreachpos, 1, _fs->GetCurrentPos() - foreachpos);
+		_fs->SetIntructionParam(foreachpos + 1, 1, _fs->GetCurrentPos() - foreachpos);
 		//restore the local variable stack(remove index,val and ref idx)
 		CleanStack(stacksize);
 		END_BREAKBLE_BLOCK(foreachpos - 1);
@@ -1031,6 +1105,62 @@ public:
 		}
 		else Error(_SC("cannot create a class in a local with the syntax(class <local>)"));
 	}
+	SQObject ExpectScalar()
+	{
+		SQObject val;
+		switch(_token) {
+			case TK_INTEGER:
+				val._type = OT_INTEGER;
+				val._unVal.nInteger = _lex._nvalue;
+				break;
+			case TK_FLOAT:
+				val._type = OT_FLOAT;
+				val._unVal.fFloat = _lex._fvalue;
+				break;
+			case TK_STRING_LITERAL:
+				val = _fs->CreateString(_lex._svalue,_lex._longstr.size()-1);
+				break;
+			default:
+			Error(_SC("scalar expected : integer,float or string"));
+		}
+		Lex();
+		return val;
+	}
+	void EnumStatement()
+	{
+
+		Lex();
+		SQObject id = Expect(TK_IDENTIFIER);
+		Expect(_SC('{'));
+
+		SQObject table = _fs->CreateTable();
+		SQInteger nval = 0;
+		while(_token != _SC('}')) {
+			SQObject key = Expect(TK_IDENTIFIER);
+			SQObject val;
+			if(_token == _SC('=')) {
+				Lex();
+				val = ExpectScalar();
+			}
+			else {
+				val._type = OT_INTEGER;
+				val._unVal.nInteger = nval++;
+			}
+			_table(table)->NewSlot(SQObjectPtr(key),SQObjectPtr(val));
+			if(_token == ',') Lex();
+		}
+		SQTable *enums = _table(_ss(_vm)->_consts);
+		SQObjectPtr strongid = id;
+		/*SQObjectPtr dummy;
+		if(enums->Get(strongid,dummy)) {
+			dummy.Null(); strongid.Null();
+			Error(_SC("enumeration already exists"));
+		}*/
+		enums->NewSlot(SQObjectPtr(strongid),SQObjectPtr(table));
+		strongid.Null();
+		Lex();
+
+	}
 	void TryCatchStatement()
 	{
 		SQObject exid;
@@ -1124,8 +1254,10 @@ public:
 		SQObject paramname;
 		funcstate->AddParameter(_fs->CreateString(_SC("this")));
 		funcstate->_sourcename = _sourcename;
+		SQInteger defparams = 0;
 		while(_token!=_SC(')')) {
 			if(_token == TK_VARPARAMS) {
+				if(defparams > 0) Error(_SC("function with default parameters cannot have variable number of parameters"));
 				funcstate->_varparams = true;
 				Lex();
 				if(_token != _SC(')')) Error(_SC("expected ')'"));
@@ -1134,11 +1266,23 @@ public:
 			else {
 				paramname = Expect(TK_IDENTIFIER);
 				funcstate->AddParameter(paramname);
+				if(_token == _SC('=')) {
+					Lex();
+					Expression();
+					funcstate->AddDefaultParam(_fs->TopTarget());
+					defparams++;
+				}
+				else {
+					if(defparams > 0) Error(_SC("expected '='"));
+				}
 				if(_token == _SC(',')) Lex();
 				else if(_token != _SC(')')) Error(_SC("expected ')' or ','"));
 			}
 		}
 		Expect(_SC(')'));
+		for(SQInteger n = 0; n < defparams; n++) {
+			_fs->PopTarget();
+		}
 		//outer values
 		if(_token == _SC(':')) {
 			Lex(); Expect(_SC('('));
@@ -1203,7 +1347,9 @@ private:
 	SQInteger _debugop;
 	ExpStateVec _expstates;
 	SQChar *compilererror;
+#if !defined ( SQNOSETJMP )
 	jmp_buf _errorjmp;
+#endif
 	SQVM *_vm;
 };
 
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqcompiler.h SqPlus/squirrel/sqcompiler.h
--- ../dnl3/SqPlus/squirrel/sqcompiler.h	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqcompiler.h	2010-03-26 09:57:54.000000000 -0400
@@ -68,6 +68,8 @@ struct SQVM;
 #define TK_ATTR_OPEN 320
 #define TK_ATTR_CLOSE 321
 #define TK_STATIC 322
+#define TK_ENUM 323
+#define TK_CONST 324
 
 
 typedef void(*CompilerErrorFunc)(void *ud, const SQChar *s);
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqdebug.cpp SqPlus/squirrel/sqdebug.cpp
--- ../dnl3/SqPlus/squirrel/sqdebug.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqdebug.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -10,7 +10,7 @@
 
 SQRESULT sq_stackinfos(HSQUIRRELVM v, SQInteger level, SQStackInfos *si)
 {
-	SQInteger cssize = v->_callsstack.size();
+	SQInteger cssize = v->_callsstacksize;
 	if (cssize > level) {
 		memset(si, 0, sizeof(SQStackInfos));
 		SQVM::CallInfo &ci = v->_callsstack[cssize-level-1];
@@ -42,7 +42,11 @@ void SQVM::Raise_Error(const SQChar *s, 
 {
 	va_list vl;
 	va_start(vl, s);
+#if !defined( SQUNICODE ) || defined( _MSC_VER ) || defined( _WIN32_WCE )
 	scvsprintf(_sp(rsl((SQInteger)scstrlen(s)+(NUMBER_MAX_CHAR*2))), s, vl);
+#else
+	scvsprintf(_sp(rsl((SQInteger)scstrlen(s)+(NUMBER_MAX_CHAR*2))), NUMBER_MAX_CHAR, s, vl);
+#endif
 	va_end(vl);
 	_lasterror = SQString::Create(_ss(this),_spval,-1);
 }
@@ -57,11 +61,19 @@ SQString *SQVM::PrintObjVal(const SQObje
 	switch(type(o)) {
 	case OT_STRING: return _string(o);
 	case OT_INTEGER:
+#if !defined( SQUNICODE ) || defined( _MSC_VER ) || defined( _WIN32_WCE )
 		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)), _SC("%d"), _integer(o));
+#else
+		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)), NUMBER_MAX_CHAR, _SC("%d"), _integer(o));
+#endif
 		return SQString::Create(_ss(this), _spval);
 		break;
 	case OT_FLOAT:
+#if !defined( SQUNICODE ) || defined( _MSC_VER ) || defined( _WIN32_WCE )
 		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)), _SC("%.14g"), _float(o));
+#else
+		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)), NUMBER_MAX_CHAR, _SC("%.14g"), _float(o));
+#endif
 		return SQString::Create(_ss(this), _spval);
 		break;
 	default:
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqfuncproto.h SqPlus/squirrel/sqfuncproto.h
--- ../dnl3/SqPlus/squirrel/sqfuncproto.h	2005-09-25 17:56:20.000000000 -0400
+++ SqPlus/squirrel/sqfuncproto.h	2010-03-26 09:57:54.000000000 -0400
@@ -53,6 +53,23 @@ typedef sqvector<SQOuterVar> SQOuterVarV
 typedef sqvector<SQLocalVarInfo> SQLocalVarInfoVec;
 typedef sqvector<SQLineInfo> SQLineInfoVec;
 
+#define _FUNC_SIZE(ni,nl,nparams,nfuncs,nouters,nlineinf,localinf,defparams) (sizeof(SQFunctionProto) \
+		+((ni-1)*sizeof(SQInstruction))+(nl*sizeof(SQObjectPtr)) \
+		+(nparams*sizeof(SQObjectPtr))+(nfuncs*sizeof(SQObjectPtr)) \
+		+(nouters*sizeof(SQOuterVar))+(nlineinf*sizeof(SQLineInfo)) \
+		+(localinf*sizeof(SQLocalVarInfo))+(defparams*sizeof(SQInteger)))
+
+#define _CONSTRUCT_VECTOR(type,size,ptr) { \
+	for(SQInteger n = 0; n < size; n++) { \
+			new (&ptr[n]) type(); \
+		} \
+}
+
+#define _DESTRUCT_VECTOR(type,size,ptr) { \
+	for(SQInteger nl = 0; nl < size; nl++) { \
+			ptr[nl].~type(); \
+	} \
+}
 struct SQFunctionProto : public SQRefCounted
 {
 private:
@@ -60,29 +77,84 @@ private:
 	_stacksize=0;
 	_bgenerator=false;}
 public:
-	static SQFunctionProto *Create()
+	static SQFunctionProto *Create(SQInteger ninstructions,
+		SQInteger nliterals,SQInteger nparameters,
+		SQInteger nfunctions,SQInteger noutervalues,
+		SQInteger nlineinfos,SQInteger nlocalvarinfos,SQInteger ndefaultparams)
 	{
 		SQFunctionProto *f;
-		sq_new(f,SQFunctionProto);
+		//I compact the whole class and members in a single memory allocation
+		f = (SQFunctionProto *)sq_vm_malloc(_FUNC_SIZE(ninstructions,nliterals,nparameters,nfunctions,noutervalues,nlineinfos,nlocalvarinfos,ndefaultparams));
+		new (f) SQFunctionProto;
+		f->_ninstructions = ninstructions;
+		f->_literals = (SQObjectPtr*)&f->_instructions[ninstructions];
+		f->_nliterals = nliterals;
+		f->_parameters = (SQObjectPtr*)&f->_literals[nliterals];
+		f->_nparameters = nparameters;
+		f->_functions = (SQObjectPtr*)&f->_parameters[nparameters];
+		f->_nfunctions = nfunctions;
+		f->_outervalues = (SQOuterVar*)&f->_functions[nfunctions];
+		f->_noutervalues = noutervalues;
+		f->_lineinfos = (SQLineInfo *)&f->_outervalues[noutervalues];
+		f->_nlineinfos = nlineinfos;
+		f->_localvarinfos = (SQLocalVarInfo *)&f->_lineinfos[nlineinfos];
+		f->_nlocalvarinfos = nlocalvarinfos;
+		f->_defaultparams = (SQInteger *)&f->_localvarinfos[nlocalvarinfos];
+		f->_ndefaultparams = ndefaultparams;
+
+		_CONSTRUCT_VECTOR(SQObjectPtr,f->_nliterals,f->_literals);
+		_CONSTRUCT_VECTOR(SQObjectPtr,f->_nparameters,f->_parameters);
+		_CONSTRUCT_VECTOR(SQObjectPtr,f->_nfunctions,f->_functions);
+		_CONSTRUCT_VECTOR(SQOuterVar,f->_noutervalues,f->_outervalues);
+		//_CONSTRUCT_VECTOR(SQLineInfo,f->_nlineinfos,f->_lineinfos); //not required are 2 integers
+		_CONSTRUCT_VECTOR(SQLocalVarInfo,f->_nlocalvarinfos,f->_localvarinfos);
 		return f;
 	}
-	void Release(){ sq_delete(this,SQFunctionProto);}
+	void Release(){ 
+		_DESTRUCT_VECTOR(SQObjectPtr,_nliterals,_literals);
+		_DESTRUCT_VECTOR(SQObjectPtr,_nparameters,_parameters);
+		_DESTRUCT_VECTOR(SQObjectPtr,_nfunctions,_functions);
+		_DESTRUCT_VECTOR(SQOuterVar,_noutervalues,_outervalues);
+		//_DESTRUCT_VECTOR(SQLineInfo,_nlineinfos,_lineinfos); //not required are 2 integers
+		_DESTRUCT_VECTOR(SQLocalVarInfo,_nlocalvarinfos,_localvarinfos);
+		SQInteger size = _FUNC_SIZE(_ninstructions,_nliterals,_nparameters,_nfunctions,_noutervalues,_nlineinfos,_nlocalvarinfos,_ndefaultparams);
+		this->~SQFunctionProto();
+		sq_vm_free(this,size);
+	}
 	const SQChar* GetLocal(SQVM *v,SQUnsignedInteger stackbase,SQUnsignedInteger nseq,SQUnsignedInteger nop);
 	SQInteger GetLine(SQInstruction *curr);
 	bool Save(SQVM *v,SQUserPointer up,SQWRITEFUNC write);
-	bool Load(SQVM *v,SQUserPointer up,SQREADFUNC read);
-	SQObjectPtrVec _literals;
-	SQObjectPtrVec _functions;
-	SQObjectPtrVec _parameters;
-	SQOuterVarVec _outervalues;
-	SQInstructionVec _instructions;
+	static bool Load(SQVM *v,SQUserPointer up,SQREADFUNC read,SQObjectPtr &ret);
+
 	SQObjectPtr _sourcename;
 	SQObjectPtr _name;
-	SQLocalVarInfoVec _localvarinfos;
-	SQLineInfoVec _lineinfos;
     SQInteger _stacksize;
 	bool _bgenerator;
 	bool _varparams;
+
+	SQInteger _nlocalvarinfos;
+	SQLocalVarInfo *_localvarinfos;
+
+	SQInteger _nlineinfos;
+	SQLineInfo *_lineinfos;
+
+	SQInteger _nliterals;
+	SQObjectPtr *_literals;
+
+	SQInteger _nparameters;
+	SQObjectPtr *_parameters;
+	
+	SQInteger _nfunctions;
+	SQObjectPtr *_functions;
+
+	SQInteger _noutervalues;
+	SQOuterVar *_outervalues;
+
+	SQInteger _ndefaultparams;
+	SQInteger *_defaultparams;
+	
+	SQInteger _ninstructions;
+	SQInstruction _instructions[1];
 };
 
 #endif //_SQFUNCTION_H_
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqfuncstate.cpp SqPlus/squirrel/sqfuncstate.cpp
--- ../dnl3/SqPlus/squirrel/sqfuncstate.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqfuncstate.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -14,6 +14,7 @@ SQInstructionDesc g_InstrDesc[]={
 	{_SC("_OP_LINE")},
 	{_SC("_OP_LOAD")},
 	{_SC("_OP_LOADINT")},
+	{_SC("_OP_LOADFLOAT")},
 	{_SC("_OP_DLOAD")},
 	{_SC("_OP_TAILCALL")},
 	{_SC("_OP_CALL")},
@@ -62,6 +63,7 @@ SQInstructionDesc g_InstrDesc[]={
 	{_SC("_OP_YIELD")},
 	{_SC("_OP_RESUME")},
 	{_SC("_OP_FOREACH")},
+	{_SC("_OP_POSTFOREACH")},
 	{_SC("_OP_DELEGATE")},
 	{_SC("_OP_CLONE")},
 	{_SC("_OP_TYPEOF")},
@@ -78,7 +80,8 @@ void DumpLiteral(SQObjectPtr &o)
 		case OT_STRING:	scprintf(_SC("\"%s\""),_stringval(o));break;
 		case OT_FLOAT: scprintf(_SC("{%f}"),_float(o));break;
 		case OT_INTEGER: scprintf(_SC("{%d}"),_integer(o));break;
-		default: assert(0); break; //shut up compiler
+		case OT_BOOL: scprintf(_SC("%s"),_integer(o)?_SC("true"):_SC("false"));break;
+		default: scprintf(_SC("(%s %p)"),GetTypeName(o),_rawval(o));break; break; //shut up compiler
 	}
 }
 
@@ -110,6 +113,7 @@ void SQFuncState::Error(const SQChar *er
 void SQFuncState::Dump(SQFunctionProto *func)
 {
 	SQUnsignedInteger n=0,i;
+	SQInteger si;
 	scprintf(_SC("SQInstruction sizeof %d\n"),sizeof(SQInstruction));
 	scprintf(_SC("SQObject sizeof %d\n"),sizeof(SQObject));
 	scprintf(_SC("--------------------------------------------------------------------\n"));
@@ -140,8 +144,8 @@ void SQFuncState::Dump(SQFunctionProto *
 		n++;
 	}
 	scprintf(_SC("-----LOCALS\n"));
-	for(i=0;i<func->_localvarinfos.size();i++){
-		SQLocalVarInfo lvi=func->_localvarinfos[i];
+	for(si=0;si<func->_nlocalvarinfos;si++){
+		SQLocalVarInfo lvi=func->_localvarinfos[si];
 		scprintf(_SC("[%d] %s \t%d %d\n"),lvi._pos,_stringval(lvi._name),lvi._start_op,lvi._end_op);
 		n++;
 	}
@@ -188,6 +192,9 @@ void SQFuncState::Dump(SQFunctionProto *
 			}
 			}
 		}
+		else if(inst.op==_OP_LOADFLOAT) {
+			scprintf(_SC("[%03d] %15s %d %f %d %d\n"),n,g_InstrDesc[inst.op].name,inst._arg0,*((SQFloat*)&inst._arg1),inst._arg2,inst._arg3);
+		}
 		else if(inst.op==_OP_ARITH){
 			scprintf(_SC("[%03d] %15s %d %d %d %c\n"),n,g_InstrDesc[inst.op].name,inst._arg0,inst._arg1,inst._arg2,inst._arg3);
 		}
@@ -304,6 +311,16 @@ void SQFuncState::SetStackSize(SQInteger
 	}
 }
 
+bool SQFuncState::IsConstant(const SQObject &name,SQObject &e)
+{
+	SQObjectPtr val;
+	if(_table(_sharedstate->_consts)->Get(name,val)) {
+		e = val;
+		return true;
+	}
+	return false;
+}
+
 bool SQFuncState::IsLocal(SQUnsignedInteger stkpos)
 {
 	if(stkpos>=_vlocals.size())return false;
@@ -486,10 +503,19 @@ SQObject SQFuncState::CreateString(const
 	return ns;
 }
 
+SQObject SQFuncState::CreateTable()
+{
+	SQObjectPtr nt(SQTable::Create(_sharedstate,0));
+	_table(_strings)->NewSlot(nt,(SQInteger)1);
+	return nt;
+}
+
 SQFunctionProto *SQFuncState::BuildProto()
 {
-	SQFunctionProto *f=SQFunctionProto::Create();
-	f->_literals.resize(_nliterals);
+	SQFunctionProto *f=SQFunctionProto::Create(_instructions.size(),
+		_nliterals,_parameters.size(),_functions.size(),_outervalues.size(),
+		_lineinfos.size(),_localvarinfos.size(),_defaultparams.size());
+
 	SQObjectPtr refidx,key,val;
 	SQInteger idx;
 
@@ -503,18 +529,15 @@ SQFunctionProto *SQFuncState::BuildProto
 		refidx=idx;
 	}
 
-	f->_functions.resize(_functions.size());
-	f->_functions.copy(_functions);
-	f->_parameters.resize(_parameters.size());
-	f->_parameters.copy(_parameters);
-	f->_outervalues.resize(_outervalues.size());
-	f->_outervalues.copy(_outervalues);
-	f->_instructions.resize(_instructions.size());
-	f->_instructions.copy(_instructions);
-	f->_localvarinfos.resize(_localvarinfos.size());
-	f->_localvarinfos.copy(_localvarinfos);
-	f->_lineinfos.resize(_lineinfos.size());
-	f->_lineinfos.copy(_lineinfos);
+	for(SQUnsignedInteger nf = 0; nf < _functions.size(); nf++) f->_functions[nf] = _functions[nf];
+	for(SQUnsignedInteger np = 0; np < _parameters.size(); np++) f->_parameters[np] = _parameters[np];
+	for(SQUnsignedInteger no = 0; no < _outervalues.size(); no++) f->_outervalues[no] = _outervalues[no];
+	for(SQUnsignedInteger no = 0; no < _localvarinfos.size(); no++) f->_localvarinfos[no] = _localvarinfos[no];
+	for(SQUnsignedInteger no = 0; no < _lineinfos.size(); no++) f->_lineinfos[no] = _lineinfos[no];
+	for(SQUnsignedInteger no = 0; no < _defaultparams.size(); no++) f->_defaultparams[no] = _defaultparams[no];
+
+	memcpy(f->_instructions,&_instructions[0],_instructions.size()*sizeof(SQInstruction));
+
 	f->_varparams = _varparams;
 
 	return f;
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqfuncstate.h SqPlus/squirrel/sqfuncstate.h
--- ../dnl3/SqPlus/squirrel/sqfuncstate.h	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqfuncstate.h	2010-03-26 09:57:54.000000000 -0400
@@ -22,6 +22,8 @@ struct SQFuncState
 	void PopInstructions(SQInteger size){for(SQInteger i=0;i<size;i++)_instructions.pop_back();}
 	void SetStackSize(SQInteger n);
 	void SnoozeOpt(){_optimization=false;}
+	void AddDefaultParam(SQInteger trg) { _defaultparams.push_back(trg); }
+	SQInteger GetDefaultParamCount() { return _defaultparams.size(); }
 	SQInteger GetCurrentPos(){return _instructions.size()-1;}
 	SQInteger GetNumericConstant(const SQInteger cons);
 	SQInteger GetNumericConstant(const SQFloat cons);
@@ -42,6 +44,8 @@ struct SQFuncState
 	SQInteger GetUpTarget(SQInteger n);
 	bool IsLocal(SQUnsignedInteger stkpos);
 	SQObject CreateString(const SQChar *s,SQInteger len = -1);
+	SQObject CreateTable();
+	bool IsConstant(const SQObject &name,SQObject &e);
 	SQInteger _returnexp;
 	SQLocalVarInfoVec _vlocals;
 	SQIntVec _targetstack;
@@ -64,6 +68,7 @@ struct SQFuncState
 	SQFuncState *_parent;
 	SQIntVec _breaktargets;
 	SQIntVec _continuetargets;
+	SQIntVec _defaultparams;
 	SQInteger _lastline;
 	SQInteger _traps; //contains number of nested exception traps
 	bool _optimization;
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqlexer.cpp SqPlus/squirrel/sqlexer.cpp
--- ../dnl3/SqPlus/squirrel/sqlexer.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqlexer.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -66,6 +66,8 @@ void SQLexer::Init(SQSharedState *ss, SQ
 	ADD_KEYWORD(true,TK_TRUE);
 	ADD_KEYWORD(false,TK_FALSE);
 	ADD_KEYWORD(static,TK_STATIC);
+	ADD_KEYWORD(enum,TK_ENUM);
+	ADD_KEYWORD(const,TK_CONST);
 
 	_readf = rg;
 	_up = up;
@@ -372,7 +374,21 @@ void LexInteger(const SQChar *s,SQUnsign
 	}
 }
 
+SQInteger scisodigit(SQInteger c) { return c >= _SC('0') && c <= _SC('7'); }
+
+void LexOctal(const SQChar *s,SQUnsignedInteger *res)
+{
+	*res = 0;
+	while(*s != 0)
+	{
+		if(scisodigit(*s)) *res = (*res)*8+((*s++)-'0');
+		else { assert(0); }
+	}
+}
+
 SQInteger isexponent(SQInteger c) { return c == 'e' || c=='E'; }
+
+
 #define MAX_HEX_DIGITS (sizeof(SQInteger)*2)
 SQInteger SQLexer::ReadNumber()
 {
@@ -380,11 +396,21 @@ SQInteger SQLexer::ReadNumber()
 #define TFLOAT 2
 #define THEX 3
 #define TSCIENTIFIC 4
+#define TOCTAL 5
 	SQInteger type = TINT, firstchar = CUR_CHAR;
 	SQChar *sTemp;
 	INIT_TEMP_STRING();
 	NEXT();
-	if(firstchar == _SC('0') && toupper(CUR_CHAR) == _SC('X')) {
+	if(firstchar == _SC('0') && (toupper(CUR_CHAR) == _SC('X') || scisodigit(CUR_CHAR)) ) {
+		if(scisodigit(CUR_CHAR)) {
+			type = TOCTAL;
+			while(scisodigit(CUR_CHAR)) {
+				APPEND_CHAR(CUR_CHAR);
+				NEXT();
+			}
+			if(scisdigit(CUR_CHAR)) Error(_SC("invalid octal number"));
+		}
+		else {
 		NEXT();
 		type = THEX;
 		while(isxdigit(CUR_CHAR)) {
@@ -393,6 +419,7 @@ SQInteger SQLexer::ReadNumber()
 		}
 		if(_longstr.size() > MAX_HEX_DIGITS) Error(_SC("too many digits for an Hex number"));
 	}
+	}
 	else {
 		APPEND_CHAR((int)firstchar);
 		while (CUR_CHAR == _SC('.') || scisdigit(CUR_CHAR) || isexponent(CUR_CHAR)) {
@@ -425,6 +452,9 @@ SQInteger SQLexer::ReadNumber()
 	case THEX:
 		LexHexadecimal(&_longstr[0],(SQUnsignedInteger *)&_nvalue);
 		return TK_INTEGER;
+	case TOCTAL:
+		LexOctal(&_longstr[0],(SQUnsignedInteger *)&_nvalue);
+		return TK_INTEGER;
 	}
 	return 0;
 }
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqlexer.h SqPlus/squirrel/sqlexer.h
--- ../dnl3/SqPlus/squirrel/sqlexer.h	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqlexer.h	2010-03-26 09:57:54.000000000 -0400
@@ -2,7 +2,7 @@
 #ifndef _SQLEXER_H_
 #define _SQLEXER_H_
 
-#ifdef _UNICODE
+#ifdef SQUNICODE
 typedef SQChar LexChar;
 #else
 typedef	unsigned char LexChar;
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqobject.cpp SqPlus/squirrel/sqobject.cpp
--- ../dnl3/SqPlus/squirrel/sqobject.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqobject.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -11,6 +11,40 @@
 #include "sqclass.h"
 #include "sqclosure.h"
 
+
+const SQChar *IdType2Name(SQObjectType type)
+{
+	switch(_RAW_TYPE(type))
+	{
+	case _RT_NULL:return _SC("null");
+	case _RT_INTEGER:return _SC("integer");
+	case _RT_FLOAT:return _SC("float");
+	case _RT_BOOL:return _SC("bool");
+	case _RT_STRING:return _SC("string");
+	case _RT_TABLE:return _SC("table");
+	case _RT_ARRAY:return _SC("array");
+	case _RT_GENERATOR:return _SC("generator");
+	case _RT_CLOSURE:
+	case _RT_NATIVECLOSURE:
+		return _SC("function");
+	case _RT_USERDATA:
+	case _RT_USERPOINTER:
+		return _SC("userdata");
+	case _RT_THREAD: return _SC("thread");
+	case _RT_FUNCPROTO: return _SC("function");
+	case _RT_CLASS: return _SC("class");
+	case _RT_INSTANCE: return _SC("instance");
+	case _RT_WEAKREF: return _SC("weakref");
+	default:
+		return NULL;
+	}
+}
+
+const SQChar *GetTypeName(const SQObjectPtr &obj1)
+{
+	return IdType2Name(type(obj1));	
+}
+
 SQString *SQString::Create(SQSharedState *ss,const SQChar *s,SQInteger len)
 {
 	SQString *str=ADD_STRING(ss,s,len);
@@ -83,6 +117,7 @@ bool SQDelegable::GetMetaMethod(SQVM *v,
 bool SQDelegable::SetDelegate(SQTable *mt)
 {
 	SQTable *temp = mt;
+	if(temp == this) return false;
 	while (temp) {
 		if (temp->_delegate == this) return false; //cycle detected
 		temp = temp->_delegate;
@@ -109,7 +144,7 @@ bool SQGenerator::Yield(SQVM *v)
 	for(SQInteger j = nvargs - 1; j >= 0; j--) {
 		_vargsstack.push_back(v->_vargsstack[vargsbase+j]);
 	}
-	_ci._generator=_null_;
+	_ci._generator=NULL;
 	for(SQInteger i=0;i<_ci._etraps;i++) {
 		_etraps.push_back(v->_etraps.top());
 		v->_etraps.pop_back();
@@ -127,9 +162,9 @@ bool SQGenerator::Resume(SQVM *v,SQInteg
 	PUSH_CALLINFO(v,_ci);
 	SQInteger oldstackbase=v->_stackbase;
 	v->_stackbase=v->_top;
-	v->ci->_target=target;
-	v->ci->_generator=SQObjectPtr(this);
-	v->ci->_vargs.size = _vargsstack.size();
+	v->ci->_target = (SQInt32)target;
+	v->ci->_generator = this;
+	v->ci->_vargs.size = (unsigned short)_vargsstack.size();
 	
 	for(SQInteger i=0;i<_ci._etraps;i++) {
 		v->_etraps.push_back(_etraps.top());
@@ -143,11 +178,14 @@ bool SQGenerator::Resume(SQVM *v,SQInteg
 		v->_vargsstack.push_back(_vargsstack.back());
 		_vargsstack.pop_back();
 	}
-	v->ci->_vargs.base = v->_vargsstack.size() - v->ci->_vargs.size;
+	v->ci->_vargs.base = (unsigned short)(v->_vargsstack.size() - v->ci->_vargs.size);
 	v->_top=v->_stackbase+size;
-	v->ci->_prevtop=prevtop;
-	v->ci->_prevstkbase=v->_stackbase-oldstackbase;
+	v->ci->_prevtop = (SQInt32)prevtop;
+	v->ci->_prevstkbase = (SQInt32)(v->_stackbase - oldstackbase);
 	_state=eRunning;
+	if (type(v->_debughook) != OT_NULL && _rawval(v->_debughook) != _rawval(v->ci->_closure))
+		v->CallDebugHook(_SC('c'));
+
 	return true;
 }
 
@@ -160,7 +198,7 @@ void SQArray::Extend(const SQArray *a){
 
 const SQChar* SQFunctionProto::GetLocal(SQVM *vm,SQUnsignedInteger stackbase,SQUnsignedInteger nseq,SQUnsignedInteger nop)
 {
-	SQUnsignedInteger nvars=_localvarinfos.size();
+	SQUnsignedInteger nvars=_nlocalvarinfos;
 	const SQChar *res=NULL; 
 	if(nvars>=nseq){
  		for(SQUnsignedInteger i=0;i<nvars;i++){
@@ -180,9 +218,9 @@ const SQChar* SQFunctionProto::GetLocal(
 
 SQInteger SQFunctionProto::GetLine(SQInstruction *curr)
 {
-	SQInteger op = (SQInteger)(curr-_instructions._vals);
+	SQInteger op = (SQInteger)(curr-_instructions);
 	SQInteger line=_lineinfos[0]._line;
-	for(SQUnsignedInteger i=1;i<_lineinfos.size();i++){
+	for(SQInteger i=1;i<_nlineinfos;i++){
 		if(_lineinfos[i]._op>=op)
 			return line;
 		line=_lineinfos[i]._line;
@@ -190,7 +228,6 @@ SQInteger SQFunctionProto::GetLine(SQIns
 	return line;
 }
 
-//#define _ERROR_TRAP() error_trap:
 #define _CHECK_IO(exp)  { if(!exp)return false; }
 bool SafeWrite(HSQUIRRELVM v,SQWRITEFUNC write,SQUserPointer up,SQUserPointer dest,SQInteger size)
 {
@@ -286,36 +323,47 @@ bool SQClosure::Save(SQVM *v,SQUserPoint
 	return true;
 }
 
-bool SQClosure::Load(SQVM *v,SQUserPointer up,SQREADFUNC read)
+bool SQClosure::Load(SQVM *v,SQUserPointer up,SQREADFUNC read,SQObjectPtr &ret)
 {
 	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_HEAD));
 	_CHECK_IO(CheckTag(v,read,up,sizeof(SQChar)));
-	_CHECK_IO(_funcproto(_function)->Load(v,up,read));
+	SQObjectPtr func;
+	_CHECK_IO(SQFunctionProto::Load(v,up,read,func));
 	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_TAIL));
+	ret = SQClosure::Create(_ss(v),_funcproto(func));
 	return true;
 }
 
 bool SQFunctionProto::Save(SQVM *v,SQUserPointer up,SQWRITEFUNC write)
 {
-	SQInteger i,nsize=_literals.size();
+	SQInteger i,nliterals = _nliterals,nparameters = _nparameters;
+	SQInteger noutervalues = _noutervalues,nlocalvarinfos = _nlocalvarinfos;
+	SQInteger nlineinfos=_nlineinfos,ninstructions = _ninstructions,nfunctions=_nfunctions;
+	SQInteger ndefaultparams = _ndefaultparams;
 	_CHECK_IO(WriteTag(v,write,up,SQ_CLOSURESTREAM_PART));
 	_CHECK_IO(WriteObject(v,up,write,_sourcename));
 	_CHECK_IO(WriteObject(v,up,write,_name));
 	_CHECK_IO(WriteTag(v,write,up,SQ_CLOSURESTREAM_PART));
-	_CHECK_IO(SafeWrite(v,write,up,&nsize,sizeof(nsize)));
-	for(i=0;i<nsize;i++){
+	_CHECK_IO(SafeWrite(v,write,up,&nliterals,sizeof(nliterals)));
+	_CHECK_IO(SafeWrite(v,write,up,&nparameters,sizeof(nparameters)));
+	_CHECK_IO(SafeWrite(v,write,up,&noutervalues,sizeof(noutervalues)));
+	_CHECK_IO(SafeWrite(v,write,up,&nlocalvarinfos,sizeof(nlocalvarinfos)));
+	_CHECK_IO(SafeWrite(v,write,up,&nlineinfos,sizeof(nlineinfos)));
+	_CHECK_IO(SafeWrite(v,write,up,&ndefaultparams,sizeof(ndefaultparams)));
+	_CHECK_IO(SafeWrite(v,write,up,&ninstructions,sizeof(ninstructions)));
+	_CHECK_IO(SafeWrite(v,write,up,&nfunctions,sizeof(nfunctions)));
+	_CHECK_IO(WriteTag(v,write,up,SQ_CLOSURESTREAM_PART));
+	for(i=0;i<nliterals;i++){
 		_CHECK_IO(WriteObject(v,up,write,_literals[i]));
 	}
+
 	_CHECK_IO(WriteTag(v,write,up,SQ_CLOSURESTREAM_PART));
-	nsize=_parameters.size();
-	_CHECK_IO(SafeWrite(v,write,up,&nsize,sizeof(nsize)));
-	for(i=0;i<nsize;i++){
+	for(i=0;i<nparameters;i++){
 		_CHECK_IO(WriteObject(v,up,write,_parameters[i]));
 	}
+
 	_CHECK_IO(WriteTag(v,write,up,SQ_CLOSURESTREAM_PART));
-	nsize=_outervalues.size();
-	_CHECK_IO(SafeWrite(v,write,up,&nsize,sizeof(nsize)));
-	for(i=0;i<nsize;i++){
+	for(i=0;i<noutervalues;i++){
 		_CHECK_IO(SafeWrite(v,write,up,&_outervalues[i]._type,sizeof(SQUnsignedInteger)));
 		_CHECK_IO(WriteObject(v,up,write,_outervalues[i]._src));
 		_CHECK_IO(WriteObject(v,up,write,_outervalues[i]._name));
@@ -320,10 +368,9 @@ bool SQFunctionProto::Save(SQVM *v,SQUse
 		_CHECK_IO(WriteObject(v,up,write,_outervalues[i]._src));
 		_CHECK_IO(WriteObject(v,up,write,_outervalues[i]._name));
 	}
+
 	_CHECK_IO(WriteTag(v,write,up,SQ_CLOSURESTREAM_PART));
-	nsize=_localvarinfos.size();
-	_CHECK_IO(SafeWrite(v,write,up,&nsize,sizeof(nsize)));
-	for(i=0;i<nsize;i++){
+	for(i=0;i<nlocalvarinfos;i++){
 		SQLocalVarInfo &lvi=_localvarinfos[i];
 		_CHECK_IO(WriteObject(v,up,write,lvi._name));
 		_CHECK_IO(SafeWrite(v,write,up,&lvi._pos,sizeof(SQUnsignedInteger)));
@@ -330,18 +377,18 @@ bool SQFunctionProto::Save(SQVM *v,SQUse
 		_CHECK_IO(SafeWrite(v,write,up,&lvi._start_op,sizeof(SQUnsignedInteger)));
 		_CHECK_IO(SafeWrite(v,write,up,&lvi._end_op,sizeof(SQUnsignedInteger)));
 	}
+
 	_CHECK_IO(WriteTag(v,write,up,SQ_CLOSURESTREAM_PART));
-	nsize=_lineinfos.size();
-	_CHECK_IO(SafeWrite(v,write,up,&nsize,sizeof(nsize)));
-	_CHECK_IO(SafeWrite(v,write,up,&_lineinfos[0],sizeof(SQLineInfo)*nsize));
+	_CHECK_IO(SafeWrite(v,write,up,_lineinfos,sizeof(SQLineInfo)*nlineinfos));
+
 	_CHECK_IO(WriteTag(v,write,up,SQ_CLOSURESTREAM_PART));
-	nsize=_instructions.size();
-	_CHECK_IO(SafeWrite(v,write,up,&nsize,sizeof(nsize)));
-	_CHECK_IO(SafeWrite(v,write,up,&_instructions[0],sizeof(SQInstruction)*nsize));
+	_CHECK_IO(SafeWrite(v,write,up,_defaultparams,sizeof(SQInteger)*ndefaultparams));
+
 	_CHECK_IO(WriteTag(v,write,up,SQ_CLOSURESTREAM_PART));
-	nsize=_functions.size();
-	_CHECK_IO(SafeWrite(v,write,up,&nsize,sizeof(nsize)));
-	for(i=0;i<nsize;i++){
+	_CHECK_IO(SafeWrite(v,write,up,_instructions,sizeof(SQInstruction)*ninstructions));
+
+	_CHECK_IO(WriteTag(v,write,up,SQ_CLOSURESTREAM_PART));
+	for(i=0;i<nfunctions;i++){
 		_CHECK_IO(_funcproto(_functions[i])->Save(v,up,write));
 	}
 	_CHECK_IO(SafeWrite(v,write,up,&_stacksize,sizeof(_stacksize)));
@@ -350,63 +397,85 @@ bool SQFunctionProto::Save(SQVM *v,SQUse
 	return true;
 }
 
-bool SQFunctionProto::Load(SQVM *v,SQUserPointer up,SQREADFUNC read)
+bool SQFunctionProto::Load(SQVM *v,SQUserPointer up,SQREADFUNC read,SQObjectPtr &ret)
 {
-	SQInteger i, nsize = _literals.size();
+	SQInteger i, nliterals,nparameters;
+	SQInteger noutervalues ,nlocalvarinfos ;
+	SQInteger nlineinfos,ninstructions ,nfunctions,ndefaultparams ;
+	SQObjectPtr sourcename, name;
 	SQObjectPtr o;
 	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_PART));
-	_CHECK_IO(ReadObject(v, up, read, _sourcename));
-	_CHECK_IO(ReadObject(v, up, read, _name));
+	_CHECK_IO(ReadObject(v, up, read, sourcename));
+	_CHECK_IO(ReadObject(v, up, read, name));
+	
 	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_PART));
-	_CHECK_IO(SafeRead(v,read,up, &nsize, sizeof(nsize)));
-	for(i = 0;i < nsize; i++){
+	_CHECK_IO(SafeRead(v,read,up, &nliterals, sizeof(nliterals)));
+	_CHECK_IO(SafeRead(v,read,up, &nparameters, sizeof(nparameters)));
+	_CHECK_IO(SafeRead(v,read,up, &noutervalues, sizeof(noutervalues)));
+	_CHECK_IO(SafeRead(v,read,up, &nlocalvarinfos, sizeof(nlocalvarinfos)));
+	_CHECK_IO(SafeRead(v,read,up, &nlineinfos, sizeof(nlineinfos)));
+	_CHECK_IO(SafeRead(v,read,up, &ndefaultparams, sizeof(ndefaultparams)));
+	_CHECK_IO(SafeRead(v,read,up, &ninstructions, sizeof(ninstructions)));
+	_CHECK_IO(SafeRead(v,read,up, &nfunctions, sizeof(nfunctions)));
+	
+
+	SQFunctionProto *f = SQFunctionProto::Create(ninstructions,nliterals,nparameters,
+			nfunctions,noutervalues,nlineinfos,nlocalvarinfos,ndefaultparams);
+	SQObjectPtr proto = f; //gets a ref in case of failure
+	f->_sourcename = sourcename;
+	f->_name = name;
+
+	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_PART));
+
+	for(i = 0;i < nliterals; i++){
 		_CHECK_IO(ReadObject(v, up, read, o));
-		_literals.push_back(o);
+		f->_literals[i] = o;
 	}
 	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_PART));
-	_CHECK_IO(SafeRead(v,read,up, &nsize, sizeof(nsize)));
-	for(i = 0; i < nsize; i++){
+
+	for(i = 0; i < nparameters; i++){
 		_CHECK_IO(ReadObject(v, up, read, o));
-		_parameters.push_back(o);
+		f->_parameters[i] = o;
 	}
 	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_PART));
-	_CHECK_IO(SafeRead(v,read,up,&nsize,sizeof(nsize)));
-	for(i = 0; i < nsize; i++){
+
+	for(i = 0; i < noutervalues; i++){
 		SQUnsignedInteger type;
 		SQObjectPtr name;
 		_CHECK_IO(SafeRead(v,read,up, &type, sizeof(SQUnsignedInteger)));
 		_CHECK_IO(ReadObject(v, up, read, o));
 		_CHECK_IO(ReadObject(v, up, read, name));
-		_outervalues.push_back(SQOuterVar(name,o, (SQOuterType)type));
+		f->_outervalues[i] = SQOuterVar(name,o, (SQOuterType)type);
 	}
 	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_PART));
-	_CHECK_IO(SafeRead(v,read,up,&nsize, sizeof(nsize)));
-	for(i = 0; i < nsize; i++){
+
+	for(i = 0; i < nlocalvarinfos; i++){
 		SQLocalVarInfo lvi;
 		_CHECK_IO(ReadObject(v, up, read, lvi._name));
 		_CHECK_IO(SafeRead(v,read,up, &lvi._pos, sizeof(SQUnsignedInteger)));
 		_CHECK_IO(SafeRead(v,read,up, &lvi._start_op, sizeof(SQUnsignedInteger)));
 		_CHECK_IO(SafeRead(v,read,up, &lvi._end_op, sizeof(SQUnsignedInteger)));
-		_localvarinfos.push_back(lvi);
+		f->_localvarinfos[i] = lvi;
 	}
 	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_PART));
-	_CHECK_IO(SafeRead(v,read,up, &nsize,sizeof(nsize)));
-	_lineinfos.resize(nsize);
-	_CHECK_IO(SafeRead(v,read,up, &_lineinfos[0], sizeof(SQLineInfo)*nsize));
+	_CHECK_IO(SafeRead(v,read,up, f->_lineinfos, sizeof(SQLineInfo)*nlineinfos));
+
+	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_PART));
+	_CHECK_IO(SafeRead(v,read,up, f->_defaultparams, sizeof(SQInteger)*ndefaultparams));
+
 	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_PART));
-	_CHECK_IO(SafeRead(v,read,up, &nsize, sizeof(nsize)));
-	_instructions.resize(nsize);
-	_CHECK_IO(SafeRead(v,read,up, &_instructions[0], sizeof(SQInstruction)*nsize));
+	_CHECK_IO(SafeRead(v,read,up, f->_instructions, sizeof(SQInstruction)*ninstructions));
+
 	_CHECK_IO(CheckTag(v,read,up,SQ_CLOSURESTREAM_PART));
-	_CHECK_IO(SafeRead(v,read,up, &nsize, sizeof(nsize)));
-	for(i = 0; i < nsize; i++){
-		o = SQFunctionProto::Create();
-		_CHECK_IO(_funcproto(o)->Load(v, up, read));
-		_functions.push_back(o);
-	}
-	_CHECK_IO(SafeRead(v,read,up, &_stacksize, sizeof(_stacksize)));
-	_CHECK_IO(SafeRead(v,read,up, &_bgenerator, sizeof(_bgenerator)));
-	_CHECK_IO(SafeRead(v,read,up, &_varparams, sizeof(_varparams)));
+	for(i = 0; i < nfunctions; i++){
+		_CHECK_IO(_funcproto(o)->Load(v, up, read, o));
+		f->_functions[i] = o;
+	}
+	_CHECK_IO(SafeRead(v,read,up, &f->_stacksize, sizeof(f->_stacksize)));
+	_CHECK_IO(SafeRead(v,read,up, &f->_bgenerator, sizeof(f->_bgenerator)));
+	_CHECK_IO(SafeRead(v,read,up, &f->_varparams, sizeof(f->_varparams)));
+	
+	ret = f;
 	return true;
 }
 
@@ -428,6 +497,7 @@ void SQVM::Mark(SQCollectable **chain)
 		SQSharedState::MarkObject(temp_reg, chain);
 		for(SQUnsignedInteger i = 0; i < _stack.size(); i++) SQSharedState::MarkObject(_stack[i], chain);
 		for(SQUnsignedInteger j = 0; j < _vargsstack.size(); j++) SQSharedState::MarkObject(_vargsstack[j], chain);
+		for(SQInteger k = 0; k < _callsstacksize; k++) SQSharedState::MarkObject(_callsstack[k]._closure, chain);
 	END_MARK()
 }
 
@@ -474,7 +544,8 @@ void SQInstance::Mark(SQCollectable **ch
 {
 	START_MARK()
 		_class->Mark(chain);
-		for(SQUnsignedInteger i =0; i< _nvalues; i++) {
+		SQUnsignedInteger nvalues = _class->_defaultvalues.size();
+		for(SQUnsignedInteger i =0; i< nvalues; i++) {
 			SQSharedState::MarkObject(_values[i], chain);
 		}
 	END_MARK()
@@ -493,6 +564,7 @@ void SQClosure::Mark(SQCollectable **cha
 {
 	START_MARK()
 		for(SQUnsignedInteger i = 0; i < _outervalues.size(); i++) SQSharedState::MarkObject(_outervalues[i], chain);
+		for(SQUnsignedInteger i = 0; i < _defaultparams.size(); i++) SQSharedState::MarkObject(_defaultparams[i], chain);
 	END_MARK()
 }
 
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqobject.h SqPlus/squirrel/sqobject.h
--- ../dnl3/SqPlus/squirrel/sqobject.h	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqobject.h	2010-03-26 09:57:54.000000000 -0400
@@ -258,9 +258,27 @@ struct SQObjectPtr : public SQObject
 	}
 	inline void Null()
 	{
-		__Release(_type,_unVal);
+		SQObjectType tOldType;
+		SQObjectValue unOldVal;
+		tOldType = _type;
+		unOldVal = _unVal;
 		_type=OT_NULL;
 		_unVal.pUserPointer=NULL;
+		__Release(tOldType,unOldVal);
+	}
+	inline SQObjectPtr& operator=(SQInteger i)
+	{ 
+		__Release(_type,_unVal);
+		_unVal.nInteger = i;
+		_type = OT_INTEGER;
+		return *this;
+	}
+	inline SQObjectPtr& operator=(SQFloat f)
+	{ 
+		__Release(_type,_unVal);
+		_unVal.fFloat = f;
+		_type = OT_FLOAT;
+		return *this;
 	}
 	inline SQObjectPtr& operator=(const SQObjectPtr& obj)
 	{ 
@@ -326,6 +344,9 @@ struct SQDelegable : public CHAINABLE_OB
 SQUnsignedInteger TranslateIndex(const SQObjectPtr &idx);
 typedef sqvector<SQObjectPtr> SQObjectPtrVec;
 typedef sqvector<SQInteger> SQIntVec;
+const SQChar *GetTypeName(const SQObjectPtr &obj1);
+const SQChar *IdType2Name(SQObjectType type);
+
 
 
 #endif //_SQOBJECT_H_
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqopcodes.h SqPlus/squirrel/sqopcodes.h
--- ../dnl3/SqPlus/squirrel/sqopcodes.h	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqopcodes.h	2010-03-26 09:57:54.000000000 -0400
@@ -7,7 +7,7 @@
 
 enum BitWiseOP {
 	BW_AND = 0,
-	BW_OR = 2,	//like ADD
+	BW_OR = 2,	
 	BW_XOR = 3,
 	BW_SHIFTL = 4,
 	BW_SHIFTR = 5,
@@ -16,7 +16,7 @@ enum BitWiseOP {
 
 enum CmpOP {
 	CMP_G = 0,
-	CMP_GE = 2,	//like ADD
+	CMP_GE = 2,	
 	CMP_L = 3,
 	CMP_LE = 4
 };
@@ -25,62 +25,64 @@ enum SQOpcode
 	_OP_LINE=				0x00,	
 	_OP_LOAD=				0x01,
 	_OP_LOADINT=			0x02,
-	_OP_DLOAD=				0x03,
-	_OP_TAILCALL=			0x04,	
-	_OP_CALL=				0x05,	
-	_OP_PREPCALL=			0x06,	
-	_OP_PREPCALLK=			0x07,	
-	_OP_GETK=				0x08,	
-	_OP_MOVE=				0x09,	
-	_OP_NEWSLOT=			0x0A,	
-	_OP_DELETE=				0x0B,	
-	_OP_SET=				0x0C,	
-	_OP_GET=				0x0D,
-	_OP_EQ=					0x0E,
-	_OP_NE=					0x0F,
-	_OP_ARITH=				0x10,
-	_OP_BITW=				0x11,
-	_OP_RETURN=				0x12,	
-	_OP_LOADNULLS=			0x13,	
-	_OP_LOADROOTTABLE=		0x14,
-	_OP_LOADBOOL=			0x15,
-	_OP_DMOVE=				0x16,	
-	_OP_JMP=				0x17,	
-	_OP_JNZ=				0x18,	
-	_OP_JZ=					0x19,	
-	_OP_LOADFREEVAR=		0x1A,	
-	_OP_VARGC=				0x1B,	
-	_OP_GETVARGV=			0x1C,	
-	_OP_NEWTABLE=			0x1D,	
-	_OP_NEWARRAY=			0x1E,	
-	_OP_APPENDARRAY=		0x1F,	
-	_OP_GETPARENT=			0x20,	
-	_OP_COMPARITH=			0x21,	
-	_OP_COMPARITHL=			0x22,	
-	_OP_INC=				0x23,	
-	_OP_INCL=				0x24,	
-	_OP_PINC=				0x25,	
-	_OP_PINCL=				0x26,	
-	_OP_CMP=				0x27,
-	_OP_EXISTS=				0x28,	
-	_OP_INSTANCEOF=			0x29,
-	_OP_AND=				0x2A,
-	_OP_OR=					0x2B,
-	_OP_NEG=				0x2C,
-	_OP_NOT=				0x2D,
-	_OP_BWNOT=				0x2E,	
-	_OP_CLOSURE=			0x2F,	
-	_OP_YIELD=				0x30,	
-	_OP_RESUME=				0x31,
-	_OP_FOREACH=			0x32,
-	_OP_DELEGATE=			0x33,
-	_OP_CLONE=				0x34,
-	_OP_TYPEOF=				0x35,
-	_OP_PUSHTRAP=			0x36,
-	_OP_POPTRAP=			0x37,
-	_OP_THROW=				0x38,
-	_OP_CLASS=				0x39,
-	_OP_NEWSLOTA=			0x3A
+	_OP_LOADFLOAT=			0x03,
+	_OP_DLOAD=				0x04,
+	_OP_TAILCALL=			0x05,	
+	_OP_CALL=				0x06,	
+	_OP_PREPCALL=			0x07,	
+	_OP_PREPCALLK=			0x08,	
+	_OP_GETK=				0x09,	
+	_OP_MOVE=				0x0A,	
+	_OP_NEWSLOT=			0x0B,	
+	_OP_DELETE=				0x0C,	
+	_OP_SET=				0x0D,	
+	_OP_GET=				0x0E,
+	_OP_EQ=					0x0F,
+	_OP_NE=					0x10,
+	_OP_ARITH=				0x11,
+	_OP_BITW=				0x12,
+	_OP_RETURN=				0x13,	
+	_OP_LOADNULLS=			0x14,	
+	_OP_LOADROOTTABLE=		0x15,
+	_OP_LOADBOOL=			0x16,
+	_OP_DMOVE=				0x17,	
+	_OP_JMP=				0x18,	
+	_OP_JNZ=				0x19,	
+	_OP_JZ=					0x1A,	
+	_OP_LOADFREEVAR=		0x1B,	
+	_OP_VARGC=				0x1C,	
+	_OP_GETVARGV=			0x1D,	
+	_OP_NEWTABLE=			0x1E,	
+	_OP_NEWARRAY=			0x1F,	
+	_OP_APPENDARRAY=		0x20,	
+	_OP_GETPARENT=			0x21,	
+	_OP_COMPARITH=			0x22,	
+	_OP_COMPARITHL=			0x23,	
+	_OP_INC=				0x24,	
+	_OP_INCL=				0x25,	
+	_OP_PINC=				0x26,	
+	_OP_PINCL=				0x27,	
+	_OP_CMP=				0x28,
+	_OP_EXISTS=				0x29,	
+	_OP_INSTANCEOF=			0x2A,
+	_OP_AND=				0x2B,
+	_OP_OR=					0x2C,
+	_OP_NEG=				0x2D,
+	_OP_NOT=				0x2E,
+	_OP_BWNOT=				0x2F,	
+	_OP_CLOSURE=			0x30,	
+	_OP_YIELD=				0x31,	
+	_OP_RESUME=				0x32,
+	_OP_FOREACH=			0x33,
+	_OP_POSTFOREACH=		0x34,
+	_OP_DELEGATE=			0x35,
+	_OP_CLONE=				0x36,
+	_OP_TYPEOF=				0x37,
+	_OP_PUSHTRAP=			0x38,
+	_OP_POPTRAP=			0x39,
+	_OP_THROW=				0x3A,
+	_OP_CLASS=				0x3B,
+	_OP_NEWSLOTA=			0x3C,
 };							  
 
 struct SQInstructionDesc {	  
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqstate.cpp SqPlus/squirrel/sqstate.cpp
--- ../dnl3/SqPlus/squirrel/sqstate.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqstate.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -145,6 +145,7 @@ void SQSharedState::Init()
 
 	_constructoridx = SQString::Create(this,_SC("constructor"));
 	_registry = SQTable::Create(this,0);
+	_consts = SQTable::Create(this,0);
 	_table_default_delegate=CreateDefaultDelegate(this,_table_default_delegate_funcz);
 	_array_default_delegate=CreateDefaultDelegate(this,_array_default_delegate_funcz);
 	_string_default_delegate=CreateDefaultDelegate(this,_string_default_delegate_funcz);
@@ -161,11 +162,11 @@ void SQSharedState::Init()
 SQSharedState::~SQSharedState()
 {
 	_constructoridx = _null_;
-	_refs_table.Finalize();
 	_table(_registry)->Finalize();
+	_table(_consts)->Finalize();
 	_table(_metamethodsmap)->Finalize();
-//	_refs_table = _null_;
 	_registry = _null_;
+	_consts = _null_;
 	_metamethodsmap = _null_;
 	while(!_systemstrings->empty()){
 		_systemstrings->back()=_null_;
@@ -183,10 +184,8 @@ SQSharedState::~SQSharedState()
 	_class_default_delegate=_null_;
 	_instance_default_delegate=_null_;
 	_weakref_default_delegate=_null_;
-	
+	_refs_table.Finalize();
 #ifndef NO_GARBAGE_COLLECTOR
-	
-	
 	SQCollectable *t=_gc_chain;
 	SQCollectable *nx=NULL;
 	while(t){
@@ -251,6 +251,7 @@ SQInteger SQSharedState::CollectGarbage(
 	SQInteger x = _table(_thread(_root_vm)->_roottable)->CountUsed();
 	_refs_table.Mark(&tchain);
 	MarkObject(_registry,&tchain);
+	MarkObject(_consts,&tchain);
 	MarkObject(_metamethodsmap,&tchain);
 	MarkObject(_table_default_delegate,&tchain);
 	MarkObject(_array_default_delegate,&tchain);
@@ -332,7 +333,7 @@ RefTable::RefTable()
 
 void RefTable::Finalize()
 {
-	RefNode *nodes = (RefNode *)&_buckets[_numofslots];
+	RefNode *nodes = _nodes;
 	for(SQUnsignedInteger n = 0; n < _numofslots; n++) {
 		nodes->obj = _null_;
 		nodes++;
@@ -341,8 +342,9 @@ void RefTable::Finalize()
 
 RefTable::~RefTable()
 {
-	SQ_FREE(_buckets,_buffersize);
+	SQ_FREE(_buckets,(_numofslots * sizeof(RefNode *)) + (_numofslots * sizeof(RefNode)));
 }
+
 #ifndef NO_GARBAGE_COLLECTOR
 void RefTable::Mark(SQCollectable **chain)
 {
@@ -346,7 +348,7 @@ RefTable::~RefTable()
 #ifndef NO_GARBAGE_COLLECTOR
 void RefTable::Mark(SQCollectable **chain)
 {
-	RefNode *nodes = (RefNode *)&_buckets[_numofslots];
+	RefNode *nodes = (RefNode *)_nodes;
 	for(SQUnsignedInteger n = 0; n < _numofslots; n++) {
 		if(type(nodes->obj) != OT_NULL) {
 			SQSharedState::MarkObject(nodes->obj,chain);
@@ -370,7 +373,7 @@ SQBool RefTable::Release(SQObject &obj)
 	RefNode *ref = Get(obj,mainpos,&prev,false);
 	if(ref) {
 		if(--ref->refs == 0) {
-			ref->obj = _null_;
+			SQObjectPtr o = ref->obj;
 			if(prev) {
 				prev->next = ref->next;
 			}
@@ -380,32 +383,38 @@ SQBool RefTable::Release(SQObject &obj)
 			ref->next = _freelist;
 			_freelist = ref;
 			_slotused--;
+			ref->obj = _null_;
 			//<<FIXME>>test for shrink?
 			return SQTrue;
 		}
 	}
+	else {
+		assert(0);
+	}
 	return SQFalse;
 }
 
 void RefTable::Resize(SQUnsignedInteger size)
 {
-	RefNode **oldbuffer = _buckets;
-	RefNode *oldnodes = (RefNode *)&_buckets[_numofslots];
+	RefNode **oldbucks = _buckets;
+	RefNode *t = _nodes;
 	SQUnsignedInteger oldnumofslots = _numofslots;
-	SQUnsignedInteger oldbuffersize = _buffersize;
 	AllocNodes(size);
 	//rehash
+	SQUnsignedInteger nfound = 0;
 	for(SQUnsignedInteger n = 0; n < oldnumofslots; n++) {
-		if(type(oldnodes->obj) != OT_NULL) {
+		if(type(t->obj) != OT_NULL) {
 			//add back;
-			assert(oldnodes->refs != 0);
-			RefNode *nn = Add(::HashObj(oldnodes->obj)&(_numofslots-1),oldnodes->obj);
-			nn->refs = oldnodes->refs; 
-			oldnodes->obj = _null_;
+			assert(t->refs != 0);
+			RefNode *nn = Add(::HashObj(t->obj)&(_numofslots-1),t->obj);
+			nn->refs = t->refs; 
+			t->obj = _null_;
+			nfound++;
 		}
-		oldnodes++;
+		t++;
 	}
-	SQ_FREE(oldbuffer,oldbuffersize);
+	assert(nfound == oldnumofslots);
+	SQ_FREE(oldbucks,(oldnumofslots * sizeof(RefNode *)) + (oldnumofslots * sizeof(RefNode)));
 }
 
 RefTable::RefNode *RefTable::Add(SQHash mainpos,SQObject &obj)
@@ -434,7 +443,9 @@ RefTable::RefNode *RefTable::Get(SQObjec
 	}
 	if(ref == NULL && add) {
 		if(_numofslots == _slotused) {
+			assert(_freelist == 0);
 			Resize(_numofslots*2);
+			mainpos = ::HashObj(obj)&(_numofslots-1);
 		}
 		ref = Add(mainpos,obj);
 	}
@@ -444,11 +455,10 @@ RefTable::RefNode *RefTable::Get(SQObjec
 void RefTable::AllocNodes(SQUnsignedInteger size)
 {
 	RefNode **bucks;
-	RefNode *firstnode;
-	_buffersize = size * sizeof(RefNode *) + size * sizeof(RefNode);
-	bucks = (RefNode **)SQ_MALLOC(_buffersize);
-	firstnode = (RefNode *)&bucks[size];
-	RefNode *temp = firstnode;
+	RefNode *nodes;
+	bucks = (RefNode **)SQ_MALLOC((size * sizeof(RefNode *)) + (size * sizeof(RefNode)));
+	nodes = (RefNode *)&bucks[size];
+	RefNode *temp = nodes;
 	SQUnsignedInteger n;
 	for(n = 0; n < size - 1; n++) {
 		bucks[n] = NULL;
@@ -461,7 +471,8 @@ void RefTable::AllocNodes(SQUnsignedInte
 	temp->refs = 0;
 	new (&temp->obj) SQObjectPtr;
 	temp->next = NULL;
-	_freelist = firstnode;
+	_freelist = nodes;
+	_nodes = nodes;
 	_buckets = bucks;
 	_slotused = 0;
 	_numofslots = size;
@@ -489,7 +500,6 @@ StringTable::~StringTable()
 void StringTable::AllocNodes(SQInteger size)
 {
 	_numofslots=size;
-	//_slotused=0;
 	_strings=(SQString**)SQ_MALLOC(sizeof(SQString*)*_numofslots);
 	memset(_strings,0,sizeof(SQString*)*_numofslots);
 }
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqstate.h SqPlus/squirrel/sqstate.h
--- ../dnl3/SqPlus/squirrel/sqstate.h	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqstate.h	2010-03-26 09:57:54.000000000 -0400
@@ -44,7 +44,7 @@ private:
 	void AllocNodes(SQUnsignedInteger size);
 	SQUnsignedInteger _numofslots;
 	SQUnsignedInteger _slotused;
-	SQUnsignedInteger _buffersize;
+	RefNode *_nodes;
 	RefNode *_freelist;
 	RefNode **_buckets;
 };
@@ -73,6 +73,7 @@ public:
 	StringTable *_stringtable;
 	RefTable _refs_table;
 	SQObjectPtr _registry;
+	SQObjectPtr _consts;
 	SQObjectPtr _constructoridx;
 #ifndef NO_GARBAGE_COLLECTOR
 	SQCollectable *_gc_chain;
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqtable.cpp SqPlus/squirrel/sqtable.cpp
--- ../dnl3/SqPlus/squirrel/sqtable.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqtable.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -177,8 +177,20 @@ bool SQTable::Set(const SQObjectPtr &key
 	return false;
 }
 
-void SQTable::Finalize()
+void SQTable::_ClearNodes()
 {
 	for(SQInteger i = 0;i < _numofnodes; i++) { _nodes[i].key = _null_; _nodes[i].val = _null_; }
+}
+
+void SQTable::Finalize()
+{
+	_ClearNodes();
 		SetDelegate(NULL);
 }
+
+void SQTable::Clear()
+{
+	_ClearNodes();
+	_usednodes = 0;
+	Rehash(true);
+}
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqtable.h SqPlus/squirrel/sqtable.h
--- ../dnl3/SqPlus/squirrel/sqtable.h	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqtable.h	2010-03-26 09:57:54.000000000 -0400
@@ -41,6 +41,7 @@ private:
 	void AllocNodes(SQInteger nSize);
 	void Rehash(bool force);
 	SQTable(SQSharedState *ss, SQInteger nInitialSize);
+	void _ClearNodes();
 public:
 	static SQTable* Create(SQSharedState *ss,SQInteger nInitialSize)
 	{
@@ -79,6 +80,7 @@ public:
 	SQInteger Next(bool getweakrefs,const SQObjectPtr &refpos, SQObjectPtr &outkey, SQObjectPtr &outval);
 	
 	SQInteger CountUsed(){ return _usednodes;}
+	void Clear();
 	void Release()
 	{
 		sq_delete(this, SQTable);
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/squirrel71.vcproj SqPlus/squirrel/squirrel71.vcproj
--- ../dnl3/SqPlus/squirrel/squirrel71.vcproj	2006-05-29 15:10:46.000000000 -0400
+++ SqPlus/squirrel/squirrel71.vcproj	1969-12-31 19:00:00.000000000 -0500
@@ -1,750 +0,0 @@
-<?xml version="1.0" encoding="Windows-1252"?>
-<VisualStudioProject
-	ProjectType="Visual C++"
-	Version="7.10"
-	Name="squirrel"
-	ProjectGUID="{D2EB28F5-6B67-4823-8051-B564EF852CED}"
-	RootNamespace="squirrel"
-	SccProjectName=""
-	SccLocalPath="..">
-	<Platforms>
-		<Platform
-			Name="Win32"/>
-	</Platforms>
-	<Configurations>
-		<Configuration
-			Name="Debug|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="2">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;GARBAGE_COLLECTOR"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Debug/squirrel.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				DebugInformationFormat="4"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\squirrelD.lib"
-				SuppressStartupBanner="TRUE"/>
-			<Tool
-				Name="VCMIDLTool"/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-		<Configuration
-			Name="Release|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="2">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;NDEBUG;_LIB;GARBAGE_COLLECTOR"
-				StringPooling="TRUE"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="TRUE"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/squirrel.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\squirrel.lib"
-				SuppressStartupBanner="TRUE"/>
-			<Tool
-				Name="VCMIDLTool"/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-		<Configuration
-			Name="Debug - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="1">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;GARBAGE_COLLECTOR"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\DebugU/squirrel.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				DebugInformationFormat="4"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\squirrelDU.lib"
-				SuppressStartupBanner="TRUE"/>
-			<Tool
-				Name="VCMIDLTool"/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-		<Configuration
-			Name="Release - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="FALSE"
-			CharacterSet="1">
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;NDEBUG;_LIB;GARBAGE_COLLECTOR"
-				StringPooling="TRUE"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="TRUE"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/squirrel.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="TRUE"
-				CompileAs="0"/>
-			<Tool
-				Name="VCCustomBuildTool"/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\squirrelU.lib"
-				SuppressStartupBanner="TRUE"/>
-			<Tool
-				Name="VCMIDLTool"/>
-			<Tool
-				Name="VCPostBuildEventTool"/>
-			<Tool
-				Name="VCPreBuildEventTool"/>
-			<Tool
-				Name="VCPreLinkEventTool"/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"/>
-			<Tool
-				Name="VCManagedWrapperGeneratorTool"/>
-			<Tool
-				Name="VCAuxiliaryManagedWrapperGeneratorTool"/>
-		</Configuration>
-	</Configurations>
-	<References>
-	</References>
-	<Files>
-		<Filter
-			Name="Source Files"
-			Filter="cpp;c;cxx;rc;def;r;odl;idl;hpj;bat">
-			<File
-				RelativePath="sqapi.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqbaselib.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqclass.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqcompiler.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqdebug.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqfuncstate.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqlexer.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqmem.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqobject.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstate.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqtable.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqvm.cpp">
-				<FileConfiguration
-					Name="Debug|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32">
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""/>
-				</FileConfiguration>
-			</File>
-		</Filter>
-		<Filter
-			Name="Header Files"
-			Filter="h;hpp;hxx;hm;inl">
-			<File
-				RelativePath="sqarray.h">
-			</File>
-			<File
-				RelativePath="sqclass.h">
-			</File>
-			<File
-				RelativePath="sqclosure.h">
-			</File>
-			<File
-				RelativePath="sqcompiler.h">
-			</File>
-			<File
-				RelativePath="sqfuncproto.h">
-			</File>
-			<File
-				RelativePath="sqfuncstate.h">
-			</File>
-			<File
-				RelativePath="sqlexer.h">
-			</File>
-			<File
-				RelativePath="sqobject.h">
-			</File>
-			<File
-				RelativePath="sqopcodes.h">
-			</File>
-			<File
-				RelativePath="sqpcheader.h">
-			</File>
-			<File
-				RelativePath="sqstate.h">
-			</File>
-			<File
-				RelativePath="sqstring.h">
-			</File>
-			<File
-				RelativePath="sqtable.h">
-			</File>
-			<File
-				RelativePath="squserdata.h">
-			</File>
-			<File
-				RelativePath="squtils.h">
-			</File>
-			<File
-				RelativePath="sqvm.h">
-			</File>
-		</Filter>
-	</Files>
-	<Globals>
-	</Globals>
-</VisualStudioProject>
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/squirrel.cbp SqPlus/squirrel/squirrel.cbp
--- ../dnl3/SqPlus/squirrel/squirrel.cbp	2006-04-25 17:05:30.000000000 -0400
+++ SqPlus/squirrel/squirrel.cbp	1969-12-31 19:00:00.000000000 -0500
@@ -1,324 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE CodeBlocks_project_file>
-<CodeBlocks_project_file>
-	<FileVersion major="1" minor="1"/>
-	<Project>
-		<Option title="squirrel"/>
-		<Option makefile="Makefile"/>
-		<Option makefile_is_custom="0"/>
-		<Option default_target="-1"/>
-		<Option compiler="0"/>
-		<Build>
-			<Target title="Debug">
-				<Option output="..\lib\libsquirrelD.a"/>
-				<Option working_dir=""/>
-				<Option object_output="Debug"/>
-				<Option deps_output=".deps"/>
-				<Option type="2"/>
-				<Option compiler="0"/>
-				<Option createDefFile="1"/>
-				<Option projectResourceIncludeDirsRelation="2"/>
-				<Compiler>
-					<Add option="-DWIN32"/>
-					<Add option="-D_DEBUG"/>
-					<Add option="-D_LIB"/>
-					<Add option="-DGARBAGE_COLLECTOR"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add option="-W"/>
-					<Add option="-O0"/>
-					<Add directory="..\include"/>
-				</Compiler>
-			</Target>
-			<Target title="Release">
-				<Option output="..\lib\libsquirrel.a"/>
-				<Option working_dir=""/>
-				<Option object_output="Release"/>
-				<Option deps_output=".deps"/>
-				<Option type="2"/>
-				<Option compiler="0"/>
-				<Option createDefFile="1"/>
-				<Option projectResourceIncludeDirsRelation="2"/>
-				<Compiler>
-					<Add option="-DWIN32"/>
-					<Add option="-DNDEBUG"/>
-					<Add option="-D_LIB"/>
-					<Add option="-DGARBAGE_COLLECTOR"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add option="-W"/>
-					<Add option="-O2"/>
-					<Add directory="..\include"/>
-				</Compiler>
-			</Target>
-			<Target title="Debug - Unicode">
-				<Option output="..\lib\libsquirrelDU.a"/>
-				<Option working_dir=""/>
-				<Option object_output="Debug - Unicode"/>
-				<Option deps_output=".deps"/>
-				<Option type="2"/>
-				<Option compiler="0"/>
-				<Option createDefFile="1"/>
-				<Option projectResourceIncludeDirsRelation="2"/>
-				<Compiler>
-					<Add option="-DWIN32"/>
-					<Add option="-D_DEBUG"/>
-					<Add option="-D_LIB"/>
-					<Add option="-DGARBAGE_COLLECTOR"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add option="-D_CRT_NON_CONFORMING_SWPRINTFS"/>
-					<Add option="-W"/>
-					<Add option="-O0"/>
-					<Add directory="..\include"/>
-				</Compiler>
-			</Target>
-			<Target title="Release - Unicode">
-				<Option output="..\lib\libsquirrelU.a"/>
-				<Option working_dir=""/>
-				<Option object_output="Release - Unicode"/>
-				<Option deps_output=".deps"/>
-				<Option type="2"/>
-				<Option compiler="0"/>
-				<Option createDefFile="1"/>
-				<Option projectResourceIncludeDirsRelation="2"/>
-				<Compiler>
-					<Add option="-DWIN32"/>
-					<Add option="-DNDEBUG"/>
-					<Add option="-D_LIB"/>
-					<Add option="-DGARBAGE_COLLECTOR"/>
-					<Add option="-D_CRT_SECURE_NO_DEPRECATE"/>
-					<Add option="-D_CRT_NON_CONFORMING_SWPRINTFS"/>
-					<Add option="-W"/>
-					<Add option="-O2"/>
-					<Add directory="..\include"/>
-				</Compiler>
-			</Target>
-		</Build>
-		<Unit filename="sqapi.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqarray.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqbaselib.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqclass.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqclass.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqclosure.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqcompiler.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqcompiler.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqdebug.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqfuncproto.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqfuncstate.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqfuncstate.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqlexer.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqlexer.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqmem.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqobject.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqobject.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqopcodes.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqpcheader.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstate.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstate.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqstring.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqtable.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqtable.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="squserdata.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="squtils.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqvm.cpp">
-			<Option compilerVar="CPP"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-		<Unit filename="sqvm.h">
-			<Option compilerVar=""/>
-			<Option compile="0"/>
-			<Option link="0"/>
-			<Option target="Debug"/>
-			<Option target="Release"/>
-			<Option target="Debug - Unicode"/>
-			<Option target="Release - Unicode"/>
-		</Unit>
-	</Project>
-</CodeBlocks_project_file>
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/squirrel.dsp SqPlus/squirrel/squirrel.dsp
--- ../dnl3/SqPlus/squirrel/squirrel.dsp	1969-12-31 19:00:00.000000000 -0500
+++ SqPlus/squirrel/squirrel.dsp	2010-03-26 09:57:54.000000000 -0400
@@ -0,0 +1,302 @@
+# Microsoft Developer Studio Project File - Name="squirrel" - Package Owner=<4>
+# Microsoft Developer Studio Generated Build File, Format Version 6.00
+# ** DO NOT EDIT **
+
+# TARGTYPE "Win32 (x86) Static Library" 0x0104
+
+CFG=squirrel - Win32 Debug
+!MESSAGE This is not a valid makefile. To build this project using NMAKE,
+!MESSAGE use the Export Makefile command and run
+!MESSAGE 
+!MESSAGE NMAKE /f "squirrel.mak".
+!MESSAGE 
+!MESSAGE You can specify a configuration when running NMAKE
+!MESSAGE by defining the macro CFG on the command line. For example:
+!MESSAGE 
+!MESSAGE NMAKE /f "squirrel.mak" CFG="squirrel - Win32 Debug"
+!MESSAGE 
+!MESSAGE Possible choices for configuration are:
+!MESSAGE 
+!MESSAGE "squirrel - Win32 Release" (based on "Win32 (x86) Static Library")
+!MESSAGE "squirrel - Win32 Debug" (based on "Win32 (x86) Static Library")
+!MESSAGE 
+
+# Begin Project
+# PROP AllowPerConfigDependencies 0
+# PROP Scc_LocalPath ".."
+CPP=cl.exe
+RSC=rc.exe
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+# PROP BASE Use_MFC 0
+# PROP BASE Use_Debug_Libraries 0
+# PROP BASE Output_Dir "Release"
+# PROP BASE Intermediate_Dir "Release"
+# PROP BASE Target_Dir ""
+# PROP Use_MFC 0
+# PROP Use_Debug_Libraries 0
+# PROP Output_Dir "Release"
+# PROP Intermediate_Dir "Release"
+# PROP Target_Dir ""
+# ADD BASE CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /YX /FD /c
+# ADD CPP /nologo /W3 /GX /O2 /I "..\include" /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "_LIB" /D "GARBAGE_COLLECTOR" /YX /FD /c
+# ADD BASE RSC /l 0x410 /d "NDEBUG"
+# ADD RSC /l 0x410 /d "NDEBUG"
+BSC32=bscmake.exe
+# ADD BASE BSC32 /nologo
+# ADD BSC32 /nologo
+LIB32=link.exe -lib
+# ADD BASE LIB32 /nologo
+# ADD LIB32 /nologo /out:"..\lib\squirrel.lib"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# PROP BASE Use_MFC 0
+# PROP BASE Use_Debug_Libraries 1
+# PROP BASE Output_Dir "Debug"
+# PROP BASE Intermediate_Dir "Debug"
+# PROP BASE Target_Dir ""
+# PROP Use_MFC 0
+# PROP Use_Debug_Libraries 1
+# PROP Output_Dir "Debug"
+# PROP Intermediate_Dir "Debug"
+# PROP Target_Dir ""
+# ADD BASE CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /YX /FD /GZ /c
+# ADD CPP /nologo /W3 /Gm /GX /ZI /Od /I "..\include" /D "WIN32" /D "_DEBUG" /D "_MBCS" /D "_LIB" /D "GARBAGE_COLLECTOR" /YX /FD /GZ /c
+# ADD BASE RSC /l 0x410 /d "_DEBUG"
+# ADD RSC /l 0x410 /d "_DEBUG"
+BSC32=bscmake.exe
+# ADD BASE BSC32 /nologo
+# ADD BSC32 /nologo
+LIB32=link.exe -lib
+# ADD BASE LIB32 /nologo
+# ADD LIB32 /nologo /out:"..\lib\squirrel.lib"
+
+!ENDIF 
+
+# Begin Target
+
+# Name "squirrel - Win32 Release"
+# Name "squirrel - Win32 Debug"
+# Begin Group "Source Files"
+
+# PROP Default_Filter "cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"
+# Begin Source File
+
+SOURCE=.\sqapi.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqbaselib.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqcompiler.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqdebug.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqfuncstate.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqlexer.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqmem.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqobject.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstate.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqtable.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqclass.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqvm.cpp
+
+!IF  "$(CFG)" == "squirrel - Win32 Release"
+
+!ELSEIF  "$(CFG)" == "squirrel - Win32 Debug"
+
+# ADD CPP /YX"stdafx.h"
+
+!ENDIF 
+
+# End Source File
+# End Group
+# Begin Group "Header Files"
+
+# PROP Default_Filter "h;hpp;hxx;hm;inl"
+# Begin Source File
+
+SOURCE=.\sqarray.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqclosure.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqcompiler.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqfuncproto.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqfuncstate.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqlexer.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqobject.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqopcodes.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqpcheader.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstate.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqstring.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqtable.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\squserdata.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\squtils.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqclass.h
+# End Source File
+# Begin Source File
+
+SOURCE=.\sqvm.h
+# End Source File
+# End Group
+# End Target
+# End Project
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/squirrellib.cbp SqPlus/squirrel/squirrellib.cbp
--- ../dnl3/SqPlus/squirrel/squirrellib.cbp	2006-04-25 17:05:30.000000000 -0400
+++ SqPlus/squirrel/squirrellib.cbp	1969-12-31 19:00:00.000000000 -0500
@@ -1,20 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE CodeBlocks_project_file>
-<CodeBlocks_project_file>
-	<FileVersion major="1" minor="1"/>
-	<Project>
-		<Option title="Static library"/>
-		<Option makefile="Makefile"/>
-		<Build>
-			<Target title="default">
-				<Option type="2"/>
-				<Option parameters=""/>
-				<Option includeInTargetAll="1"/>
-				<Option projectCompilerOptionsRelation="3"/>
-				<Option projectLinkerOptionsRelation="3"/>
-				<Option projectIncludeDirsRelation="3"/>
-				<Option projectLibDirsRelation="3"/>
-			</Target>
-		</Build>
-	</Project>
-</CodeBlocks_project_file>
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/squirrel.vcproj SqPlus/squirrel/squirrel.vcproj
--- ../dnl3/SqPlus/squirrel/squirrel.vcproj	2006-03-26 18:21:16.000000000 -0500
+++ SqPlus/squirrel/squirrel.vcproj	1969-12-31 19:00:00.000000000 -0500
@@ -1,971 +0,0 @@
-<?xml version="1.0" encoding="Windows-1252"?>
-<VisualStudioProject
-	ProjectType="Visual C++"
-	Version="8.00"
-	Name="squirrel"
-	ProjectGUID="{A79653F2-73F4-4F57-AE86-4AEBDE795232}"
-	RootNamespace="squirrel"
-	SccLocalPath=".."
-	>
-	<Platforms>
-		<Platform
-			Name="Win32"
-		/>
-	</Platforms>
-	<ToolFiles>
-	</ToolFiles>
-	<Configurations>
-		<Configuration
-			Name="Debug|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;GARBAGE_COLLECTOR;_CRT_SECURE_NO_DEPRECATE"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Debug/squirrel.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				DebugInformationFormat="4"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\squirrelD.lib"
-				SuppressStartupBanner="true"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Release|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;NDEBUG;_LIB;GARBAGE_COLLECTOR;_CRT_SECURE_NO_DEPRECATE"
-				StringPooling="true"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="true"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/squirrel.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\squirrel.lib"
-				SuppressStartupBanner="true"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Debug - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="1"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;_DEBUG;_LIB;GARBAGE_COLLECTOR;_CRT_SECURE_NO_DEPRECATE;_CRT_NON_CONFORMING_SWPRINTFS"
-				BasicRuntimeChecks="3"
-				RuntimeLibrary="1"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\DebugU/squirrel.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				DebugInformationFormat="4"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="_DEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\squirrelDU.lib"
-				SuppressStartupBanner="true"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Release - Unicode|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="4"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			UseOfMFC="0"
-			ATLMinimizesCRunTimeLibraryUsage="false"
-			CharacterSet="1"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="1"
-				AdditionalIncludeDirectories="..\include"
-				PreprocessorDefinitions="WIN32;NDEBUG;_LIB;GARBAGE_COLLECTOR;_CRT_SECURE_NO_DEPRECATE;_CRT_NON_CONFORMING_SWPRINTFS"
-				StringPooling="true"
-				RuntimeLibrary="0"
-				EnableFunctionLevelLinking="true"
-				UsePrecompiledHeader="0"
-				PrecompiledHeaderFile=".\Release/squirrel.pch"
-				AssemblerListingLocation="$(IntDir)/"
-				ObjectFile="$(IntDir)/"
-				ProgramDataBaseFileName="$(IntDir)/"
-				WarningLevel="3"
-				SuppressStartupBanner="true"
-				CompileAs="0"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-				PreprocessorDefinitions="NDEBUG"
-				Culture="1040"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLibrarianTool"
-				OutputFile="..\lib\squirrelU.lib"
-				SuppressStartupBanner="true"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-	</Configurations>
-	<References>
-	</References>
-	<Files>
-		<Filter
-			Name="Source Files"
-			Filter="cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"
-			>
-			<File
-				RelativePath="sqapi.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqbaselib.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqclass.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqcompiler.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqdebug.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqfuncstate.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqlexer.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqmem.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqobject.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqstate.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqtable.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-			<File
-				RelativePath="sqvm.cpp"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="0"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-						BasicRuntimeChecks="3"
-						PrecompiledHeaderThrough="stdafx.h"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release - Unicode|Win32"
-					>
-					<Tool
-						Name="VCCLCompilerTool"
-						Optimization="2"
-						AdditionalIncludeDirectories=""
-						PreprocessorDefinitions=""
-					/>
-				</FileConfiguration>
-			</File>
-		</Filter>
-		<Filter
-			Name="Header Files"
-			Filter="h;hpp;hxx;hm;inl"
-			>
-			<File
-				RelativePath="sqarray.h"
-				>
-			</File>
-			<File
-				RelativePath="sqclass.h"
-				>
-			</File>
-			<File
-				RelativePath="sqclosure.h"
-				>
-			</File>
-			<File
-				RelativePath="sqcompiler.h"
-				>
-			</File>
-			<File
-				RelativePath="sqfuncproto.h"
-				>
-			</File>
-			<File
-				RelativePath="sqfuncstate.h"
-				>
-			</File>
-			<File
-				RelativePath="sqlexer.h"
-				>
-			</File>
-			<File
-				RelativePath="sqobject.h"
-				>
-			</File>
-			<File
-				RelativePath="sqopcodes.h"
-				>
-			</File>
-			<File
-				RelativePath="sqpcheader.h"
-				>
-			</File>
-			<File
-				RelativePath="sqstate.h"
-				>
-			</File>
-			<File
-				RelativePath="sqstring.h"
-				>
-			</File>
-			<File
-				RelativePath="sqtable.h"
-				>
-			</File>
-			<File
-				RelativePath="squserdata.h"
-				>
-			</File>
-			<File
-				RelativePath="squtils.h"
-				>
-			</File>
-			<File
-				RelativePath="sqvm.h"
-				>
-			</File>
-		</Filter>
-	</Files>
-	<Globals>
-	</Globals>
-</VisualStudioProject>
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/squtils.h SqPlus/squirrel/squtils.h
--- ../dnl3/SqPlus/squirrel/squtils.h	2005-09-25 17:56:20.000000000 -0400
+++ SqPlus/squirrel/squtils.h	2010-03-26 09:57:54.000000000 -0400
@@ -4,9 +4,9 @@
 
 #define sq_new(__ptr,__type) {__ptr=(__type *)sq_vm_malloc(sizeof(__type));new (__ptr) __type;}
 #define sq_delete(__ptr,__type) {__ptr->~__type();sq_vm_free(__ptr,sizeof(__type));}
-#define SQ_MALLOC(__size) sq_vm_malloc(__size);
-#define SQ_FREE(__ptr,__size) sq_vm_free(__ptr,__size);
-#define SQ_REALLOC(__ptr,__oldsize,__size) sq_vm_realloc(__ptr,__oldsize,__size);
+#define SQ_MALLOC(__size) sq_vm_malloc((__size));
+#define SQ_FREE(__ptr,__size) sq_vm_free((__ptr),(__size));
+#define SQ_REALLOC(__ptr,__oldsize,__size) sq_vm_realloc((__ptr),(__oldsize),(__size));
 
 //sqvector mini vector class, supports objects by value
 template<typename T> class sqvector
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqvm.cpp SqPlus/squirrel/sqvm.cpp
--- ../dnl3/SqPlus/squirrel/sqvm.cpp	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqvm.cpp	2010-03-26 09:57:54.000000000 -0400
@@ -14,7 +14,7 @@
 #include "sqarray.h"
 #include "sqclass.h"
 
-#define TOP() (_stack[_top-1])
+#define TOP() (_stack._vals[_top-1])
 
 bool SQVM::BW_OP(SQUnsignedInteger op,SQObjectPtr &trg,const SQObjectPtr &o1,const SQObjectPtr &o2)
 {
@@ -41,23 +41,29 @@ bool SQVM::ARITH_OP(SQUnsignedInteger op
 {
 	if(sq_isnumeric(o1) && sq_isnumeric(o2)) {
 			if((type(o1)==OT_INTEGER) && (type(o2)==OT_INTEGER)) {
+				SQInteger res, i1 = _integer(o1), i2 = _integer(o2);
 				switch(op) {
-				case '+': trg = _integer(o1) + _integer(o2); break;
-				case '-': trg = _integer(o1) - _integer(o2); break;
-				case '/': if(_integer(o2) == 0) { Raise_Error(_SC("division by zero")); return false; }
-					trg = _integer(o1) / _integer(o2); 
-					break;
-				case '*': trg = _integer(o1) * _integer(o2); break;
-				case '%': trg = _integer(o1) % _integer(o2); break;
+				case '+': res = i1 + i2; break;
+				case '-': res = i1 - i2; break;
+				case '/': if(i2 == 0) { Raise_Error(_SC("division by zero")); return false; }
+					res = i1 / i2; 
+					break;
+				case '*': res = i1 * i2; break;
+				case '%': res = i1 % i2; break;
+				default: res = 0xDEADBEEF;
 				}
+				trg = res;
 			}else{
+				SQFloat res, f1 = tofloat(o1), f2 = tofloat(o2);
 				switch(op) {
-				case '+': trg = tofloat(o1) + tofloat(o2); break;
-				case '-': trg = tofloat(o1) - tofloat(o2); break;
-				case '/': trg = tofloat(o1) / tofloat(o2); break;
-				case '*': trg = tofloat(o1) * tofloat(o2); break;
-				case '%': trg = SQFloat(fmod((double)tofloat(o1),(double)tofloat(o2))); break;
+				case '+': res = f1 + f2; break;
+				case '-': res = f1 - f2; break;
+				case '/': res = f1 / f2; break;
+				case '*': res = f1 * f2; break;
+				case '%': res = SQFloat(fmod((double)f1,(double)f2)); break;
+				default: res = 0x0f;
 				}
+				trg = res;
 			}	
 		} else {
 			if(op == '+' &&	(type(o1) == OT_STRING || type(o2) == OT_STRING)){
@@ -93,6 +99,7 @@ void SQVM::Finalize()
 	_errorhandler = _null_;
 	_debughook = _null_;
 	temp_reg = _null_;
+	_callstackdata.resize(0);
 	SQInteger size=_stack.size();
 	for(SQInteger i=0;i<size;i++)
 		_stack[i]=_null_;
@@ -101,6 +108,7 @@ void SQVM::Finalize()
 SQVM::~SQVM()
 {
 	Finalize();
+	//sq_free(_callsstack,_alloccallsstacksize*sizeof(CallInfo));
 	REMOVE_FROM_CHAIN(&_ss(this)->_gc_chain,this);
 }
 
@@ -164,10 +172,13 @@ bool SQVM::ObjCmp(const SQObjectPtr &o1,
 		case OT_TABLE:
 		case OT_USERDATA:
 		case OT_INSTANCE:
+			if(_delegable(o1)->_delegate) {
 			Push(o1);Push(o2);
-			if(_delegable(o1)->_delegate)CallMetaMethod(_delegable(o1),MT_CMP,2,res);
-			break;
-		default: break; //shutup compiler
+				if(CallMetaMethod(_delegable(o1),MT_CMP,2,res)) break;
+			}
+			//continues through (no break needed)
+		default: 
+			_RET_SUCCEED( _userpointer(o1) < _userpointer(o2)?-1:1 );
 		}
 		if(type(res)!=OT_INTEGER) { Raise_CompareError(o1,o2); return false; }
 			_RET_SUCCEED(_integer(res));
@@ -218,13 +229,25 @@ void SQVM::ToString(const SQObjectPtr &o
 		res = o;
 		return;
 	case OT_FLOAT:
+#if !defined( SQUNICODE ) || defined( _MSC_VER ) || defined( _WIN32_WCE )
 		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)),_SC("%g"),_float(o));
+#else
+		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)),NUMBER_MAX_CHAR,_SC("%g"),_float(o));
+#endif
 		break;
 	case OT_INTEGER:
+#if !defined( SQUNICODE ) || defined( _MSC_VER ) || defined( _WIN32_WCE )
 		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)),_SC("%d"),_integer(o));
+#else
+		scsprintf(_sp(rsl(NUMBER_MAX_CHAR+1)),NUMBER_MAX_CHAR,_SC("%d"),_integer(o));
+#endif
 		break;
 	case OT_BOOL:
+#if !defined( SQUNICODE ) || defined( _MSC_VER ) || defined( _WIN32_WCE )
 		scsprintf(_sp(rsl(6)),_integer(o)?_SC("true"):_SC("false"));
+#else
+		scsprintf(_sp(rsl(6)),NUMBER_MAX_CHAR,_integer(o)?_SC("true"):_SC("false"));
+#endif
 		break;
 	case OT_TABLE:
 	case OT_USERDATA:
@@ -238,7 +261,11 @@ void SQVM::ToString(const SQObjectPtr &o
 			}
 		}
 	default:
+#if !defined( SQUNICODE ) || defined( _MSC_VER ) || defined( _WIN32_WCE )
 		scsprintf(_sp(rsl(sizeof(void*)+20)),_SC("(%s : 0x%p)"),GetTypeName(o),(void*)_rawval(o));
+#else
+		scsprintf(_sp(rsl(sizeof(void*)+20)),NUMBER_MAX_CHAR,_SC("(%s : 0x%p)"),GetTypeName(o),(void*)_rawval(o));
+#endif
 	}
 	res = SQString::Create(_ss(this),_spval);
 }
@@ -257,39 +284,6 @@ bool SQVM::StringCat(const SQObjectPtr &
 	return true;
 }
 
-const SQChar *IdType2Name(SQObjectType type)
-{
-	switch(_RAW_TYPE(type))
-	{
-	case _RT_NULL:return _SC("null");
-	case _RT_INTEGER:return _SC("integer");
-	case _RT_FLOAT:return _SC("float");
-	case _RT_BOOL:return _SC("bool");
-	case _RT_STRING:return _SC("string");
-	case _RT_TABLE:return _SC("table");
-	case _RT_ARRAY:return _SC("array");
-	case _RT_GENERATOR:return _SC("generator");
-	case _RT_CLOSURE:
-	case _RT_NATIVECLOSURE:
-		return _SC("function");
-	case _RT_USERDATA:
-	case _RT_USERPOINTER:
-		return _SC("userdata");
-	case _RT_THREAD: return _SC("thread");
-	case _RT_FUNCPROTO: return _SC("function");
-	case _RT_CLASS: return _SC("class");
-	case _RT_INSTANCE: return _SC("instance");
-	case _RT_WEAKREF: return _SC("weakref");
-	default:
-		return NULL;
-	}
-}
-
-const SQChar *GetTypeName(const SQObjectPtr &obj1)
-{
-	return IdType2Name(type(obj1));	
-}
-
 void SQVM::TypeOf(const SQObjectPtr &obj1,SQObjectPtr &dest)
 {
 	if(is_delegable(obj1) && _delegable(obj1)->_delegate) {
@@ -303,7 +297,12 @@ void SQVM::TypeOf(const SQObjectPtr &obj
 bool SQVM::Init(SQVM *friendvm, SQInteger stacksize)
 {
 	_stack.resize(stacksize);
-	_callsstack.reserve(4);
+	//_callsstack.reserve(4);
+	_alloccallsstacksize = 4;
+	_callstackdata.resize(_alloccallsstacksize);
+	_callsstacksize = 0;
+	_callsstack = &_callstackdata[0];
+	//_callsstack = (CallInfo*)sq_malloc(_alloccallsstacksize*sizeof(CallInfo));
 	_stackbase = 0;
 	_top = 0;
 	if(!friendvm) 
@@ -320,24 +319,30 @@ bool SQVM::Init(SQVM *friendvm, SQIntege
 
 extern SQInstructionDesc g_InstrDesc[];
 
-bool SQVM::StartCall(SQClosure *closure,SQInteger target,SQInteger nargs,SQInteger stackbase,bool tailcall)
+bool SQVM::StartCall(SQClosure *closure,SQInteger target,SQInteger args,SQInteger stackbase,bool tailcall)
 {
 	SQFunctionProto *func = _funcproto(closure->_function);
 	
-	const SQInteger paramssize = func->_parameters.size();
+	const SQInteger paramssize = func->_nparameters;
 	const SQInteger newtop = stackbase + func->_stacksize;
-	
-	
+	SQInteger nargs = args;
 	if (paramssize != nargs) {
-		if(func->_varparams)
+		SQInteger ndef = func->_ndefaultparams;
+		if(ndef && nargs < paramssize) {
+			SQInteger diff = paramssize - nargs;
+			for(SQInteger n = ndef - diff; n < ndef; n++) {
+				_stack._vals[stackbase + (nargs++)] = closure->_defaultparams[n];
+			}
+		}
+		else if(func->_varparams)
 		{
 			if (nargs < paramssize) {
 				Raise_Error(_SC("wrong number of parameters"));
 				return false;
 			}
 			for(SQInteger n = 0; n < nargs - paramssize; n++) {
-				_vargsstack.push_back(_stack[stackbase+paramssize+n]);
-				_stack[stackbase+paramssize+n] = _null_;
+				_vargsstack.push_back(_stack._vals[stackbase+paramssize+n]);
+				_stack._vals[stackbase+paramssize+n] = _null_;
 			}
 		}
 		else {
@@ -347,29 +352,28 @@ bool SQVM::StartCall(SQClosure *closure,
 	}
 
 	if(type(closure->_env) == OT_WEAKREF) {
-		_stack[stackbase] = _weakref(closure->_env)->_obj;
+		_stack._vals[stackbase] = _weakref(closure->_env)->_obj;
 	}
 
 	if (!tailcall) {
 		CallInfo lc;
+		lc._generator = NULL;
 		lc._etraps = 0;
-		lc._prevstkbase = stackbase - _stackbase;
-		lc._target = target;
-		lc._prevtop = _top - _stackbase;
+		lc._prevstkbase = (SQInt32) ( stackbase - _stackbase );
+		lc._target = (SQInt32) target;
+		lc._prevtop = (SQInt32) (_top - _stackbase);
 		lc._ncalls = 1;
 		lc._root = SQFalse;
 		PUSH_CALLINFO(this, lc);
 	}
 	else {
 		ci->_ncalls++;
-		if(ci->_vargs.size) PopVarArgs(ci->_vargs);
 	}
-	ci->_vargs.size = (nargs - paramssize);
-	ci->_vargs.base = _vargsstack.size()-(ci->_vargs.size);
-	ci->_closure._unVal.pClosure = closure;
-	ci->_closure._type = OT_CLOSURE;
-	ci->_iv = &func->_instructions;
-	ci->_literals = &func->_literals;
+	ci->_vargs.size = (SQInt32)(nargs - paramssize);
+	ci->_vargs.base = (SQInt32)(_vargsstack.size()-(ci->_vargs.size));
+	ci->_closure = closure;
+	ci->_literals = func->_literals;
+	ci->_ip = func->_instructions;
 	//grows the stack if needed
 	if (((SQUnsignedInteger)newtop + (func->_stacksize<<1)) > _stack.size()) {
 		_stack.resize(_stack.size() + (func->_stacksize<<1));
@@ -377,7 +381,8 @@ bool SQVM::StartCall(SQClosure *closure,
 		
 	_top = newtop;
 	_stackbase = stackbase;
-	ci->_ip = ci->_iv->_vals;
+	if (type(_debughook) != OT_NULL && _rawval(_debughook) != _rawval(ci->_closure))
+		CallDebugHook(_SC('c'));
 	return true;
 }
 
@@ -396,19 +401,19 @@ bool SQVM::Return(SQInteger _arg0, SQInt
 	if(ci->_vargs.size) PopVarArgs(ci->_vargs);
 	POP_CALLINFO(this);
 	if (broot) {
-		if (_arg0 != MAX_FUNC_STACKSIZE) retval = _stack[oldstackbase+_arg1];
+		if (_arg0 != MAX_FUNC_STACKSIZE) retval = _stack._vals[oldstackbase+_arg1];
 		else retval = _null_;
 	}
 	else {
 		if(target != -1) { //-1 is when a class contructor ret value has to be ignored
 			if (_arg0 != MAX_FUNC_STACKSIZE)
-				STK(target) = _stack[oldstackbase+_arg1];
+				STK(target) = _stack._vals[oldstackbase+_arg1];
 			else
 				STK(target) = _null_;
 		}
 	}
 
-	while (last_top >= _top) _stack[last_top--].Null();
+	while (last_top >= _top) _stack._vals[last_top--].Null();
 	assert(oldstackbase >= _stackbase); 
 	return broot?true:false;
 }
@@ -463,24 +468,24 @@ void SQVM::PopVarArgs(VarArgs &vargs)
 		_vargsstack.pop_back();
 }
 
-#define _FINISH(stoploop) {finished = stoploop; return true; }
+#define _FINISH(howmuchtojump) {jump = howmuchtojump; return true; }
 bool SQVM::FOREACH_OP(SQObjectPtr &o1,SQObjectPtr &o2,SQObjectPtr 
-&o3,SQObjectPtr &o4,SQInteger arg_2,bool &finished)
+&o3,SQObjectPtr &o4,SQInteger arg_2,int exitpos,int &jump)
 {
 	SQInteger nrefidx;
 	switch(type(o1)) {
 	case OT_TABLE:
-		if((nrefidx = _table(o1)->Next(false,o4, o2, o3)) == -1) _FINISH(true);
-		o4 = (SQInteger)nrefidx; _FINISH(false);
+		if((nrefidx = _table(o1)->Next(false,o4, o2, o3)) == -1) _FINISH(exitpos);
+		o4 = (SQInteger)nrefidx; _FINISH(1);
 	case OT_ARRAY:
-		if((nrefidx = _array(o1)->Next(o4, o2, o3)) == -1) _FINISH(true);
-		o4 = (SQInteger) nrefidx; _FINISH(false);
+		if((nrefidx = _array(o1)->Next(o4, o2, o3)) == -1) _FINISH(exitpos);
+		o4 = (SQInteger) nrefidx; _FINISH(1);
 	case OT_STRING:
-		if((nrefidx = _string(o1)->Next(o4, o2, o3)) == -1)_FINISH(true);
-		o4 = (SQInteger)nrefidx; _FINISH(false);
+		if((nrefidx = _string(o1)->Next(o4, o2, o3)) == -1)_FINISH(exitpos);
+		o4 = (SQInteger)nrefidx; _FINISH(1);
 	case OT_CLASS:
-		if((nrefidx = _class(o1)->Next(o4, o2, o3)) == -1)_FINISH(true);
-		o4 = (SQInteger)nrefidx; _FINISH(false);
+		if((nrefidx = _class(o1)->Next(o4, o2, o3)) == -1)_FINISH(exitpos);
+		o4 = (SQInteger)nrefidx; _FINISH(1);
 	case OT_USERDATA:
 	case OT_INSTANCE:
 		if(_delegable(o1)->_delegate) {
@@ -489,19 +494,19 @@ bool SQVM::FOREACH_OP(SQObjectPtr &o1,SQ
 			Push(o4);
 			if(CallMetaMethod(_delegable(o1), MT_NEXTI, 2, itr)){
 				o4 = o2 = itr;
-				if(type(itr) == OT_NULL) _FINISH(true);
+				if(type(itr) == OT_NULL) _FINISH(exitpos);
 				if(!Get(o1, itr, o3, false,false)) {
 					Raise_Error(_SC("_nexti returned an invalid idx"));
 					return false;
 				}
-				_FINISH(false);
+				_FINISH(1);
 			}
 			Raise_Error(_SC("_nexti failed"));
 			return false;
 		}
 		break;
 	case OT_GENERATOR:
-		if(_generator(o1)->_state == SQGenerator::eDead) _FINISH(true);
+		if(_generator(o1)->_state == SQGenerator::eDead) _FINISH(exitpos);
 		if(_generator(o1)->_state == SQGenerator::eSuspended) {
 			SQInteger idx = 0;
 			if(type(o4) == OT_INTEGER) {
@@ -510,7 +515,7 @@ bool SQVM::FOREACH_OP(SQObjectPtr &o1,SQ
 			o2 = idx;
 			o4 = idx;
 			_generator(o1)->Resume(this, arg_2+1);
-			_FINISH(false);
+			_FINISH(0);
 		}
 	default: 
 		Raise_Error(_SC("cannot iterate %s"), GetTypeName(o1));
@@ -539,7 +544,7 @@ bool SQVM::DELEGATE_OP(SQObjectPtr &trg,
 	trg = o1;
 	return true;
 }
-#define COND_LITERAL (arg3!=0?(*ci->_literals)[arg1]:STK(arg1))
+#define COND_LITERAL (arg3!=0?ci->_literals[arg1]:STK(arg1))
 
 #define _GUARD(exp) { if(!exp) { Raise_Error(_lasterror); SQ_THROW();} }
 
@@ -549,7 +554,7 @@ bool SQVM::CLOSURE_OP(SQObjectPtr &targe
 {
 	SQInteger nouters;
 	SQClosure *closure = SQClosure::Create(_ss(this), func);
-	if((nouters = func->_outervalues.size())) {
+	if((nouters = func->_noutervalues)) {
 		closure->_outervalues.reserve(nouters);
 		for(SQInteger i = 0; i<nouters; i++) {
 			SQOuterVar &v = func->_outervalues[i];
@@ -568,6 +573,14 @@ bool SQVM::CLOSURE_OP(SQObjectPtr &targe
 			}
 		}
 	}
+	SQInteger ndefparams;
+	if((ndefparams = func->_ndefaultparams)) {
+		closure->_defaultparams.reserve(ndefparams);
+		for(SQInteger i = 0; i < ndefparams; i++) {
+			SQInteger spos = func->_defaultparams[i];
+			closure->_defaultparams.push_back(_stack._vals[_stackbase + spos]);
+		}
+	}
 	target = closure;
 	return true;
 
@@ -663,6 +676,7 @@ bool SQVM::Execute(SQObjectPtr &closure,
 	SQInteger traps = 0;
 	//temp_reg vars for OP_CALL
 	SQInteger ct_target;
+	SQInteger ct_stackbase;
 	bool ct_tailcall; 
 
 	switch(et) {
@@ -678,6 +692,7 @@ bool SQVM::Execute(SQObjectPtr &closure,
 		case ET_RESUME_VM:
 			traps = _suspended_traps;
 			ci->_root = _suspended_root;
+			ci->_vargs = _suspend_varargs;
 			_suspended = SQFalse;
 			break;
 	}
@@ -696,9 +711,10 @@ exception_restore:
 				if(type(_debughook) != OT_NULL && _rawval(_debughook) != _rawval(ci->_closure))
 					CallDebugHook(_SC('l'),arg1);
 				continue;
-			case _OP_LOAD: TARGET = (*ci->_literals)[arg1]; continue;
+			case _OP_LOAD: TARGET = ci->_literals[arg1]; continue;
 			case _OP_LOADINT: TARGET = (SQInteger)arg1; continue;
-			case _OP_DLOAD: TARGET = (*ci->_literals)[arg1]; STK(arg2) = (*ci->_literals)[arg3];continue;
+			case _OP_LOADFLOAT: TARGET = *((SQFloat *)&arg1); continue;
+			case _OP_DLOAD: TARGET = ci->_literals[arg1]; STK(arg2) = ci->_literals[arg3];continue;
 			case _OP_TAILCALL:
 				temp_reg = STK(arg1);
 				if (type(temp_reg) == OT_CLOSURE){ 
@@ -706,53 +722,56 @@ exception_restore:
 					if(ci->_vargs.size) PopVarArgs(ci->_vargs);
 					for (SQInteger i = 0; i < arg3; i++) STK(i) = STK(arg2 + i);
 					ct_target = ci->_target;
+					ct_stackbase = _stackbase;
 					goto common_call;
 				}
 			case _OP_CALL: {
 					ct_tailcall = false;
 					ct_target = arg0;
 					temp_reg = STK(arg1);
+					ct_stackbase = _stackbase+arg2;
+
 common_call:
+					SQObjectPtr clo = temp_reg;
 					SQInteger last_top = _top;
-					switch (type(temp_reg)) {
+					switch (type(clo)) {
 					case OT_CLOSURE:{
-						_GUARD(StartCall(_closure(temp_reg), ct_target, arg3, ct_tailcall?_stackbase:_stackbase+arg2, ct_tailcall));
-						if (_funcproto(_closure(temp_reg)->_function)->_bgenerator) {
-							SQGenerator *gen = SQGenerator::Create(_ss(this), _closure(temp_reg));
+						_GUARD(StartCall(_closure(clo), ct_target, arg3, ct_stackbase, ct_tailcall));
+						if (_funcproto(_closure(clo)->_function)->_bgenerator) {
+							SQGenerator *gen = SQGenerator::Create(_ss(this), _closure(clo));
 							_GUARD(gen->Yield(this));
-							Return(1, ct_target, temp_reg);
+							Return(1, ct_target, clo);
 							STK(ct_target) = gen;
-							while (last_top >= _top) _stack[last_top--].Null();
+							while (last_top >= _top) _stack._vals[last_top--].Null();
 							continue;
 						}
-						if (type(_debughook) != OT_NULL && _rawval(_debughook) != _rawval(ci->_closure))
-							CallDebugHook(_SC('c'));
 						}
-						break;
+						continue;
 					case OT_NATIVECLOSURE: {
 						bool suspend;
-						_GUARD(CallNative(_nativeclosure(temp_reg), arg3, _stackbase+arg2, ct_tailcall, temp_reg,suspend));
+						_GUARD(CallNative(_nativeclosure(clo), arg3, ct_stackbase, clo,suspend));
 						if(suspend){
 							_suspended = SQTrue;
 							_suspended_target = ct_target;
 							_suspended_root = ci->_root;
 							_suspended_traps = traps;
-							outres = temp_reg;
+							_suspend_varargs = ci->_vargs;
+							outres = clo;
 							return true;
 						}
-						if(ct_target != -1) { //skip return value for contructors
-							STK(ct_target) = temp_reg;
+						if(ct_target != -1) { //skip return value for constructors
+							STK(ct_target) = clo;
 						}
 										   }
-						break;
+						continue;
 					case OT_CLASS:{
 						SQObjectPtr inst;
-						_GUARD(CreateClassInstance(_class(temp_reg),inst,temp_reg));
+						_GUARD(CreateClassInstance(_class(clo),inst,temp_reg));
 						STK(ct_target) = inst;
-						ct_target = -1; //fakes return value target so that is not overwritten by the contructor
+						ct_target = -1; //fakes return value target so that is not overwritten by the constructor
 						if(type(temp_reg) != OT_NULL) {
-							_stack[_stackbase+arg2] = inst;
-							goto common_call; //hard core spaghetti code(reissues the OP_CALL to invoke the contructor)
+							_stack._vals[ct_stackbase] = inst;
+							goto common_call; //hard core spaghetti code(reissues the OP_CALL to invoke the constructor)
 						}
 						}
 						break;
@@ -760,47 +779,43 @@ common_call:
 					case OT_USERDATA:
 					case OT_INSTANCE:
 						{
-						Push(temp_reg);
+						Push(clo);
 						for (SQInteger i = 0; i < arg3; i++) Push(STK(arg2 + i));
-						if (_delegable(temp_reg) && CallMetaMethod(_delegable(temp_reg), MT_CALL, arg3+1, temp_reg)){
-							STK(ct_target) = temp_reg;
+						if (_delegable(clo) && CallMetaMethod(_delegable(clo), MT_CALL, arg3+1, clo)){
+							STK(ct_target) = clo;
 							break;
 						}
-						Raise_Error(_SC("attempt to call '%s'"), GetTypeName(temp_reg));
+						Raise_Error(_SC("attempt to call '%s'"), GetTypeName(clo));
 						SQ_THROW();
 					  }
 					default:
-						Raise_Error(_SC("attempt to call '%s'"), GetTypeName(temp_reg));
+						Raise_Error(_SC("attempt to call '%s'"), GetTypeName(clo));
 						SQ_THROW();
 					}
 				}
 				  continue;
 			case _OP_PREPCALL:
-					if (!Get(STK(arg2), STK(arg1), temp_reg, false,true))
-					{ Raise_IdxError(STK(arg1)); SQ_THROW(); }
-					goto common_prepcall;
 			case _OP_PREPCALLK:
-					if (!Get(STK(arg2), (*ci->_literals)[arg1], temp_reg,false,true)) {
-						if(type(STK(arg2)) == OT_CLASS) { //hack?
-							if(_class_ddel->Get((*ci->_literals)[arg1],temp_reg)) {
-								STK(arg3) = STK(arg2);
+				{
+					SQObjectPtr &key = _i_.op == _OP_PREPCALLK?(ci->_literals)[arg1]:STK(arg1);
+					SQObjectPtr &o = STK(arg2);
+					if (!Get(o, key, temp_reg,false,true)) {
+						if(type(o) == OT_CLASS) { //hack?
+							if(_class_ddel->Get(key,temp_reg)) {
+								STK(arg3) = o;
 								TARGET = temp_reg;
 								continue;
 							}
 						}
-						{ Raise_IdxError((*ci->_literals)[arg1]); SQ_THROW();}
-					}
-common_prepcall:
-					if(type(STK(arg2)) == OT_CLASS) {
-						STK(arg3) = STK(0); // this
-					}
-					else {
-						STK(arg3) = STK(arg2);
+						{ Raise_IdxError(key); SQ_THROW();}
 					}
+
+					STK(arg3) = type(o) == OT_CLASS?STK(0):o;
 					TARGET = temp_reg;
+				}
 				continue;
 			case _OP_GETK:
-				if (!Get(STK(arg2), (*ci->_literals)[arg1], temp_reg, false,true)) { Raise_IdxError((*ci->_literals)[arg1]); SQ_THROW();}
+				if (!Get(STK(arg2), ci->_literals[arg1], temp_reg, false,true)) { Raise_IdxError(ci->_literals[arg1]); SQ_THROW();}
 				TARGET = temp_reg;
 				continue;
 			case _OP_MOVE: TARGET = STK(arg1); continue;
@@ -830,8 +845,8 @@ common_prepcall:
 			case _OP_ARITH: _GUARD(ARITH_OP( arg3 , temp_reg, STK(arg2), STK(arg1))); TARGET = temp_reg; continue;
 			case _OP_BITW:	_GUARD(BW_OP( arg3,TARGET,STK(arg2),STK(arg1))); continue;
 			case _OP_RETURN:
-				if(type((ci)->_generator) == OT_GENERATOR) {
-					_generator((ci)->_generator)->Kill();
+				if(ci->_generator) {
+					ci->_generator->Kill();
 				}
 				if(Return(arg0, arg1, temp_reg)){
 					assert(traps==0);
@@ -897,9 +912,9 @@ common_prepcall:
 				continue;
 			}
 			case _OP_YIELD:{
-				if(type(ci->_generator) == OT_GENERATOR) {
+				if(ci->_generator) {
 					if(sarg1 != MAX_FUNC_STACKSIZE) temp_reg = STK(arg1);
-					_GUARD(_generator(ci->_generator)->Yield(this));
+					_GUARD(ci->_generator->Yield(this));
 					traps -= ci->_etraps;
 					if(sarg1 != MAX_FUNC_STACKSIZE) STK(arg1) = temp_reg;
 				}
@@ -917,9 +932,14 @@ common_prepcall:
 				_GUARD(_generator(STK(arg1))->Resume(this, arg0));
 				traps += ci->_etraps;
                 continue;
-			case _OP_FOREACH:{ bool finished;
-				_GUARD(FOREACH_OP(STK(arg0),STK(arg2),STK(arg2+1),STK(arg2+2),arg2,finished));
-				if(finished) ci->_ip += sarg1; }
+			case _OP_FOREACH:{ int tojump;
+				_GUARD(FOREACH_OP(STK(arg0),STK(arg2),STK(arg2+1),STK(arg2+2),arg2,sarg1,tojump));
+				ci->_ip += tojump; }
+				continue;
+			case _OP_POSTFOREACH:
+				assert(type(STK(arg0)) == OT_GENERATOR);
+				if(_generator(STK(arg0))->_state == SQGenerator::eDead) 
+					ci->_ip += (sarg1 - 1);
 				continue;
 			case _OP_DELEGATE: _GUARD(DELEGATE_OP(TARGET,STK(arg1),STK(arg2))); continue;
 			case _OP_CLONE:
@@ -927,15 +947,18 @@ common_prepcall:
 				{ Raise_Error(_SC("cloning a %s"), GetTypeName(STK(arg1))); SQ_THROW();}
 				continue;
 			case _OP_TYPEOF: TypeOf(STK(arg1), TARGET); continue;
-			case _OP_PUSHTRAP:
-				_etraps.push_back(SQExceptionTrap(_top,_stackbase, &ci->_iv->_vals[(ci->_ip-ci->_iv->_vals)+arg1], arg0)); traps++;
+			case _OP_PUSHTRAP:{
+				SQInstruction *_iv = _funcproto(_closure(ci->_closure)->_function)->_instructions;
+				_etraps.push_back(SQExceptionTrap(_top,_stackbase, &_iv[(ci->_ip-_iv)+arg1], arg0)); traps++;
 				ci->_etraps++;
+							  }
 				continue;
-			case _OP_POPTRAP:
+			case _OP_POPTRAP: {
 				for(SQInteger i = 0; i < arg0; i++) {
 					_etraps.pop_back(); traps--;
 					ci->_etraps--;
 				}
+							  }
 				continue;
 			case _OP_THROW:	Raise_Error(TARGET); SQ_THROW(); continue;
 			case _OP_CLASS: _GUARD(CLASS_OP(TARGET,arg1,arg2)); continue;
@@ -977,19 +1000,19 @@ exception_trap:
 						ci->_ip = et._ip;
 						_top = et._stacksize;
 						_stackbase = et._stackbase;
-						_stack[_stackbase+et._extarget] = currerror;
+						_stack._vals[_stackbase+et._extarget] = currerror;
 						_etraps.pop_back(); traps--; ci->_etraps--;
-						while(last_top >= _top) _stack[last_top--].Null();
+						while(last_top >= _top) _stack._vals[last_top--].Null();
 						goto exception_restore;
 					}
 					//if is a native closure
 					if(type(ci->_closure) != OT_CLOSURE && n)
 						break;
-					if(type(ci->_generator) == OT_GENERATOR) _generator(ci->_generator)->Kill();
+					if(ci->_generator) ci->_generator->Kill();
 					PopVarArgs(ci->_vargs);
 					POP_CALLINFO(this);
 					n++;
-				} while(_callsstack.size());
+				} while(_callsstacksize);
 			}
 			else {
 				//call the hook
@@ -999,15 +1022,15 @@ exception_trap:
 			//remove call stack until a C function is found or the cstack is empty
 			if(ci) do {
 				SQBool exitafterthisone = ci->_root;
-				if(type(ci->_generator) == OT_GENERATOR) _generator(ci->_generator)->Kill();
+				if(ci->_generator) ci->_generator->Kill();
 				_stackbase -= ci->_prevstkbase;
 				_top = _stackbase + ci->_prevtop;
 				PopVarArgs(ci->_vargs);
 				POP_CALLINFO(this);
 				if( (ci && type(ci->_closure) != OT_CLOSURE) || exitafterthisone) break;
-			} while(_callsstack.size());
+			} while(_callsstacksize);
 
-			while(last_top >= _top) _stack[last_top--].Null();
+			while(last_top >= _top) _stack._vals[last_top--].Null();
 		}
 		_lasterror = currerror;
 		return false;
@@ -1046,7 +1069,7 @@ void SQVM::CallDebugHook(SQInteger type,
 	Pop(nparams);
 }
 
-bool SQVM::CallNative(SQNativeClosure *nclosure,SQInteger nargs,SQInteger stackbase,bool tailcall,SQObjectPtr &retval,bool &suspend)
+bool SQVM::CallNative(SQNativeClosure *nclosure,SQInteger nargs,SQInteger stackbase,SQObjectPtr &retval,bool &suspend)
 {
 	if (_nnativecalls + 1 > MAX_NATIVE_CALLS) { Raise_Error(_SC("Native stack overflow")); return false; }
 	SQInteger nparamscheck = nclosure->_nparamscheck;
@@ -1059,8 +1082,8 @@ bool SQVM::CallNative(SQNativeClosure *n
 	SQInteger tcs;
 	if((tcs = nclosure->_typecheck.size())) {
 		for(SQInteger i = 0; i < nargs && i < tcs; i++)
-			if((nclosure->_typecheck[i] != -1) && !(type(_stack[stackbase+i]) & nclosure->_typecheck[i])) {
-                Raise_ParamTypeError(i,nclosure->_typecheck[i],type(_stack[stackbase+i]));
+			if((nclosure->_typecheck._vals[i] != -1) && !(type(_stack._vals[stackbase+i]) & nclosure->_typecheck[i])) {
+                Raise_ParamTypeError(i,nclosure->_typecheck._vals[i],type(_stack._vals[stackbase+i]));
 				return false;
 			}
 	}
@@ -1071,12 +1094,14 @@ bool SQVM::CallNative(SQNativeClosure *n
 	SQInteger oldtop = _top;
 	SQInteger oldstackbase = _stackbase;
 	_top = stackbase + nargs;
-	PUSH_CALLINFO(this, CallInfo());
-	ci->_etraps = 0;
-	ci->_closure._unVal.pNativeClosure = nclosure;
-	ci->_closure._type = OT_NATIVECLOSURE;
-	ci->_prevstkbase = stackbase - _stackbase;
-	ci->_ncalls = 1;
+	CallInfo lci;
+	lci._closure = nclosure;
+	lci._generator = NULL;
+	lci._etraps = 0;
+	lci._prevstkbase = (SQInt32) (stackbase - _stackbase);
+	lci._ncalls = 1;
+	lci._prevtop = (SQInt32) (oldtop - oldstackbase);
+	PUSH_CALLINFO(this, lci);
 	_stackbase = stackbase;
 	//push free variables
 	SQInteger outers = nclosure->_outervalues.size();
@@ -1088,7 +1113,7 @@ bool SQVM::CallNative(SQNativeClosure *n
 		_stack[stackbase] = _weakref(nclosure->_env)->_obj;
 	}
 
-	ci->_prevtop = (oldtop - oldstackbase);
+	
 	SQInteger ret = (nclosure->_function)(this);
 	_nnativecalls--;
 	suspend = false;
@@ -1101,7 +1126,7 @@ bool SQVM::CallNative(SQNativeClosure *n
 		return false;
 	}
 	
-	if (ret != 0){ retval = TOP(); }
+	if (ret != 0){ retval = TOP(); TOP().Null(); }
 	else { retval = _null_; }
 	_stackbase = oldstackbase;
 	_top = oldtop;
@@ -1288,6 +1313,14 @@ bool SQVM::NewSlot(const SQObjectPtr &se
 		if(rawcall) _table(self)->NewSlot(key,val); //cannot fail
 		
 		break;}
+	case OT_INSTANCE: {
+		SQObjectPtr res;
+		Push(self);Push(key);Push(val);
+		if(!CallMetaMethod(_instance(self),MT_NEWSLOT,3,res)) {
+			Raise_Error(_SC("class instances do not support the new slot operator"));
+			return false;
+		}
+		break;}
 	case OT_CLASS: 
 		if(!_class(self)->NewSlot(_ss(this),key,val,bstatic)) {
 			if(_class(self)->_locked) {
@@ -1358,7 +1391,7 @@ SQInteger prevstackbase = _stackbase;
 		break;
 	case OT_NATIVECLOSURE:{
 		bool suspend;
-		return CallNative(_nativeclosure(closure), nparams, stackbase, false, outres,suspend);
+		return CallNative(_nativeclosure(closure), nparams, stackbase, outres,suspend);
 		
 						  }
 		break;
@@ -1428,7 +1461,7 @@ void SQVM::dumpstack(SQInteger stackbase
 	SQInteger size=dumpall?_stack.size():_top;
 	SQInteger n=0;
 	scprintf(_SC("\n>>>>stack dump<<<<\n"));
-	CallInfo &ci=_callsstack.back();
+	CallInfo &ci=_callsstack[_callsstacksize-1];
 	scprintf(_SC("IP: %p\n"),ci._ip);
 	scprintf(_SC("prev stack base: %d\n"),ci._prevstkbase);
 	scprintf(_SC("prev top: %d\n"),ci._prevtop);
@@ -1447,7 +1480,7 @@ void SQVM::dumpstack(SQInteger stackbase
 		case OT_CLOSURE:		scprintf(_SC("CLOSURE [%p]"),_closure(obj));break;
 		case OT_NATIVECLOSURE:	scprintf(_SC("NATIVECLOSURE"));break;
 		case OT_USERDATA:		scprintf(_SC("USERDATA %p[%p]"),_userdataval(obj),_userdata(obj)->_delegate);break;
-		case OT_GENERATOR:		scprintf(_SC("GENERATOR"));break;
+		case OT_GENERATOR:		scprintf(_SC("GENERATOR %p"),_generator(obj));break;
 		case OT_THREAD:			scprintf(_SC("THREAD [%p]"),_thread(obj));break;
 		case OT_USERPOINTER:	scprintf(_SC("USERPOINTER %p"),_userpointer(obj));break;
 		case OT_CLASS:			scprintf(_SC("CLASS %p"),_class(obj));break;
diff -rupwbBEN --strip-trailing-cr ../dnl3/SqPlus/squirrel/sqvm.h SqPlus/squirrel/sqvm.h
--- ../dnl3/SqPlus/squirrel/sqvm.h	2006-03-19 14:32:58.000000000 -0500
+++ SqPlus/squirrel/sqvm.h	2010-03-26 09:57:54.000000000 -0400
@@ -32,23 +32,21 @@ struct SQVM : public CHAINABLE_OBJ
 {
 	struct VarArgs {
 		VarArgs() { size = 0; base = 0; }
-		SQInteger size;
-		SQInteger base;
+		unsigned short size;
+		unsigned short base;
 	};
 
 	struct CallInfo{
-		CallInfo() { _generator._type = OT_NULL;}
-		//CallInfo(const CallInfo& ci) {  }
-		SQInstructionVec *_iv;
-		SQObjectPtrVec *_literals;
-		SQObject _closure;
-		SQObject _generator;
-		SQInteger _etraps;
-		SQInteger _prevstkbase;
-		SQInteger _prevtop;
-		SQInteger _target;
+		//CallInfo() { _generator._type = OT_NULL;}
 		SQInstruction *_ip;
-		SQInteger _ncalls;
+		SQObjectPtr *_literals;
+		SQObjectPtr _closure;
+		SQGenerator *_generator;
+		SQInt32 _etraps;
+		SQInt32 _prevstkbase;
+		SQInt32 _prevtop;
+		SQInt32 _target;
+		SQInt32 _ncalls;
 		SQBool _root;
 		VarArgs _vargs;
 	};
@@ -61,7 +59,7 @@ public:
 	bool Init(SQVM *friendvm, SQInteger stacksize);
 	bool Execute(SQObjectPtr &func, SQInteger target, SQInteger nargs, SQInteger stackbase, SQObjectPtr &outres, SQBool raiseerror, ExecutionType et = ET_CALL);
 	//starts a native call return when the NATIVE closure returns
-	bool CallNative(SQNativeClosure *nclosure, SQInteger nargs, SQInteger stackbase, bool tailcall, SQObjectPtr &retval,bool &suspend);
+	bool CallNative(SQNativeClosure *nclosure, SQInteger nargs, SQInteger stackbase, SQObjectPtr &retval,bool &suspend);
 	//starts a SQUIRREL call in the same "Execution loop"
 	bool StartCall(SQClosure *closure, SQInteger target, SQInteger nargs, SQInteger stackbase, bool tailcall);
 	bool CreateClassInstance(SQClass *theclass, SQObjectPtr &inst, SQObjectPtr &constructor);
@@ -104,7 +102,7 @@ public:
 	bool CLASS_OP(SQObjectPtr &target,SQInteger base,SQInteger attrs);
 	bool GETPARENT_OP(SQObjectPtr &o,SQObjectPtr &target);
 	//return true if the loop is finished
-	bool FOREACH_OP(SQObjectPtr &o1,SQObjectPtr &o2,SQObjectPtr &o3,SQObjectPtr &o4,SQInteger arg_2,bool &finished);
+	bool FOREACH_OP(SQObjectPtr &o1,SQObjectPtr &o2,SQObjectPtr &o3,SQObjectPtr &o4,SQInteger arg_2,int exitpos,int &jump);
 	bool DELEGATE_OP(SQObjectPtr &trg,SQObjectPtr &o1,SQObjectPtr &o2);
 	_INLINE bool LOCAL_INC(SQInteger op,SQObjectPtr &target, SQObjectPtr &a, SQObjectPtr &incr);
 	_INLINE bool PLOCAL_INC(SQInteger op,SQObjectPtr &target, SQObjectPtr &a, SQObjectPtr &incr);
@@ -118,7 +116,12 @@ public:
 	void Mark(SQCollectable **chain);
 #endif
 	void Finalize();
-
+	void GrowCallStack() {
+		SQInteger newsize = _alloccallsstacksize*2;
+		_callstackdata.resize(newsize);
+		_callsstack = &_callstackdata[0];
+		_alloccallsstacksize = newsize;
+	}
 	void Release(){ sq_delete(this,SQVM); } //does nothing
 ////////////////////////////////////////////////////////////////////////////
 	//stack functions for the api
@@ -144,7 +147,13 @@ public:
 	SQObjectPtr _debughook;
 
 	SQObjectPtr temp_reg;
-	CallInfoVec _callsstack;
+	
+
+	CallInfo* _callsstack;
+	SQInteger _callsstacksize;
+	SQInteger _alloccallsstacksize;
+	sqvector<CallInfo>  _callstackdata;
+
 	ExceptionsTraps _etraps;
 	CallInfo *ci;
 	void *_foreignptr;
@@ -156,6 +165,7 @@ public:
 	SQBool _suspended_root;
 	SQInteger _suspended_target;
 	SQInteger _suspended_traps;
+	VarArgs _suspend_varargs;
 };
 
 struct AutoDec{
@@ -165,8 +175,6 @@ struct AutoDec{
 };
 
 inline SQObjectPtr &stack_get(HSQUIRRELVM v,SQInteger idx){return ((idx>=0)?(v->GetAt(idx+v->_stackbase-1)):(v->GetUp(idx)));}
-const SQChar *GetTypeName(const SQObjectPtr &obj1);
-const SQChar *IdType2Name(SQObjectType type);
 
 #define _ss(_vm_) (_vm_)->_sharedstate
 
@@ -177,13 +185,19 @@ const SQChar *IdType2Name(SQObjectType t
 #endif
 
 #define PUSH_CALLINFO(v,nci){ \
-	v->ci = &v->_callsstack.push_back(nci); \
+	if(v->_callsstacksize == v->_alloccallsstacksize) { \
+		v->GrowCallStack(); \
+	} \
+	v->ci = &v->_callsstack[v->_callsstacksize]; \
+	*(v->ci) = nci; \
+	v->_callsstacksize++; \
 }
 
 #define POP_CALLINFO(v){ \
-	v->_callsstack.pop_back(); \
-	if(v->_callsstack.size())	\
-		v->ci = &v->_callsstack.back() ; \
+	v->_callsstacksize--; \
+	v->ci->_closure.Null(); \
+	if(v->_callsstacksize)	\
+		v->ci = &v->_callsstack[v->_callsstacksize-1] ; \
 	else	\
 		v->ci = NULL; \
 }
