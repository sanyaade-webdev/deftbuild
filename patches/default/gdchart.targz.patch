diff -rupwN ../dnl3/gdchart/gd1.3\gd.c ../lib3/gdchart/gd1.3/gd.c
--- gd1.3/gd.c	Fri Mar 13 17:29:28 1998
+++ gd1.3/gd.c	Mon Mar 22 13:45:11 2010
@@ -481,7 +481,7 @@ void gdImageString(gdImagePtr im, gdFont
 {
 	int i;
 	int l;
-	l = strlen(s);
+	l = strlen((const char*)s);
 	for (i=0; (i<l); i++) {
 		gdImageChar(im, f, x, y, s[i], color);
 		x += f->w;
@@ -493,7 +493,7 @@ void gdImageStringUp(gdImagePtr im, gdFo
 {
 	int i;
 	int l;
-	l = strlen(s);
+	l = strlen((const char*)s);
 	for (i=0; (i<l); i++) {
 		gdImageCharUp(im, f, x, y, s[i], color);
 		y -= f->w;
@@ -971,7 +971,8 @@ GIFEncode(FILE *fp, int GWidth, int GHei
         /*
          * Write the Magic header
          */
-        fwrite( Transparent < 0 ? "GIF87a" : "GIF89a", 1, 6, fp );
+        if ( fwrite( Transparent < 0 ? "GIF87a" : "GIF89a", 1, 6, fp ) )
+        	{}
 
         /*
          * Write out the screen width and height
@@ -1205,7 +1206,8 @@ static void write_block(void)
     printf("\n");
   }
  fputc(oblen,ofile);
- fwrite(&oblock[0],1,oblen,ofile);
+ if ( fwrite(&oblock[0],1,oblen,ofile) )
+ 	{}
  oblen = 0;
 }
 
@@ -1269,7 +1271,9 @@ static void output_plain(int c)
   }
 }
 
+#ifndef _MSC_VER
 static unsigned int isqrt(unsigned int) __attribute__((__const__));
+#endif
 static unsigned int isqrt(unsigned int x)
 {
  unsigned int r;
diff -rupwN ../dnl3/gdchart/gdc.c ../lib3/gdchart/gdc.c
--- gdc.c	Thu Nov 12 23:00:28 1998
+++ gdc.c	Mon Mar 22 13:39:38 2010
@@ -77,9 +77,9 @@ GDCImageStringNL( gdImagePtr		im,
 {
 	int		i;
 	int		len;
-	int     max_len;
+	int     max_len = 0;
 	short   strs_num = cnt_nl( str, &max_len );
-	char    sub_str[max_len+1];
+	char    *sub_str = new char[max_len+1];
 
 	len      = -1;
 	strs_num = -1;
@@ -107,12 +107,13 @@ GDCImageStringNL( gdImagePtr		im,
 						   f->f,
 						   xpos,
 						   y + (f->h-1)*strs_num,
-						   sub_str,
+						   (unsigned char*)sub_str,
 						   clr );
 			len = -1;
 			}
 		}
 	while( *(str+i) );
+	delete [] sub_str;
 }
 
 /* ------------------------------------------------------------------------ */
@@ -130,7 +131,7 @@ out_err( int			GIFWIDTH,
 		 FILE			*fptr,
 		 unsigned long	BGColor,
 		 unsigned long	LineColor,
-		 char			*err_str )
+		 const char		*err_str )
 {
 
 	gdImagePtr	im;
@@ -140,7 +141,7 @@ out_err( int			GIFWIDTH,
 
 	if( (GDC_hold_img & GDC_REUSE_IMAGE) &&
 		GDC_image != (void*)NULL )
-		im = GDC_image;
+		im = (gdImage*)GDC_image;
 	else
 		im = gdImageCreate( GIFWIDTH, GIFHEIGHT );
 
@@ -151,7 +152,7 @@ out_err( int			GIFWIDTH,
 				   gdFontMediumBold,
 				   GIFWIDTH/2 - GDC_fontc[GDC_MEDBOLD].w*strlen(err_str)/2,
 				   GIFHEIGHT/3,
-				   err_str,
+				   (unsigned char*)err_str,
 				   lineclr );
 
 	/* usually GDC_generate_gif is used in conjunction with hard or hold options */
diff -rupwN ../dnl3/gdchart/gdc.h ../lib3/gdchart/gdc.h
--- gdc.h	Thu Nov 12 23:00:42 1998
+++ gdc.h	Mon Mar 22 13:40:04 2010
@@ -8,6 +8,8 @@ General header common to chart (xy[z]) a
 #define _GDC_H
 
 #include <math.h>
+#include <string.h>
+#include <stdlib.h>
 #ifdef GDC_INCL
 #include "gd.h"
 #include "gdfonts.h"
@@ -22,6 +24,35 @@ General header common to chart (xy[z]) a
 #define FALSE	0
 #endif
 
+#ifndef MAXFLOAT
+#	define MAXFLOAT ((float)3.40282346638528860e+38)
+#endif
+
+#ifndef MAXINT
+#	define MAXINT ((int)0x7fffffff)
+#endif
+
+#ifndef MAXSHORT
+#	define MAXSHORT ((short)0x7fff)
+#endif
+
+#ifdef _MSC_VER
+
+	template< typename T >
+		inline T rint( T nr )
+		{
+			T f = floor(nr);
+			T c = ceil(nr);
+			return (((c-nr) >= (nr-f)) ? f :c);
+		}
+
+#endif
+
+#ifndef M_PI
+#	define M_PI		( (double)3.141592654 )
+#	define M_PI_2	( M_PI * (double)2 )
+#endif
+
 #define GDC_NOVALUE			-MAXFLOAT
 #define GDC_NULL			GDC_NOVALUE
 
@@ -113,6 +144,6 @@ void	out_err( int			GIFWIDTH,
 				 FILE*,
 				 unsigned long	BGColor,
 				 unsigned long	LineColor,
-				 char			*str );
+				 const char		*str );
 
 #endif /*!_GDC_H*/
diff -rupwN ../dnl3/gdchart/gdc_pie.c ../lib3/gdchart/gdc_pie.c
--- gdc_pie.c	Thu Nov 12 23:00:55 1998
+++ gdc_pie.c	Mon Mar 22 13:41:02 2010
@@ -1,7 +1,9 @@
 /* GDCHART 0.94b  GDC_PIE.C  12 Nov 1998 */
 
 #include <stdio.h>
+#ifndef _MSC_VER
 #include <values.h>
+#endif
 #include <math.h>
 
 #define GDC_INCL
@@ -65,8 +67,11 @@ static float				dist_foo1, dist_foo2;
  * order by angle opposite (180) of depth angle
  * comparing across 0-360 line
 \* ------------------------------------------------------- */
-static int ocmpr( struct tmp_slice_t *a, struct tmp_slice_t *b )
+static int ocmpr( const void *_a, const void *_b )
 {
+	struct tmp_slice_t *a = (tmp_slice_t*)_a;
+	struct tmp_slice_t *b = (tmp_slice_t*)_b;
+
 	if( RAD_DIST1(a->angle) < RAD_DIST2(b->angle) )
 		return 1;
 	if( RAD_DIST1(a->angle) > RAD_DIST2(b->angle) )
@@ -115,8 +120,8 @@ pie_gif( short			GIFWIDTH,
 				PlotColor,
 				EdgeColor,
 				EdgeColorShd,
-				SliceColor[num_points],
-				SliceColorShd[num_points];
+				*SliceColor = new int[num_points],
+				*SliceColorShd = new int[num_points];
 
 	float		rad = 0.0;					// radius
 	float		tot_val = 0.0;
@@ -131,8 +136,8 @@ pie_gif( short			GIFWIDTH,
 	short		num_slices1 = 0,
 				num_slices2 = 0;
 	char		any_too_small = FALSE;
-	char		others[num_points];
-	float		slice_angle[3][num_points];	// must be used with others[]
+	char		*others = new char[num_points];
+	float		*slice_angle[3] = { new float[num_points], new float[num_points], new float[num_points] };	// must be used with others[]
 	char		threeD = ( type == GDC_3DPIE );
 
 	int			xdepth_3D      = 0,			// affects PX()
@@ -183,16 +188,16 @@ pie_gif( short			GIFWIDTH,
 	for( i=0; i<num_points; ++i )
 		{
 		float	this_pct = val[i]/tot_val;						/* should never be > 100% */
-		float	this = this_pct*(2.0*M_PI);						/* pie-portion */
+		float	_this = this_pct*(2.0*M_PI);					/* pie-portion */
 		if( (this_pct > min_grphable) ||						/* too small */
 			(!GDCPIE_missing || !GDCPIE_missing[i]) )			/* still want angles */
 			{
 			int this_explode = GDCPIE_explode? GDCPIE_explode[i]: 0;
 			double	this_sin;
 			double	this_cos;
-			slice_angle[0][i] = this/2.0+last;				/* mid-point on full pie */
+			slice_angle[0][i] = _this/2.0+last;				/* mid-point on full pie */
 			slice_angle[1][i] = last;						/* 1st on full pie */
-			slice_angle[2][i] = this+last;					/* 2nd on full pie */
+			slice_angle[2][i] = _this+last;					/* 2nd on full pie */
 			this_sin        = sin( (double)slice_angle[0][i] );
 			this_cos        = cos( (double)slice_angle[0][i] );
 
@@ -302,7 +307,7 @@ pie_gif( short			GIFWIDTH,
 			others[i] = TRUE;
 			slice_angle[0][i] = -MAXFLOAT;
 			}
-		last += this;
+		last += _this;
 		}
 	}
 
@@ -385,7 +390,7 @@ pie_gif( short			GIFWIDTH,
 		/* fill in connection to foreground pie */
 		/* this is where we earn our keep */
 		{
-		struct tmp_slice_t	tmp_slice[2*num_points+2];
+		struct tmp_slice_t	*tmp_slice = new tmp_slice_t[2*num_points+2];
 		int					t,
 							num_slice_angles = 0;
 
@@ -460,6 +465,8 @@ pie_gif( short			GIFWIDTH,
 							 EdgeColorShd );
 				}
 			}
+
+			delete [] tmp_slice;
 		}
 		}
 
@@ -581,6 +588,7 @@ pie_gif( short			GIFWIDTH,
 											break;
 					case GDCPIE_PCT_NONE:
 					default:
+						break;
 					}
 
 				if( GDCPIE_percent_labels != GDCPIE_PCT_NONE )
@@ -589,7 +597,7 @@ pie_gif( short			GIFWIDTH,
 								   slice_angle[0][i] <= M_PI? pctx:
 															  pctx+lbl_wdth-pct_wdth,
 								   pcty,
-								   pct_str,
+								   (unsigned char*)pct_str,
 								   LineColor );
 				if( lbl[i] )
 					GDCImageStringNL( im,
@@ -613,5 +621,9 @@ pie_gif( short			GIFWIDTH,
 	gdImageGif(im, gif_fptr);
 
 	gdImageDestroy(im);
+
+	delete [] others;
+	delete [] SliceColor;
+	delete [] SliceColorShd;
 	return;
 }
diff -rupwN ../dnl3/gdchart/gdc_pie_samp.c ../lib3/gdchart/gdc_pie_samp.c
--- gdc_pie_samp.c	Thu Nov 12 23:01:08 1998
+++ gdc_pie_samp.c	Mon Mar 22 13:41:11 2010
@@ -4,7 +4,7 @@
 /*  vi: :set tabstop=4 */
 
 #include <stdio.h>
-#include <values.h>
+//#include <values.h>
 #include <math.h>
 
 #include "gdc.h"
diff -rupwN ../dnl3/gdchart/gdchart.c ../lib3/gdchart/gdchart.c
--- gdchart.c	Sun Apr 18 18:37:46 1999
+++ gdchart.c	Mon Mar 22 13:42:54 2010
@@ -3,11 +3,16 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#ifndef _MSC_VER
 #include <values.h>
+#endif
 #include <math.h>
 #include <string.h>
 #include <stdarg.h>
+
+#ifndef _WIN32_WCE
 #include <errno.h>
+#endif
 
 #define GDC_INCL
 #define GDC_LIB
@@ -95,13 +100,13 @@ draw_3d_line( gdImagePtr	im,
 {
 #define F(x,i)	(int)( (float)((x)-x1)*slope[i]+(float)y1[i] )
 	float		depth_slope  = xdepth==0? MAXFLOAT: (float)ydepth/(float)xdepth;
-	float		slope[num_sets];
-	int			lnclr[num_sets],
-				shclr[num_sets];
+	float		*slope = new float[num_sets];
+	int			*lnclr = new int[num_sets],
+				*shclr = new int[num_sets];
 	int			i;
 	int			x;
 	gdPoint		poly[4];
-	struct YS	ypts[num_sets];
+	struct YS	*ypts = new YS[num_sets];
 
 	for( i=0; i<num_sets; ++i )
 		{
@@ -134,6 +139,11 @@ draw_3d_line( gdImagePtr	im,
 							 -ypts[i].slope<=depth_slope? ypts[i].shclr: ypts[i].lnclr );
 			}
 		}
+
+	delete [] slope;
+	delete [] lnclr;
+	delete [] shclr;
+	delete [] ypts;
 }
 
 /* ------------------------------------------------------------------------- */
@@ -342,17 +352,18 @@ out_graph( short		GIFWIDTH,		/* no check
 
 	/* args */
 	int			setno = 0;				// affects PX() and PY()
-	float		*uvals[ type == GDC_HILOCLOSE        ||
+	int			_num_sets = num_sets;
+	float		**uvals = new float*[ type == GDC_HILOCLOSE        ||
 						type == GDC_3DHILOCLOSE      ||
 						type == GDC_3DCOMBO_HLC_BAR  ||
 						type == GDC_3DCOMBO_HLC_AREA ||
 						type == GDC_COMBO_HLC_BAR    ||
-						type == GDC_COMBO_HLC_AREA?  num_sets *= 3:	// 1 more last set is vol
+						type == GDC_COMBO_HLC_AREA?  _num_sets *= 3:	// 1 more last set is vol
 						type == GDC_COMBO_LINE_BAR   ||
 						type == GDC_3DCOMBO_LINE_BAR ||
 						type == GDC_3DCOMBO_LINE_AREA||
-						type == GDC_COMBO_LINE_AREA? num_sets:		// 1 more last set is vol
-						num_sets ];
+						type == GDC_COMBO_LINE_AREA? _num_sets:		// 1 more last set is vol
+						_num_sets ];
 	float		*uvol;
 
 	int			BGColor,
@@ -360,17 +371,27 @@ out_graph( short		GIFWIDTH,		/* no check
 				PlotColor,
 				GridColor,
 				VolColor,
-				ExtVolColor[num_points],
+				*ExtVolColor = new int[num_points],
 				ThumbDColor,
 				ThumbLblColor,
 				ThumbUColor,
 //				ArrowDColor,
 //				ArrowUColor,
 				AnnoteColor,
-				ExtColor[num_sets][num_points];
+				**ExtColor;
 																// shade colors only with 3D
 //	int			ExtColorShd[threeD?1:num_sets][threeD?1:num_points]; // compiler limitation
-	int			ExtColorShd[num_sets][num_points];
+	int			**ExtColorShd;
+
+	if ( num_sets != _num_sets )
+		return -1;
+
+	ExtColor = new int*[ num_sets ];
+	ExtColorShd = new int*[ num_sets ];
+	for ( int i = 0; i < num_sets; i++ )
+	{	ExtColor[ i ] = new int[ num_points ];
+		ExtColorShd[ i ] = new int[ num_points ];
+	} // end for
 
 	/* idiot checks */
 	if( GIFWIDTH<=0 || GIFHEIGHT<=0 || (!gif_fptr && GDC_generate_gif) )
@@ -694,7 +715,7 @@ out_graph( short		GIFWIDTH,		/* no check
 	/* ----- OK start the graphic ----- */
 	if( (GDC_hold_img & GDC_REUSE_IMAGE) &&
 		GDC_image != (void*)NULL )
-		im = GDC_image;
+		im = (gdImage*)GDC_image;
 	else
 		im = gdImageCreate( GIFWIDTH, GIFHEIGHT );
 
@@ -802,7 +823,7 @@ out_graph( short		GIFWIDTH,		/* no check
 					   GDC_fontc[GDC_xtitle_size].f,
 					   GIFWIDTH/2 - strlen(GDC_xtitle)*GDC_fontc[GDC_xtitle_size].w/2,
 					   GIFHEIGHT-GDC_fontc[GDC_xtitle_size].h-1,
-					   GDC_xtitle,
+					   (unsigned char*)GDC_xtitle,
 					   titlecolor );
 		}
 
@@ -886,7 +907,7 @@ out_graph( short		GIFWIDTH,		/* no check
 														 strlen(nmrtr)*GDC_fontc[GDC_yaxisfont_size-1].w) :
 														1 ),
 										   PY(tmp_y)-GDC_fontc[GDC_yaxisfont_size].h/2,
-										   whole,
+										   (unsigned char*)whole,
 										   labelcolor );
 							}
 						if( n )
@@ -897,20 +918,20 @@ out_graph( short		GIFWIDTH,		/* no check
 												  -GDC_fontc[GDC_yaxisfont_size].w
 												  -strlen(nmrtr)*GDC_fontc[GDC_yaxisfont_size-1].w + 1,
 										   PY(tmp_y)-GDC_fontc[GDC_yaxisfont_size].h/2 + 1,
-										   nmrtr,
+										   (unsigned char*)nmrtr,
 										   labelcolor );
 							gdImageString( im,
 										   GDC_fontc[GDC_yaxisfont_size].f,
 										   PX(0)-2-GDC_fontc[GDC_yaxisfont_size].w
 												  -strlen(nmrtr)*GDC_fontc[GDC_yaxisfont_size-1].w,
 										   PY(tmp_y)-GDC_fontc[GDC_yaxisfont_size].h/2,
-										   "/",
+										   (unsigned char*)"/",
 										   labelcolor );
 							gdImageString( im,
 										   GDC_fontc[GDC_yaxisfont_size-1].f,
 										   PX(0)-2-strlen(nmrtr)*GDC_fontc[GDC_yaxisfont_size-1].w - 2,
 										   PY(tmp_y)-GDC_fontc[GDC_yaxisfont_size].h/2 + 3,
-										   dmntr,
+										   (unsigned char*)dmntr,
 										   labelcolor );
 							}
 						}
@@ -919,7 +940,7 @@ out_graph( short		GIFWIDTH,		/* no check
 									   GDC_fontc[GDC_yaxisfont_size].f,
 									   PX(0)-2-strlen(ylbl_str)*GDC_fontc[GDC_yaxisfont_size].w,
 									   PY(tmp_y)-GDC_fontc[GDC_yaxisfont_size].h/2,
-									   ylbl_str,
+									   (unsigned char*)ylbl_str,
 									   labelcolor );
 
 
@@ -942,7 +963,7 @@ out_graph( short		GIFWIDTH,		/* no check
 								   GDC_fontc[GDC_yaxisfont_size].f,
 								   PX(num_points-1+(do_bar?2:0))+6,
 								   PY(tmp_y)-GDC_fontc[GDC_yaxisfont_size].h/2,
-								   vylbl,
+								   (unsigned char*)vylbl,
 								   label2color );
 					setno = 0;
 					}
@@ -971,7 +992,7 @@ out_graph( short		GIFWIDTH,		/* no check
 							 GIFWIDTH-(1+GDC_fontc[GDC_ytitle_size].h),
 							 strlen(GDC_ytitle2)*GDC_fontc[GDC_ytitle_size].w/2 +
 								grapheight/2,
-							 GDC_ytitle2,
+							 (unsigned char*)GDC_ytitle2,
 							 titlecolor );
 			}
 
@@ -985,7 +1006,7 @@ out_graph( short		GIFWIDTH,		/* no check
 							 GDC_fontc[GDC_ytitle_size].f,
 							 0,
 							 GIFHEIGHT/2 + ytit_len/2,
-							 GDC_ytitle,
+							 (unsigned char*)GDC_ytitle,
 							 titlecolor );
 			}
 		}
@@ -1062,7 +1083,7 @@ out_graph( short		GIFWIDTH,		/* no check
 #define					LBX		GDC_fontc[GDC_xaxisfont_size]
 						int		xlen = 0;
 						short	xstrs_num = cnt_nl( xlbl[xi], &xlen );
-						char	sub_xlbl[xlen+1];
+						char	*sub_xlbl = new char[xlen+1];
 //						int		xlbl_strt = -1+ PX((float)i+(float)(do_bar?((float)num_points/(float)num_xlbls):0.0)) - (int)((float)(LBX.h-2)*((float)xstrs_num/2.0));
 						int		xlbl_strt = -1+ PX(i) - (int)((float)(LBX.h-2)*((float)xstrs_num/2.0));
 
@@ -1083,12 +1104,13 @@ out_graph( short		GIFWIDTH,		/* no check
 												 LBX.f,
 												 xlbl_strt + (LBX.h-1)*xstrs_num,
 												 PY(lowest) + 2 + 1 + LBX.w*xlen,
-												 sub_xlbl,
+												 (unsigned char*)sub_xlbl,
 												 labelcolor );
 								xlen = -1;
 								}
 							} while( xlbl[xi][j] );
 #undef LBX
+							delete [] sub_xlbl;
 						}
 				}
 		}
@@ -1175,7 +1197,7 @@ out_graph( short		GIFWIDTH,		/* no check
 
 			case GDC_STACK_LAYER:
 				{
-				float	lasty[num_points];
+				float	*lasty = new float[num_points];
 				j = 0;
 //				for( i=0; i<num_points; ++i )
 //					if( uvals[j][i] != GDC_NOVALUE )
@@ -1189,7 +1211,7 @@ out_graph( short		GIFWIDTH,		/* no check
 //						}
 				for( i=0; i<num_points; ++i )
 					{
-					struct BS	barset[num_sets];
+					struct BS	*barset = new BS[num_sets];
 					float		lasty_pos = 0.0;
 					float		lasty_neg = 0.0;
 					int			k;
@@ -1226,7 +1248,9 @@ out_graph( short		GIFWIDTH,		/* no check
 									 barset[j].clr,
 									 barset[j].shclr );
 						}
+						delete [] barset;
 					}
+					delete [] lasty;
 				}
 				break;
 
@@ -1270,8 +1294,8 @@ out_graph( short		GIFWIDTH,		/* no check
 		case GDC_3DCOMBO_LINE_BAR:
 		case GDC_3DCOMBO_LINE_AREA:
 			{
-			int	y1[num_sets],
-				y2[num_sets];
+			int	*y1 = new int[num_sets],
+				*y2 = new int[num_sets];
 
 			for( i=1; i<num_points; ++i )
 				{
@@ -1301,8 +1325,8 @@ out_graph( short		GIFWIDTH,		/* no check
 					GDC_stack_type == GDC_STACK_SUM )			// all same plane
 					{
 					int		set;
-					int		clr[num_sets],
-							clrshd[num_sets];
+					int		*clr = new int[num_sets],
+							*clrshd = new int[num_sets];
 					float	usey1 = 0.0,
 							usey2 = 0.0;
 					for( j=0,set=0; j<num_sets; ++j )
@@ -1333,8 +1357,13 @@ out_graph( short		GIFWIDTH,		/* no check
 						  set,
 						  clr,
 						  clrshd );
+
+						delete [] clr;
+						delete [] clrshd;
 					}
 				}
+				delete [] y1;
+				delete [] y2;
 			}
 			break;
 
@@ -1344,7 +1373,7 @@ out_graph( short		GIFWIDTH,		/* no check
 			{
 			case GDC_STACK_SUM:
 				{
-				float	lasty[num_points];
+				float	*lasty = new float[num_points];
 				j = 0;
 				for( i=1; i<num_points; ++i )
 					if( uvals[j][i] != GDC_NOVALUE )
@@ -1368,6 +1397,7 @@ out_graph( short		GIFWIDTH,		/* no check
                                              threeD? ExtColorShd[j][i]: ExtColor[j][i] );
 							lasty[i] += uvals[j][i];
 							}
+					delete [] lasty;
 				}
 				break;
 
@@ -1586,7 +1616,7 @@ out_graph( short		GIFWIDTH,		/* no check
 	/*  use it to draw a legend, and/or add their own */
 	if( GDC_scatter )
 		{
-		int		scatter_clr[GDC_num_scatter_pts];
+		int		*scatter_clr = new int[GDC_num_scatter_pts];
 		gdPoint	ct[3];
 
 		for( i=0; i<GDC_num_scatter_pts; ++i )
@@ -1635,6 +1665,7 @@ out_graph( short		GIFWIDTH,		/* no check
 					break;
 				}
 			}
+			delete [] scatter_clr;
 		}
 
 
@@ -1826,5 +1857,15 @@ out_graph( short		GIFWIDTH,		/* no check
 		GDC_image = (void*)im;
 	else
 		gdImageDestroy(im);
+
+	delete [] uvals;
+
+	for ( int i = 0; i < num_sets; i++ )
+	{	delete [] ExtColor[ i ];
+		delete [] ExtColorShd[ i ];
+	} // end for
+	delete [] ExtColor;
+	delete [] ExtColorShd;
+
 	return 0;
 }
diff -rupwN ../dnl3/gdchart/gdchart.h ../lib3/gdchart/gdchart.h
--- gdchart.h	Thu Nov 12 23:02:00 1998
+++ gdchart.h	Mon Mar 22 13:43:15 2010
@@ -159,6 +159,16 @@ int GDC_out_graph( short		gifwidth,
 				   char			*xlbl[],
 				   int			num_sets,
 								... );
+
+int out_graph( short		GIFWIDTH,		
+			   short		GIFHEIGHT,		
+			   FILE			*gif_fptr,		
+			   GDC_CHART_T	type,
+			   int			num_points,								
+			   char			*xlbl[],
+			   int			num_sets,
+						... );
+
 /* expected params (...) for each chart type:
 GDC_LINE
 GDC_BAR
diff -rupwN ../dnl3/gdchart/price_conv.c ../lib3/gdchart/price_conv.c
--- price_conv.c	Thu Nov 12 23:02:29 1998
+++ price_conv.c	Mon Mar 22 13:43:29 2010
@@ -74,7 +74,7 @@ price_to_str( float	price,
 		if( whole<0 && numr<0.0 )
 			numr = -numr;
 		*numorator = (int)numr;
-		*demoninator = (int)pow(2.0, (float)cnt);
+		*demoninator = (int)pow(2.0f, (float)cnt);
 		*decimal = whole;
 		sprintf( rtn, "%d %d/%d", whole,
 								  (int)numr,
